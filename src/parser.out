Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> program_block
Rule 2     array_type -> ARRAY LBRAC index_type_list RBRAC OF component_type
Rule 3     array_type -> ARRAY OF component_type
Rule 4     index_type_list -> index_type
Rule 5     index_type_list -> index_type_list COMMA index_type
Rule 6     index_type -> ordinal_type
Rule 7     ordinal_type -> new_ordinal_type
Rule 8     ordinal_type -> ordinal_type_name
Rule 9     ordinal_type -> type_inquiry
Rule 10    ordinal_type -> discriminated_schema
Rule 11    new_ordinal_type -> enumerated_type
Rule 12    new_ordinal_type -> subrange_type
Rule 13    enumerated_type -> LPAREN identifier_list RPAREN
Rule 14    identifier_list -> identifier
Rule 15    identifier_list -> identifier_list COMMA identifier
Rule 16    identifier -> ID
Rule 17    subrange_type -> subrange_bound DOTDOT subrange_bound
Rule 18    subrange_bound -> expression
Rule 19    expression -> simple_expression
Rule 20    expression -> expression relational_operator simple_expression
Rule 21    simple_expression -> simple_expression_term
Rule 22    simple_expression -> sign simple_expression_term
Rule 23    simple_expression_term -> term
Rule 24    simple_expression_term -> simple_expression_term adding_operator term
Rule 25    term -> factor
Rule 26    term -> term multiplying_operator factor
Rule 27    factor -> primary
Rule 28    factor -> primary exponentiating_operator primary
Rule 29    primary -> variable_access
Rule 30    primary -> unsigned_constant
Rule 31    primary -> set_constructor
Rule 32    primary -> LPAREN expression RPAREN
Rule 33    primary -> NOT primary
Rule 34    variable_access -> entire_variable
Rule 35    variable_access -> component_variable
Rule 36    variable_access -> substring_variable
Rule 37    variable_access -> pointer_variable
Rule 38    entire_variable -> name
Rule 39    entire_variable -> name actual_parameter_list
Rule 40    component_variable -> indexed_variable
Rule 41    component_variable -> field_designator
Rule 42    indexed_variable -> variable_access LBRAC index_expression_list RBRAC
Rule 43    index_expression_list -> index_expression
Rule 44    index_expression_list -> index_expression_list COMMA index_expression
Rule 45    index_expression -> expression
Rule 46    field_designator -> variable_access DOT identifier
Rule 47    name -> identifier
Rule 48    name -> name DOT identifier
Rule 49    pointer_variable -> variable_access UPARROW
Rule 50    substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC
Rule 51    actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN
Rule 52    actual_parameter_list_list -> actual_parameter
Rule 53    actual_parameter_list_list -> actual_parameter_list_list COMMA actual_parameter
Rule 54    actual_parameter -> expression
Rule 55    actual_parameter -> expression COLON expression
Rule 56    actual_parameter -> expression COLON expression COLON expression
Rule 57    unsigned_constant -> UNSIGNEDNUMBER
Rule 58    unsigned_constant -> CHARACTER_STRING
Rule 59    unsigned_constant -> NIL
Rule 60    unsigned_constant -> EXTENDEDNUMBER
Rule 61    sign -> PLUS
Rule 62    sign -> MINUS
Rule 63    set_constructor -> LBRAC member_designator_list RBRAC
Rule 64    set_constructor -> LBRAC RBRAC
Rule 65    member_designator_list -> member_designator
Rule 66    member_designator_list -> member_designator_list COMMA member_designator
Rule 67    member_designator -> expression
Rule 68    member_designator -> expression DOTDOT expression
Rule 69    array_value -> LBRAC array_value_element_list RBRAC
Rule 70    array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC
Rule 71    array_value -> LBRAC array_value_element_list SEMICOLON RBRAC
Rule 72    array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC
Rule 73    array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC
Rule 74    array_value -> LBRAC array_value_element_list array_value_completer RBRAC
Rule 75    array_value -> LBRAC array_value_completer SEMICOLON RBRAC
Rule 76    array_value -> LBRAC array_value_completer RBRAC
Rule 77    array_value_element_list -> array_value_element
Rule 78    array_value_element_list -> array_value_element_list SEMICOLON array_value_element
Rule 79    array_value_completer -> OTHERWISE component_value
Rule 80    component_value -> expression
Rule 81    component_value -> array_value
Rule 82    component_value -> record_value
Rule 83    record_value -> LBRAC field_list_value RBRAC
Rule 84    field_list_value -> variant_part_value
Rule 85    field_list_value -> variant_part_value SEMICOLON
Rule 86    field_list_value -> fixed_part_value
Rule 87    field_list_value -> fixed_part_value SEMICOLON
Rule 88    field_list_value -> fixed_part_value SEMICOLON variant_part_value
Rule 89    field_list_value -> fixed_part_value SEMICOLON variant_part_value SEMICOLON
Rule 90    field_list_value -> empty
Rule 91    variant_part_value -> CASE tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC
Rule 92    variant_part_value -> CASE expression OF LBRAC field_list_value RBRAC
Rule 93    tag_field_identifier -> identifier
Rule 94    constant_expression -> expression
Rule 95    fixed_part_value -> field_value
Rule 96    fixed_part_value -> fixed_part_value SEMICOLON field_value
Rule 97    field_value -> identifier_list COLON component_value
Rule 98    array_value_element -> member_designator_list COLON component_value
Rule 99    exponentiating_operator -> STARSTAR
Rule 100   exponentiating_operator -> POW
Rule 101   multiplying_operator -> STAR
Rule 102   multiplying_operator -> SLASH
Rule 103   multiplying_operator -> DIV
Rule 104   multiplying_operator -> MOD
Rule 105   multiplying_operator -> AND
Rule 106   multiplying_operator -> AND_THEN
Rule 107   adding_operator -> PLUS
Rule 108   adding_operator -> MINUS
Rule 109   adding_operator -> GL
Rule 110   adding_operator -> OR
Rule 111   adding_operator -> OR_ELSE
Rule 112   relational_operator -> EQUAL
Rule 113   relational_operator -> LG
Rule 114   relational_operator -> LT
Rule 115   relational_operator -> GT
Rule 116   relational_operator -> LE
Rule 117   relational_operator -> GE
Rule 118   relational_operator -> IN
Rule 119   discriminated_schema -> name actual_discriminant_part
Rule 120   actual_discriminant_part -> LPAREN actual_parameter_list RPAREN
Rule 121   type_inquiry -> TYPE OF name
Rule 122   ordinal_type_name -> name
Rule 123   component_type -> type_denoter
Rule 124   type_denoter -> type_denoter_middle_part
Rule 125   type_denoter -> BINDABLE type_denoter_middle_part
Rule 126   type_denoter -> type_denoter_middle_part initial_state_specifier
Rule 127   type_denoter -> BINDABLE type_denoter_middle_part initial_state_specifier
Rule 128   type_denoter_middle_part -> name
Rule 129   type_denoter_middle_part -> new_type
Rule 130   type_denoter_middle_part -> type_inquiry
Rule 131   type_denoter_middle_part -> discriminated_schema
Rule 132   new_type -> new_ordinal_type
Rule 133   new_type -> new_structured_type
Rule 134   new_type -> new_pointer_type
Rule 135   new_type -> restricted_type
Rule 136   new_structured_type -> unpacked_structured_type
Rule 137   new_structured_type -> PACKED unpacked_structured_type
Rule 138   unpacked_structured_type -> array_type
Rule 139   unpacked_structured_type -> record_type
Rule 140   unpacked_structured_type -> set_type
Rule 141   unpacked_structured_type -> file_type
Rule 142   record_type -> RECORD field_list END
Rule 143   field_list -> field_list_left_part
Rule 144   field_list -> empty
Rule 145   field_list_left_part -> fixed_part SEMICOLON variant_part
Rule 146   field_list_left_part -> fixed_part
Rule 147   field_list_left_part -> fixed_part SEMICOLON
Rule 148   field_list_left_part -> variant_part
Rule 149   field_list_left_part -> variant_part SEMICOLON
Rule 150   fixed_part -> record_section
Rule 151   fixed_part -> fixed_part SEMICOLON record_section
Rule 152   record_section -> identifier_list COLON type_denoter
Rule 153   variant_part -> CASE variant_selector OF variant_list_element_list
Rule 154   variant_part -> CASE variant_selector OF variant_list_element_list SEMICOLON variant_part_completer
Rule 155   variant_part -> CASE variant_selector OF variant_list_element_list variant_part_completer
Rule 156   variant_part -> CASE variant_selector OF variant_part_completer
Rule 157   variant_list_element_list -> variant_list_element
Rule 158   variant_list_element_list -> variant_list_element_list SEMICOLON variant_list_element
Rule 159   variant_list_element -> member_designator_list COLON variant_denoter
Rule 160   variant_denoter -> LPAREN field_list RPAREN
Rule 161   variant_selector -> tag_field COLON tag_type
Rule 162   variant_selector -> tag_type
Rule 163   tag_field -> identifier
Rule 164   tag_type -> ordinal_type_name
Rule 165   variant_part_completer -> OTHERWISE variant_denoter
Rule 166   set_type -> SET OF base_type
Rule 167   base_type -> ordinal_type
Rule 168   file_type -> FILE LBRAC index_type RBRAC OF component_type
Rule 169   file_type -> FILE OF component_type
Rule 170   new_pointer_type -> UPARROW domain_type
Rule 171   domain_type -> name
Rule 172   restricted_type -> RESTRICTED name
Rule 173   initial_state_specifier -> VALUE component_value
Rule 174   program_block -> program_component
Rule 175   program_block -> program_block program_component
Rule 176   program_component -> main_program_declaration DOT
Rule 177   program_component -> module_declaration DOT
Rule 178   main_program_declaration -> program_heading SEMICOLON main_program_block
Rule 179   program_heading -> PROGRAM_WORD identifier
Rule 180   program_heading -> PROGRAM_WORD identifier LPAREN program_parameter_list RPAREN
Rule 181   program_parameter_list -> identifier_list
Rule 182   main_program_block -> block
Rule 183   block -> import_part block_middle_part statement_part
Rule 184   block -> import_part statement_part
Rule 185   block_middle_part -> label_declaration_part
Rule 186   block_middle_part -> constant_definition_part
Rule 187   block_middle_part -> type_definition_part
Rule 188   block_middle_part -> variable_declaration_part
Rule 189   block_middle_part -> procedure_and_function_declaration_part
Rule 190   block_middle_part -> block_middle_part label_declaration_part
Rule 191   block_middle_part -> block_middle_part constant_definition_part
Rule 192   block_middle_part -> block_middle_part type_definition_part
Rule 193   block_middle_part -> block_middle_part variable_declaration_part
Rule 194   block_middle_part -> block_middle_part procedure_and_function_declaration_part
Rule 195   import_part -> IMPORT import_specification_list
Rule 196   import_part -> empty
Rule 197   import_specification_list -> import_specification SEMICOLON
Rule 198   import_specification_list -> import_specification_list import_specification SEMICOLON
Rule 199   import_specification -> interface_identifier
Rule 200   import_specification -> interface_identifier access_qualifier
Rule 201   import_specification -> interface_identifier import_qualifier
Rule 202   import_specification -> interface_identifier access_qualifier import_qualifier
Rule 203   interface_identifier -> identifier
Rule 204   access_qualifier -> QUALIFIED
Rule 205   import_qualifier -> selective_import_option LPAREN import_list RPAREN
Rule 206   import_qualifier -> LPAREN import_list RPAREN
Rule 207   selective_import_option -> ONLY
Rule 208   import_list -> import_clause
Rule 209   import_list -> import_list COMMA import_clause
Rule 210   import_clause -> constituent_identifier
Rule 211   import_clause -> import_renaming_clause
Rule 212   constituent_identifier -> identifier
Rule 213   import_renaming_clause -> constituent_identifier EG identifier
Rule 214   label_declaration_part -> LABEL_WORD label_list SEMICOLON
Rule 215   label_list -> label
Rule 216   label_list -> label_list COMMA label
Rule 217   label -> UNSIGNEDNUMBER
Rule 218   constant_definition_part -> CONST constant_definition_list
Rule 219   constant_definition_list -> constant_definition SEMICOLON
Rule 220   constant_definition_list -> constant_definition_list constant_definition SEMICOLON
Rule 221   constant_definition -> identifier EQUAL constant_expression
Rule 222   type_definition_part -> TYPE type_definition_list
Rule 223   type_definition_list -> type_definition SEMICOLON
Rule 224   type_definition_list -> schema_definition SEMICOLON
Rule 225   type_definition_list -> type_definition_list type_definition SEMICOLON
Rule 226   type_definition_list -> type_definition_list schema_definition SEMICOLON
Rule 227   type_definition -> identifier EQUAL type_denoter
Rule 228   schema_definition -> identifier formal_discriminant_part EQUAL type_denoter
Rule 229   formal_discriminant_part -> LPAREN discriminant_specification_list RPAREN
Rule 230   discriminant_specification_list -> discriminant_specification
Rule 231   discriminant_specification_list -> discriminant_specification_list SEMICOLON discriminant_specification
Rule 232   discriminant_specification -> identifier_list COLON ordinal_type_name
Rule 233   variable_declaration_part -> VAR variable_declaration_list
Rule 234   variable_declaration_list -> variable_declaration SEMICOLON
Rule 235   variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON
Rule 236   variable_declaration -> identifier_list COLON type_denoter
Rule 237   procedure_and_function_declaration_part -> procedure_declaration SEMICOLON
Rule 238   procedure_and_function_declaration_part -> function_declaration SEMICOLON
Rule 239   procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON
Rule 240   procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON
Rule 241   procedure_declaration -> procedure_heading SEMICOLON remote_directive
Rule 242   procedure_declaration -> procedure_heading SEMICOLON procedure_block
Rule 243   procedure_heading -> PROCEDURE name formal_parameter_list
Rule 244   procedure_heading -> PROCEDURE name
Rule 245   formal_parameter_list -> LPAREN formal_parameter_section_list RPAREN
Rule 246   formal_parameter_section_list -> formal_parameter_section
Rule 247   formal_parameter_section_list -> formal_parameter_section_list SEMICOLON formal_parameter_section
Rule 248   formal_parameter_section -> value_parameter_specification
Rule 249   formal_parameter_section -> variable_parameter_specification
Rule 250   formal_parameter_section -> procedural_parameter_specification
Rule 251   formal_parameter_section -> functional_parameter_specification
Rule 252   formal_parameter_section -> conformant_array_parameter_specification
Rule 253   value_parameter_specification -> identifier_list COLON parameter_form
Rule 254   value_parameter_specification -> PROTECTED identifier_list COLON parameter_form
Rule 255   parameter_form -> type_denoter_middle_part
Rule 256   variable_parameter_specification -> PROTECTED VAR identifier_list COLON parameter_form
Rule 257   variable_parameter_specification -> VAR identifier_list COLON parameter_form
Rule 258   procedural_parameter_specification -> procedure_heading
Rule 259   functional_parameter_specification -> function_heading
Rule 260   function_heading -> FUNCTION identifier COLON result_type
Rule 261   function_heading -> FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
Rule 262   function_heading -> FUNCTION identifier formal_parameter_list COLON result_type
Rule 263   function_heading -> FUNCTION identifier result_variable_specification COLON result_type
Rule 264   result_type -> name
Rule 265   result_variable_specification -> EQUAL identifier
Rule 266   conformant_array_parameter_specification -> PROTECTED value_conformant_array_specification
Rule 267   conformant_array_parameter_specification -> PROTECTED variable_conformant_array_specification
Rule 268   conformant_array_parameter_specification -> value_conformant_array_specification
Rule 269   conformant_array_parameter_specification -> variable_conformant_array_specification
Rule 270   value_conformant_array_specification -> identifier_list COLON conformant_array_form
Rule 271   conformant_array_form -> packed_conformant_array_form
Rule 272   conformant_array_form -> unpacked_conformant_array_form
Rule 273   packed_conformant_array_form -> PACKED ARRAY LBRAC index_type_specification RBRAC OF name
Rule 274   index_type_specification -> identifier DOTDOT identifier COLON ordinal_type_name
Rule 275   unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF name
Rule 276   unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form
Rule 277   index_type_specification_list -> index_type_specification
Rule 278   index_type_specification_list -> index_type_specification_list SEMICOLON index_type_specification
Rule 279   variable_conformant_array_specification -> VAR identifier_list COLON conformant_array_form
Rule 280   remote_directive -> directive
Rule 281   directive -> ID
Rule 282   procedure_block -> block
Rule 283   function_declaration -> function_heading SEMICOLON remote_directive
Rule 284   function_declaration -> function_identification SEMICOLON function_block
Rule 285   function_declaration -> function_heading SEMICOLON function_block
Rule 286   function_identification -> FUNCTION identifier
Rule 287   function_block -> block
Rule 288   statement_part -> compound_statement
Rule 289   compound_statement -> BEGIN statement_sequence END
Rule 290   statement_sequence -> statement
Rule 291   statement_sequence -> statement_sequence SEMICOLON statement
Rule 292   statement -> label COLON simple_statement
Rule 293   statement -> label COLON structured_statement
Rule 294   statement -> simple_statement
Rule 295   statement -> structured_statement
Rule 296   simple_statement -> empty
Rule 297   simple_statement -> assignment_statement
Rule 298   simple_statement -> procedure_statement
Rule 299   simple_statement -> goto_statement
Rule 300   assignment_statement -> variable_access ASSIGNMENT expression
Rule 301   procedure_statement -> name
Rule 302   procedure_statement -> name actual_parameter_list
Rule 303   goto_statement -> GOTO label
Rule 304   structured_statement -> compound_statement
Rule 305   structured_statement -> conditional_statement
Rule 306   structured_statement -> repetitive_statement
Rule 307   structured_statement -> with_statement
Rule 308   conditional_statement -> if_statement
Rule 309   conditional_statement -> case_statement
Rule 310   if_statement -> IF boolean_expression THEN statement
Rule 311   if_statement -> IF boolean_expression THEN statement else_part
Rule 312   boolean_expression -> expression
Rule 313   else_part -> ELSE statement
Rule 314   case_statement -> CASE case_index OF case_list_element_list END
Rule 315   case_statement -> CASE case_index OF case_statement_completer END
Rule 316   case_statement -> CASE case_index OF case_list_element_list case_statement_completer END
Rule 317   case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
Rule 318   case_statement -> CASE case_index OF case_list_element_list SEMICOLON END
Rule 319   case_statement -> CASE case_index OF case_statement_completer SEMICOLON END
Rule 320   case_statement -> CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
Rule 321   case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
Rule 322   case_list_element_list -> case_list_element
Rule 323   case_list_element_list -> case_list_element_list SEMICOLON case_list_element
Rule 324   case_list_element -> member_designator_list COLON statement
Rule 325   case_statement_completer -> OTHERWISE statement_sequence
Rule 326   case_index -> expression
Rule 327   repetitive_statement -> repeat_statement
Rule 328   repetitive_statement -> while_statement
Rule 329   repetitive_statement -> for_statement
Rule 330   repeat_statement -> REPEAT statement_sequence UNTIL boolean_expression
Rule 331   while_statement -> WHILE boolean_expression DO statement
Rule 332   for_statement -> FOR entire_variable iteration_clause DO statement
Rule 333   iteration_clause -> sequence_iteration
Rule 334   iteration_clause -> set_member_iteration
Rule 335   sequence_iteration -> ASSIGNMENT initial_value TO final_value
Rule 336   sequence_iteration -> ASSIGNMENT initial_value DOWNTO final_value
Rule 337   initial_value -> expression
Rule 338   final_value -> expression
Rule 339   set_member_iteration -> IN set_expression
Rule 340   set_expression -> expression
Rule 341   with_statement -> WITH with_list DO statement
Rule 342   with_list -> with_element
Rule 343   with_list -> with_list COMMA with_element
Rule 344   with_element -> variable_access
Rule 345   module_declaration -> module_heading
Rule 346   module_declaration -> module_heading SEMICOLON module_block
Rule 347   module_declaration -> module_identification SEMICOLON module_block
Rule 348   module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part END
Rule 349   module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
Rule 350   module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
Rule 351   module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part module_heading_middle_part END
Rule 352   module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part END
Rule 353   module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
Rule 354   module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
Rule 355   module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part END
Rule 356   module_heading_middle_part -> constant_definition_part
Rule 357   module_heading_middle_part -> type_definition_part
Rule 358   module_heading_middle_part -> variable_declaration_part
Rule 359   module_heading_middle_part -> procedure_and_function_heading_part
Rule 360   module_heading_middle_part -> module_heading_middle_part constant_definition_part
Rule 361   module_heading_middle_part -> module_heading_middle_part type_definition_part
Rule 362   module_heading_middle_part -> module_heading_middle_part variable_declaration_part
Rule 363   module_heading_middle_part -> module_heading_middle_part procedure_and_function_heading_part
Rule 364   procedure_and_function_heading_part -> procedure_heading SEMICOLON
Rule 365   procedure_and_function_heading_part -> function_heading SEMICOLON
Rule 366   interface_directive -> directive
Rule 367   interface_specification_part -> EXPORT export_part_list
Rule 368   export_part_list -> export_part SEMICOLON
Rule 369   export_part_list -> export_part_list export_part SEMICOLON
Rule 370   export_part -> identifier EQUAL LPAREN export_list RPAREN
Rule 371   export_list -> export_clause
Rule 372   export_list -> export_range
Rule 373   export_list -> export_list COMMA export_clause
Rule 374   export_list -> export_list COMMA export_range
Rule 375   export_clause -> exportable_name
Rule 376   export_clause -> export_renaming_clause
Rule 377   exportable_name -> name
Rule 378   exportable_name -> PROTECTED name
Rule 379   export_renaming_clause -> exportable_name EG identifier
Rule 380   export_range -> first_constant_name DOTDOT last_constant_name
Rule 381   first_constant_name -> name
Rule 382   last_constant_name -> name
Rule 383   module_parameter_list -> identifier_list
Rule 384   module_block -> import_part END
Rule 385   module_block -> import_part initialization_part END
Rule 386   module_block -> import_part finalization_part END
Rule 387   module_block -> import_part initialization_part finalization_part END
Rule 388   module_block -> import_part module_block_middle_part END
Rule 389   module_block -> import_part module_block_middle_part initialization_part END
Rule 390   module_block -> import_part module_block_middle_part finalization_part END
Rule 391   module_block -> import_part module_block_middle_part initialization_part finalization_part END
Rule 392   module_block_middle_part -> constant_definition_part
Rule 393   module_block_middle_part -> type_definition_part
Rule 394   module_block_middle_part -> variable_declaration_part
Rule 395   module_block_middle_part -> procedure_and_function_declaration_part
Rule 396   module_block_middle_part -> module_block_middle_part constant_definition_part
Rule 397   module_block_middle_part -> module_block_middle_part type_definition_part
Rule 398   module_block_middle_part -> module_block_middle_part variable_declaration_part
Rule 399   module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part
Rule 400   initialization_part -> TO BEGIN DO statement SEMICOLON
Rule 401   finalization_part -> TO END DO statement SEMICOLON
Rule 402   module_identification -> MODULE module_identifier implementation_directive
Rule 403   module_identifier -> identifier
Rule 404   implementation_directive -> directive
Rule 405   empty -> <empty>

Terminals, with rules where they appear

AND                  : 105
AND_THEN             : 106
ARRAY                : 2 3 273 275 276
ASSIGNMENT           : 300 335 336
BEGIN                : 289 400
BINDABLE             : 125 127
CASE                 : 91 92 153 154 155 156 314 315 316 317 318 319 320 321
CHARACTER_STRING     : 58
COLON                : 55 56 56 91 97 98 152 159 161 232 236 253 254 256 257 260 261 262 263 270 274 279 292 293 324
COMMA                : 5 15 44 53 66 209 216 343 373 374
COMMENT              : 
CONST                : 218
DIV                  : 103
DO                   : 331 332 341 400 401
DOT                  : 46 48 176 177
DOTDOT               : 17 50 68 274 380
DOWNTO               : 336
EG                   : 213 379
ELSE                 : 313
END                  : 142 289 314 315 316 317 318 319 320 321 348 349 350 351 352 353 354 355 384 385 386 387 388 389 390 391 401
EQUAL                : 112 221 227 228 265 370
EXPORT               : 367
EXTENDEDNUMBER       : 60
FILE                 : 168 169
FOR                  : 332
FUNCTION             : 260 261 262 263 286
GE                   : 117
GL                   : 109
GOTO                 : 303
GT                   : 115
ID                   : 16 281
IF                   : 310 311
IMPORT               : 195
IN                   : 118 339
LABEL_WORD           : 214
LBRAC                : 2 42 50 63 64 69 70 71 72 73 74 75 76 83 91 92 168 273 275 276
LE                   : 116
LG                   : 113
LPAREN               : 13 32 51 120 160 180 205 206 229 245 349 350 353 354 370
LT                   : 114
MINUS                : 62 108
MOD                  : 104
MODULE               : 348 349 350 351 352 353 354 355 402
NIL                  : 59
NOT                  : 33
OF                   : 2 3 91 92 121 153 154 155 156 166 168 169 273 275 276 314 315 316 317 318 319 320 321
ONLY                 : 207
OR                   : 110
OR_ELSE              : 111
OTHERWISE            : 79 165 325
PACKED               : 137 273
PLUS                 : 61 107
POW                  : 100
PROCEDURE            : 243 244
PROGRAM_WORD         : 179 180
PROTECTED            : 254 256 266 267 378
QUALIFIED            : 204
RBRAC                : 2 42 50 63 64 69 70 71 72 73 74 75 76 83 91 92 168 273 275 276
RECORD               : 142
REPEAT               : 330
RESTRICTED           : 172
RPAREN               : 13 32 51 120 160 180 205 206 229 245 349 350 353 354 370
SEMICOLON            : 70 71 72 72 73 75 78 85 87 88 89 89 96 145 147 149 151 154 158 178 197 198 214 219 220 223 224 225 226 231 234 235 237 238 239 240 241 242 247 278 283 284 285 291 317 318 319 320 321 321 323 346 347 348 349 350 351 352 353 354 355 364 365 368 369 400 401
SET                  : 166
SLASH                : 102
STAR                 : 101
STARSTAR             : 99
THEN                 : 310 311
TO                   : 335 400 401
TYPE                 : 121 222
UNSIGNEDNUMBER       : 57 217
UNTIL                : 330
UPARROW              : 49 170
VALUE                : 173
VAR                  : 233 256 257 279
WHILE                : 331
WITH                 : 341
error                : 

Nonterminals, with rules where they appear

access_qualifier     : 200 202
actual_discriminant_part : 119
actual_parameter     : 52 53
actual_parameter_list : 39 120 302
actual_parameter_list_list : 51 53
adding_operator      : 24
array_type           : 138
array_value          : 81
array_value_completer : 70 72 73 74 75 76
array_value_element  : 77 78
array_value_element_list : 69 70 71 72 73 74 78
assignment_statement : 297
base_type            : 166
block                : 182 282 287
block_middle_part    : 183 190 191 192 193 194
boolean_expression   : 310 311 330 331
case_index           : 314 315 316 317 318 319 320 321
case_list_element    : 322 323
case_list_element_list : 314 316 317 318 320 321 323
case_statement       : 309
case_statement_completer : 315 316 317 319 320 321
component_type       : 2 3 168 169
component_value      : 79 97 98 173
component_variable   : 35
compound_statement   : 288 304
conditional_statement : 305
conformant_array_form : 270 276 279
conformant_array_parameter_specification : 252
constant_definition  : 219 220
constant_definition_list : 218 220
constant_definition_part : 186 191 356 360 392 396
constant_expression  : 221
constituent_identifier : 210 213
directive            : 280 366 404
discriminant_specification : 230 231
discriminant_specification_list : 229 231
discriminated_schema : 10 131
domain_type          : 170
else_part            : 311
empty                : 90 144 196 296
entire_variable      : 34 332
enumerated_type      : 11
exponentiating_operator : 28
export_clause        : 371 373
export_list          : 370 373 374
export_part          : 368 369
export_part_list     : 367 369
export_range         : 372 374
export_renaming_clause : 376
exportable_name      : 375 379
expression           : 18 20 32 45 54 55 55 56 56 56 67 68 68 80 91 92 94 300 312 326 337 338 340
factor               : 25 26
field_designator     : 41
field_list           : 142 160
field_list_left_part : 143
field_list_value     : 83 91 92
field_value          : 95 96
file_type            : 141
final_value          : 335 336
finalization_part    : 386 387 390 391
first_constant_name  : 380
fixed_part           : 145 146 147 151
fixed_part_value     : 86 87 88 89 96
for_statement        : 329
formal_discriminant_part : 228
formal_parameter_list : 243 261 262
formal_parameter_section : 246 247
formal_parameter_section_list : 245 247
function_block       : 284 285
function_declaration : 238 240
function_heading     : 259 283 285 365
function_identification : 284
functional_parameter_specification : 251
goto_statement       : 299
identifier           : 14 15 46 47 48 93 163 179 180 203 212 213 221 227 228 260 261 262 263 265 274 274 286 348 349 350 351 352 353 354 355 370 379 403
identifier_list      : 13 15 97 152 181 232 236 253 254 256 257 270 279 383
if_statement         : 308
implementation_directive : 402
import_clause        : 208 209
import_list          : 205 206 209
import_part          : 183 184 348 349 350 351 352 353 354 355 384 385 386 387 388 389 390 391
import_qualifier     : 201 202
import_renaming_clause : 211
import_specification : 197 198
import_specification_list : 195 198
index_expression     : 43 44 50 50
index_expression_list : 42 44
index_type           : 4 5 168
index_type_list      : 2 5
index_type_specification : 273 277 278
index_type_specification_list : 275 276 278
indexed_variable     : 40
initial_state_specifier : 126 127
initial_value        : 335 336
initialization_part  : 385 387 389 391
interface_directive  : 348 350 352 354
interface_identifier : 199 200 201 202
interface_specification_part : 348 349 350 351 352 353 354 355
iteration_clause     : 332
label                : 215 216 292 293 303
label_declaration_part : 185 190
label_list           : 214 216
last_constant_name   : 380
main_program_block   : 178
main_program_declaration : 176
member_designator    : 65 66
member_designator_list : 63 66 98 159 324
module_block         : 346 347
module_block_middle_part : 388 389 390 391 396 397 398 399
module_declaration   : 177
module_heading       : 345 346
module_heading_middle_part : 348 349 350 351 360 361 362 363
module_identification : 347
module_identifier    : 402
module_parameter_list : 349 350 353 354
multiplying_operator : 26
name                 : 38 39 48 119 121 122 128 171 172 243 244 264 273 275 301 302 377 378 381 382
new_ordinal_type     : 7 132
new_pointer_type     : 134
new_structured_type  : 133
new_type             : 129
ordinal_type         : 6 167
ordinal_type_name    : 8 164 232 274
packed_conformant_array_form : 271
parameter_form       : 253 254 256 257
pointer_variable     : 37
primary              : 27 28 28 33
procedural_parameter_specification : 250
procedure_and_function_declaration_part : 189 194 239 240 395 399
procedure_and_function_heading_part : 359 363
procedure_block      : 242
procedure_declaration : 237 239
procedure_heading    : 241 242 258 364
procedure_statement  : 298
program              : 0
program_block        : 1 175
program_component    : 174 175
program_heading      : 178
program_parameter_list : 180
record_section       : 150 151
record_type          : 139
record_value         : 82
relational_operator  : 20
remote_directive     : 241 283
repeat_statement     : 327
repetitive_statement : 306
restricted_type      : 135
result_type          : 260 261 262 263
result_variable_specification : 261 263
schema_definition    : 224 226
selective_import_option : 205
sequence_iteration   : 333
set_constructor      : 31
set_expression       : 339
set_member_iteration : 334
set_type             : 140
sign                 : 22
simple_expression    : 19 20
simple_expression_term : 21 22 24
simple_statement     : 292 294
statement            : 290 291 310 311 313 324 331 332 341 400 401
statement_part       : 183 184
statement_sequence   : 289 291 325 330
structured_statement : 293 295
subrange_bound       : 17 17
subrange_type        : 12
substring_variable   : 36
tag_field            : 161
tag_field_identifier : 91
tag_type             : 161 162
term                 : 23 24 26
type_definition      : 223 225
type_definition_list : 222 225 226
type_definition_part : 187 192 357 361 393 397
type_denoter         : 123 152 227 228 236
type_denoter_middle_part : 124 125 126 127 255
type_inquiry         : 9 130
unpacked_conformant_array_form : 272
unpacked_structured_type : 136 137
unsigned_constant    : 30
value_conformant_array_specification : 266 268
value_parameter_specification : 248
variable_access      : 29 42 46 49 50 300 344
variable_conformant_array_specification : 267 269
variable_declaration : 234 235
variable_declaration_list : 233 235
variable_declaration_part : 188 193 358 362 394 398
variable_parameter_specification : 249
variant_denoter      : 159 165
variant_list_element : 157 158
variant_list_element_list : 153 154 155 158
variant_part         : 145 148 149
variant_part_completer : 154 155 156
variant_part_value   : 84 85 88 89
variant_selector     : 153 154 155 156
while_statement      : 328
with_element         : 342 343
with_list            : 341 343
with_statement       : 307

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_block
    (174) program_block -> . program_component
    (175) program_block -> . program_block program_component
    (176) program_component -> . main_program_declaration DOT
    (177) program_component -> . module_declaration DOT
    (178) main_program_declaration -> . program_heading SEMICOLON main_program_block
    (345) module_declaration -> . module_heading
    (346) module_declaration -> . module_heading SEMICOLON module_block
    (347) module_declaration -> . module_identification SEMICOLON module_block
    (179) program_heading -> . PROGRAM_WORD identifier
    (180) program_heading -> . PROGRAM_WORD identifier LPAREN program_parameter_list RPAREN
    (348) module_heading -> . MODULE identifier interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (349) module_heading -> . MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (350) module_heading -> . MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (351) module_heading -> . MODULE identifier SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (352) module_heading -> . MODULE identifier interface_directive SEMICOLON interface_specification_part import_part END
    (353) module_heading -> . MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (354) module_heading -> . MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (355) module_heading -> . MODULE identifier SEMICOLON interface_specification_part import_part END
    (402) module_identification -> . MODULE module_identifier implementation_directive

    PROGRAM_WORD    shift and go to state 10
    MODULE          shift and go to state 9

    module_declaration             shift and go to state 4
    program_block                  shift and go to state 7
    module_identification          shift and go to state 1
    program_component              shift and go to state 2
    program                        shift and go to state 5
    program_heading                shift and go to state 6
    main_program_declaration       shift and go to state 3
    module_heading                 shift and go to state 8

state 1

    (347) module_declaration -> module_identification . SEMICOLON module_block

    SEMICOLON       shift and go to state 11


state 2

    (174) program_block -> program_component .

    PROGRAM_WORD    reduce using rule 174 (program_block -> program_component .)
    MODULE          reduce using rule 174 (program_block -> program_component .)
    $end            reduce using rule 174 (program_block -> program_component .)


state 3

    (176) program_component -> main_program_declaration . DOT

    DOT             shift and go to state 12


state 4

    (177) program_component -> module_declaration . DOT

    DOT             shift and go to state 13


state 5

    (0) S' -> program .



state 6

    (178) main_program_declaration -> program_heading . SEMICOLON main_program_block

    SEMICOLON       shift and go to state 14


state 7

    (1) program -> program_block .
    (175) program_block -> program_block . program_component
    (176) program_component -> . main_program_declaration DOT
    (177) program_component -> . module_declaration DOT
    (178) main_program_declaration -> . program_heading SEMICOLON main_program_block
    (345) module_declaration -> . module_heading
    (346) module_declaration -> . module_heading SEMICOLON module_block
    (347) module_declaration -> . module_identification SEMICOLON module_block
    (179) program_heading -> . PROGRAM_WORD identifier
    (180) program_heading -> . PROGRAM_WORD identifier LPAREN program_parameter_list RPAREN
    (348) module_heading -> . MODULE identifier interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (349) module_heading -> . MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (350) module_heading -> . MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (351) module_heading -> . MODULE identifier SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (352) module_heading -> . MODULE identifier interface_directive SEMICOLON interface_specification_part import_part END
    (353) module_heading -> . MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (354) module_heading -> . MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (355) module_heading -> . MODULE identifier SEMICOLON interface_specification_part import_part END
    (402) module_identification -> . MODULE module_identifier implementation_directive

    $end            reduce using rule 1 (program -> program_block .)
    PROGRAM_WORD    shift and go to state 10
    MODULE          shift and go to state 9

    module_declaration             shift and go to state 4
    module_identification          shift and go to state 1
    program_component              shift and go to state 15
    program_heading                shift and go to state 6
    main_program_declaration       shift and go to state 3
    module_heading                 shift and go to state 8

state 8

    (345) module_declaration -> module_heading .
    (346) module_declaration -> module_heading . SEMICOLON module_block

    DOT             reduce using rule 345 (module_declaration -> module_heading .)
    SEMICOLON       shift and go to state 16


state 9

    (348) module_heading -> MODULE . identifier interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (349) module_heading -> MODULE . identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (350) module_heading -> MODULE . identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (351) module_heading -> MODULE . identifier SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (352) module_heading -> MODULE . identifier interface_directive SEMICOLON interface_specification_part import_part END
    (353) module_heading -> MODULE . identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (354) module_heading -> MODULE . identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (355) module_heading -> MODULE . identifier SEMICOLON interface_specification_part import_part END
    (402) module_identification -> MODULE . module_identifier implementation_directive
    (16) identifier -> . ID
    (403) module_identifier -> . identifier

    ID              shift and go to state 18

    module_identifier              shift and go to state 17
    identifier                     shift and go to state 19

state 10

    (179) program_heading -> PROGRAM_WORD . identifier
    (180) program_heading -> PROGRAM_WORD . identifier LPAREN program_parameter_list RPAREN
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 20

state 11

    (347) module_declaration -> module_identification SEMICOLON . module_block
    (384) module_block -> . import_part END
    (385) module_block -> . import_part initialization_part END
    (386) module_block -> . import_part finalization_part END
    (387) module_block -> . import_part initialization_part finalization_part END
    (388) module_block -> . import_part module_block_middle_part END
    (389) module_block -> . import_part module_block_middle_part initialization_part END
    (390) module_block -> . import_part module_block_middle_part finalization_part END
    (391) module_block -> . import_part module_block_middle_part initialization_part finalization_part END
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    IMPORT          shift and go to state 23
    END             reduce using rule 405 (empty -> .)
    TO              reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    empty                          shift and go to state 21
    import_part                    shift and go to state 22
    module_block                   shift and go to state 24

state 12

    (176) program_component -> main_program_declaration DOT .

    PROGRAM_WORD    reduce using rule 176 (program_component -> main_program_declaration DOT .)
    MODULE          reduce using rule 176 (program_component -> main_program_declaration DOT .)
    $end            reduce using rule 176 (program_component -> main_program_declaration DOT .)


state 13

    (177) program_component -> module_declaration DOT .

    PROGRAM_WORD    reduce using rule 177 (program_component -> module_declaration DOT .)
    MODULE          reduce using rule 177 (program_component -> module_declaration DOT .)
    $end            reduce using rule 177 (program_component -> module_declaration DOT .)


state 14

    (178) main_program_declaration -> program_heading SEMICOLON . main_program_block
    (182) main_program_block -> . block
    (183) block -> . import_part block_middle_part statement_part
    (184) block -> . import_part statement_part
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    IMPORT          shift and go to state 23
    LABEL_WORD      reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    BEGIN           reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    import_part                    shift and go to state 25
    empty                          shift and go to state 21
    main_program_block             shift and go to state 26
    block                          shift and go to state 27

state 15

    (175) program_block -> program_block program_component .

    PROGRAM_WORD    reduce using rule 175 (program_block -> program_block program_component .)
    MODULE          reduce using rule 175 (program_block -> program_block program_component .)
    $end            reduce using rule 175 (program_block -> program_block program_component .)


state 16

    (346) module_declaration -> module_heading SEMICOLON . module_block
    (384) module_block -> . import_part END
    (385) module_block -> . import_part initialization_part END
    (386) module_block -> . import_part finalization_part END
    (387) module_block -> . import_part initialization_part finalization_part END
    (388) module_block -> . import_part module_block_middle_part END
    (389) module_block -> . import_part module_block_middle_part initialization_part END
    (390) module_block -> . import_part module_block_middle_part finalization_part END
    (391) module_block -> . import_part module_block_middle_part initialization_part finalization_part END
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    IMPORT          shift and go to state 23
    END             reduce using rule 405 (empty -> .)
    TO              reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    empty                          shift and go to state 21
    import_part                    shift and go to state 22
    module_block                   shift and go to state 28

state 17

    (402) module_identification -> MODULE module_identifier . implementation_directive
    (404) implementation_directive -> . directive
    (281) directive -> . ID

    ID              shift and go to state 31

    implementation_directive       shift and go to state 29
    directive                      shift and go to state 30

state 18

    (16) identifier -> ID .

    DOT             reduce using rule 16 (identifier -> ID .)
    LPAREN          reduce using rule 16 (identifier -> ID .)
    LBRAC           reduce using rule 16 (identifier -> ID .)
    UPARROW         reduce using rule 16 (identifier -> ID .)
    STARSTAR        reduce using rule 16 (identifier -> ID .)
    POW             reduce using rule 16 (identifier -> ID .)
    STAR            reduce using rule 16 (identifier -> ID .)
    SLASH           reduce using rule 16 (identifier -> ID .)
    DIV             reduce using rule 16 (identifier -> ID .)
    MOD             reduce using rule 16 (identifier -> ID .)
    AND             reduce using rule 16 (identifier -> ID .)
    AND_THEN        reduce using rule 16 (identifier -> ID .)
    PLUS            reduce using rule 16 (identifier -> ID .)
    MINUS           reduce using rule 16 (identifier -> ID .)
    GL              reduce using rule 16 (identifier -> ID .)
    OR              reduce using rule 16 (identifier -> ID .)
    OR_ELSE         reduce using rule 16 (identifier -> ID .)
    DOTDOT          reduce using rule 16 (identifier -> ID .)
    EQUAL           reduce using rule 16 (identifier -> ID .)
    LG              reduce using rule 16 (identifier -> ID .)
    LT              reduce using rule 16 (identifier -> ID .)
    GT              reduce using rule 16 (identifier -> ID .)
    LE              reduce using rule 16 (identifier -> ID .)
    GE              reduce using rule 16 (identifier -> ID .)
    IN              reduce using rule 16 (identifier -> ID .)
    RBRAC           reduce using rule 16 (identifier -> ID .)
    COMMA           reduce using rule 16 (identifier -> ID .)
    COLON           reduce using rule 16 (identifier -> ID .)
    RPAREN          reduce using rule 16 (identifier -> ID .)
    SEMICOLON       reduce using rule 16 (identifier -> ID .)
    VALUE           reduce using rule 16 (identifier -> ID .)
    END             reduce using rule 16 (identifier -> ID .)
    EG              reduce using rule 16 (identifier -> ID .)
    OF              reduce using rule 16 (identifier -> ID .)
    DO              reduce using rule 16 (identifier -> ID .)
    QUALIFIED       reduce using rule 16 (identifier -> ID .)
    ONLY            reduce using rule 16 (identifier -> ID .)
    UNTIL           reduce using rule 16 (identifier -> ID .)
    ELSE            reduce using rule 16 (identifier -> ID .)
    OTHERWISE       reduce using rule 16 (identifier -> ID .)
    THEN            reduce using rule 16 (identifier -> ID .)
    TO              reduce using rule 16 (identifier -> ID .)
    DOWNTO          reduce using rule 16 (identifier -> ID .)
    ASSIGNMENT      reduce using rule 16 (identifier -> ID .)
    ID              reduce using rule 16 (identifier -> ID .)


state 19

    (348) module_heading -> MODULE identifier . interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (349) module_heading -> MODULE identifier . LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (350) module_heading -> MODULE identifier . interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (351) module_heading -> MODULE identifier . SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (352) module_heading -> MODULE identifier . interface_directive SEMICOLON interface_specification_part import_part END
    (353) module_heading -> MODULE identifier . LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (354) module_heading -> MODULE identifier . interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (355) module_heading -> MODULE identifier . SEMICOLON interface_specification_part import_part END
    (403) module_identifier -> identifier .
    (366) interface_directive -> . directive
    (281) directive -> . ID

  ! shift/reduce conflict for ID resolved as shift
    LPAREN          shift and go to state 35
    SEMICOLON       shift and go to state 33
    ID              shift and go to state 31

  ! ID              [ reduce using rule 403 (module_identifier -> identifier .) ]

    directive                      shift and go to state 32
    interface_directive            shift and go to state 34

state 20

    (179) program_heading -> PROGRAM_WORD identifier .
    (180) program_heading -> PROGRAM_WORD identifier . LPAREN program_parameter_list RPAREN

    SEMICOLON       reduce using rule 179 (program_heading -> PROGRAM_WORD identifier .)
    LPAREN          shift and go to state 36


state 21

    (196) import_part -> empty .

    END             reduce using rule 196 (import_part -> empty .)
    CONST           reduce using rule 196 (import_part -> empty .)
    TYPE            reduce using rule 196 (import_part -> empty .)
    VAR             reduce using rule 196 (import_part -> empty .)
    PROCEDURE       reduce using rule 196 (import_part -> empty .)
    FUNCTION        reduce using rule 196 (import_part -> empty .)
    TO              reduce using rule 196 (import_part -> empty .)
    LABEL_WORD      reduce using rule 196 (import_part -> empty .)
    BEGIN           reduce using rule 196 (import_part -> empty .)


state 22

    (384) module_block -> import_part . END
    (385) module_block -> import_part . initialization_part END
    (386) module_block -> import_part . finalization_part END
    (387) module_block -> import_part . initialization_part finalization_part END
    (388) module_block -> import_part . module_block_middle_part END
    (389) module_block -> import_part . module_block_middle_part initialization_part END
    (390) module_block -> import_part . module_block_middle_part finalization_part END
    (391) module_block -> import_part . module_block_middle_part initialization_part finalization_part END
    (400) initialization_part -> . TO BEGIN DO statement SEMICOLON
    (401) finalization_part -> . TO END DO statement SEMICOLON
    (392) module_block_middle_part -> . constant_definition_part
    (393) module_block_middle_part -> . type_definition_part
    (394) module_block_middle_part -> . variable_declaration_part
    (395) module_block_middle_part -> . procedure_and_function_declaration_part
    (396) module_block_middle_part -> . module_block_middle_part constant_definition_part
    (397) module_block_middle_part -> . module_block_middle_part type_definition_part
    (398) module_block_middle_part -> . module_block_middle_part variable_declaration_part
    (399) module_block_middle_part -> . module_block_middle_part procedure_and_function_declaration_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (237) procedure_and_function_declaration_part -> . procedure_declaration SEMICOLON
    (238) procedure_and_function_declaration_part -> . function_declaration SEMICOLON
    (239) procedure_and_function_declaration_part -> . procedure_and_function_declaration_part procedure_declaration SEMICOLON
    (240) procedure_and_function_declaration_part -> . procedure_and_function_declaration_part function_declaration SEMICOLON
    (241) procedure_declaration -> . procedure_heading SEMICOLON remote_directive
    (242) procedure_declaration -> . procedure_heading SEMICOLON procedure_block
    (283) function_declaration -> . function_heading SEMICOLON remote_directive
    (284) function_declaration -> . function_identification SEMICOLON function_block
    (285) function_declaration -> . function_heading SEMICOLON function_block
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (286) function_identification -> . FUNCTION identifier

    END             shift and go to state 43
    TO              shift and go to state 41
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 42

    variable_declaration_part      shift and go to state 38
    constant_definition_part       shift and go to state 39
    procedure_and_function_declaration_part shift and go to state 40
    function_identification        shift and go to state 44
    type_definition_part           shift and go to state 47
    procedure_heading              shift and go to state 48
    function_declaration           shift and go to state 49
    procedure_declaration          shift and go to state 50
    function_heading               shift and go to state 51
    initialization_part            shift and go to state 52
    finalization_part              shift and go to state 53
    module_block_middle_part       shift and go to state 55

state 23

    (195) import_part -> IMPORT . import_specification_list
    (197) import_specification_list -> . import_specification SEMICOLON
    (198) import_specification_list -> . import_specification_list import_specification SEMICOLON
    (199) import_specification -> . interface_identifier
    (200) import_specification -> . interface_identifier access_qualifier
    (201) import_specification -> . interface_identifier import_qualifier
    (202) import_specification -> . interface_identifier access_qualifier import_qualifier
    (203) interface_identifier -> . identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    import_specification_list      shift and go to state 56
    interface_identifier           shift and go to state 57
    import_specification           shift and go to state 58
    identifier                     shift and go to state 59

state 24

    (347) module_declaration -> module_identification SEMICOLON module_block .

    DOT             reduce using rule 347 (module_declaration -> module_identification SEMICOLON module_block .)


state 25

    (183) block -> import_part . block_middle_part statement_part
    (184) block -> import_part . statement_part
    (185) block_middle_part -> . label_declaration_part
    (186) block_middle_part -> . constant_definition_part
    (187) block_middle_part -> . type_definition_part
    (188) block_middle_part -> . variable_declaration_part
    (189) block_middle_part -> . procedure_and_function_declaration_part
    (190) block_middle_part -> . block_middle_part label_declaration_part
    (191) block_middle_part -> . block_middle_part constant_definition_part
    (192) block_middle_part -> . block_middle_part type_definition_part
    (193) block_middle_part -> . block_middle_part variable_declaration_part
    (194) block_middle_part -> . block_middle_part procedure_and_function_declaration_part
    (288) statement_part -> . compound_statement
    (214) label_declaration_part -> . LABEL_WORD label_list SEMICOLON
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (237) procedure_and_function_declaration_part -> . procedure_declaration SEMICOLON
    (238) procedure_and_function_declaration_part -> . function_declaration SEMICOLON
    (239) procedure_and_function_declaration_part -> . procedure_and_function_declaration_part procedure_declaration SEMICOLON
    (240) procedure_and_function_declaration_part -> . procedure_and_function_declaration_part function_declaration SEMICOLON
    (289) compound_statement -> . BEGIN statement_sequence END
    (241) procedure_declaration -> . procedure_heading SEMICOLON remote_directive
    (242) procedure_declaration -> . procedure_heading SEMICOLON procedure_block
    (283) function_declaration -> . function_heading SEMICOLON remote_directive
    (284) function_declaration -> . function_identification SEMICOLON function_block
    (285) function_declaration -> . function_heading SEMICOLON function_block
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (286) function_identification -> . FUNCTION identifier

    LABEL_WORD      shift and go to state 66
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    BEGIN           shift and go to state 62
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 42

    variable_declaration_part      shift and go to state 60
    constant_definition_part       shift and go to state 61
    procedure_declaration          shift and go to state 50
    procedure_and_function_declaration_part shift and go to state 63
    compound_statement             shift and go to state 64
    statement_part                 shift and go to state 65
    block_middle_part              shift and go to state 67
    function_identification        shift and go to state 44
    type_definition_part           shift and go to state 68
    procedure_heading              shift and go to state 48
    function_declaration           shift and go to state 49
    function_heading               shift and go to state 51
    label_declaration_part         shift and go to state 69

state 26

    (178) main_program_declaration -> program_heading SEMICOLON main_program_block .

    DOT             reduce using rule 178 (main_program_declaration -> program_heading SEMICOLON main_program_block .)


state 27

    (182) main_program_block -> block .

    DOT             reduce using rule 182 (main_program_block -> block .)


state 28

    (346) module_declaration -> module_heading SEMICOLON module_block .

    DOT             reduce using rule 346 (module_declaration -> module_heading SEMICOLON module_block .)


state 29

    (402) module_identification -> MODULE module_identifier implementation_directive .

    SEMICOLON       reduce using rule 402 (module_identification -> MODULE module_identifier implementation_directive .)


state 30

    (404) implementation_directive -> directive .

    SEMICOLON       reduce using rule 404 (implementation_directive -> directive .)


state 31

    (281) directive -> ID .

    SEMICOLON       reduce using rule 281 (directive -> ID .)
    LPAREN          reduce using rule 281 (directive -> ID .)


state 32

    (366) interface_directive -> directive .

    SEMICOLON       reduce using rule 366 (interface_directive -> directive .)
    LPAREN          reduce using rule 366 (interface_directive -> directive .)


state 33

    (351) module_heading -> MODULE identifier SEMICOLON . interface_specification_part import_part module_heading_middle_part END
    (355) module_heading -> MODULE identifier SEMICOLON . interface_specification_part import_part END
    (367) interface_specification_part -> . EXPORT export_part_list

    EXPORT          shift and go to state 70

    interface_specification_part   shift and go to state 71

state 34

    (348) module_heading -> MODULE identifier interface_directive . SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (350) module_heading -> MODULE identifier interface_directive . LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (352) module_heading -> MODULE identifier interface_directive . SEMICOLON interface_specification_part import_part END
    (354) module_heading -> MODULE identifier interface_directive . LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END

    SEMICOLON       shift and go to state 72
    LPAREN          shift and go to state 73


state 35

    (349) module_heading -> MODULE identifier LPAREN . module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (353) module_heading -> MODULE identifier LPAREN . module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (383) module_parameter_list -> . identifier_list
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier_list                shift and go to state 74
    module_parameter_list          shift and go to state 75
    identifier                     shift and go to state 76

state 36

    (180) program_heading -> PROGRAM_WORD identifier LPAREN . program_parameter_list RPAREN
    (181) program_parameter_list -> . identifier_list
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    program_parameter_list         shift and go to state 77
    identifier                     shift and go to state 76
    identifier_list                shift and go to state 78

state 37

    (218) constant_definition_part -> CONST . constant_definition_list
    (219) constant_definition_list -> . constant_definition SEMICOLON
    (220) constant_definition_list -> . constant_definition_list constant_definition SEMICOLON
    (221) constant_definition -> . identifier EQUAL constant_expression
    (16) identifier -> . ID

    ID              shift and go to state 18

    constant_definition            shift and go to state 80
    identifier                     shift and go to state 81
    constant_definition_list       shift and go to state 79

state 38

    (394) module_block_middle_part -> variable_declaration_part .

    END             reduce using rule 394 (module_block_middle_part -> variable_declaration_part .)
    TO              reduce using rule 394 (module_block_middle_part -> variable_declaration_part .)
    CONST           reduce using rule 394 (module_block_middle_part -> variable_declaration_part .)
    TYPE            reduce using rule 394 (module_block_middle_part -> variable_declaration_part .)
    VAR             reduce using rule 394 (module_block_middle_part -> variable_declaration_part .)
    PROCEDURE       reduce using rule 394 (module_block_middle_part -> variable_declaration_part .)
    FUNCTION        reduce using rule 394 (module_block_middle_part -> variable_declaration_part .)


state 39

    (392) module_block_middle_part -> constant_definition_part .

    END             reduce using rule 392 (module_block_middle_part -> constant_definition_part .)
    TO              reduce using rule 392 (module_block_middle_part -> constant_definition_part .)
    CONST           reduce using rule 392 (module_block_middle_part -> constant_definition_part .)
    TYPE            reduce using rule 392 (module_block_middle_part -> constant_definition_part .)
    VAR             reduce using rule 392 (module_block_middle_part -> constant_definition_part .)
    PROCEDURE       reduce using rule 392 (module_block_middle_part -> constant_definition_part .)
    FUNCTION        reduce using rule 392 (module_block_middle_part -> constant_definition_part .)


state 40

    (395) module_block_middle_part -> procedure_and_function_declaration_part .
    (239) procedure_and_function_declaration_part -> procedure_and_function_declaration_part . procedure_declaration SEMICOLON
    (240) procedure_and_function_declaration_part -> procedure_and_function_declaration_part . function_declaration SEMICOLON
    (241) procedure_declaration -> . procedure_heading SEMICOLON remote_directive
    (242) procedure_declaration -> . procedure_heading SEMICOLON procedure_block
    (283) function_declaration -> . function_heading SEMICOLON remote_directive
    (284) function_declaration -> . function_identification SEMICOLON function_block
    (285) function_declaration -> . function_heading SEMICOLON function_block
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (286) function_identification -> . FUNCTION identifier

  ! shift/reduce conflict for PROCEDURE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    END             reduce using rule 395 (module_block_middle_part -> procedure_and_function_declaration_part .)
    TO              reduce using rule 395 (module_block_middle_part -> procedure_and_function_declaration_part .)
    CONST           reduce using rule 395 (module_block_middle_part -> procedure_and_function_declaration_part .)
    TYPE            reduce using rule 395 (module_block_middle_part -> procedure_and_function_declaration_part .)
    VAR             reduce using rule 395 (module_block_middle_part -> procedure_and_function_declaration_part .)
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 42

  ! PROCEDURE       [ reduce using rule 395 (module_block_middle_part -> procedure_and_function_declaration_part .) ]
  ! FUNCTION        [ reduce using rule 395 (module_block_middle_part -> procedure_and_function_declaration_part .) ]

    procedure_heading              shift and go to state 48
    function_declaration           shift and go to state 82
    procedure_declaration          shift and go to state 83
    function_heading               shift and go to state 51
    function_identification        shift and go to state 44

state 41

    (400) initialization_part -> TO . BEGIN DO statement SEMICOLON
    (401) finalization_part -> TO . END DO statement SEMICOLON

    BEGIN           shift and go to state 84
    END             shift and go to state 85


state 42

    (260) function_heading -> FUNCTION . identifier COLON result_type
    (261) function_heading -> FUNCTION . identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> FUNCTION . identifier formal_parameter_list COLON result_type
    (263) function_heading -> FUNCTION . identifier result_variable_specification COLON result_type
    (286) function_identification -> FUNCTION . identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 86

state 43

    (384) module_block -> import_part END .

    DOT             reduce using rule 384 (module_block -> import_part END .)


state 44

    (284) function_declaration -> function_identification . SEMICOLON function_block

    SEMICOLON       shift and go to state 87


state 45

    (233) variable_declaration_part -> VAR . variable_declaration_list
    (234) variable_declaration_list -> . variable_declaration SEMICOLON
    (235) variable_declaration_list -> . variable_declaration_list variable_declaration SEMICOLON
    (236) variable_declaration -> . identifier_list COLON type_denoter
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier_list                shift and go to state 89
    variable_declaration_list      shift and go to state 88
    identifier                     shift and go to state 76
    variable_declaration           shift and go to state 90

state 46

    (243) procedure_heading -> PROCEDURE . name formal_parameter_list
    (244) procedure_heading -> PROCEDURE . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    name                           shift and go to state 91

state 47

    (393) module_block_middle_part -> type_definition_part .

    END             reduce using rule 393 (module_block_middle_part -> type_definition_part .)
    TO              reduce using rule 393 (module_block_middle_part -> type_definition_part .)
    CONST           reduce using rule 393 (module_block_middle_part -> type_definition_part .)
    TYPE            reduce using rule 393 (module_block_middle_part -> type_definition_part .)
    VAR             reduce using rule 393 (module_block_middle_part -> type_definition_part .)
    PROCEDURE       reduce using rule 393 (module_block_middle_part -> type_definition_part .)
    FUNCTION        reduce using rule 393 (module_block_middle_part -> type_definition_part .)


state 48

    (241) procedure_declaration -> procedure_heading . SEMICOLON remote_directive
    (242) procedure_declaration -> procedure_heading . SEMICOLON procedure_block

    SEMICOLON       shift and go to state 93


state 49

    (238) procedure_and_function_declaration_part -> function_declaration . SEMICOLON

    SEMICOLON       shift and go to state 94


state 50

    (237) procedure_and_function_declaration_part -> procedure_declaration . SEMICOLON

    SEMICOLON       shift and go to state 95


state 51

    (283) function_declaration -> function_heading . SEMICOLON remote_directive
    (285) function_declaration -> function_heading . SEMICOLON function_block

    SEMICOLON       shift and go to state 96


state 52

    (385) module_block -> import_part initialization_part . END
    (387) module_block -> import_part initialization_part . finalization_part END
    (401) finalization_part -> . TO END DO statement SEMICOLON

    END             shift and go to state 97
    TO              shift and go to state 98

    finalization_part              shift and go to state 99

state 53

    (386) module_block -> import_part finalization_part . END

    END             shift and go to state 100


state 54

    (222) type_definition_part -> TYPE . type_definition_list
    (223) type_definition_list -> . type_definition SEMICOLON
    (224) type_definition_list -> . schema_definition SEMICOLON
    (225) type_definition_list -> . type_definition_list type_definition SEMICOLON
    (226) type_definition_list -> . type_definition_list schema_definition SEMICOLON
    (227) type_definition -> . identifier EQUAL type_denoter
    (228) schema_definition -> . identifier formal_discriminant_part EQUAL type_denoter
    (16) identifier -> . ID

    ID              shift and go to state 18

    schema_definition              shift and go to state 101
    type_definition                shift and go to state 102
    type_definition_list           shift and go to state 103
    identifier                     shift and go to state 104

state 55

    (388) module_block -> import_part module_block_middle_part . END
    (389) module_block -> import_part module_block_middle_part . initialization_part END
    (390) module_block -> import_part module_block_middle_part . finalization_part END
    (391) module_block -> import_part module_block_middle_part . initialization_part finalization_part END
    (396) module_block_middle_part -> module_block_middle_part . constant_definition_part
    (397) module_block_middle_part -> module_block_middle_part . type_definition_part
    (398) module_block_middle_part -> module_block_middle_part . variable_declaration_part
    (399) module_block_middle_part -> module_block_middle_part . procedure_and_function_declaration_part
    (400) initialization_part -> . TO BEGIN DO statement SEMICOLON
    (401) finalization_part -> . TO END DO statement SEMICOLON
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (237) procedure_and_function_declaration_part -> . procedure_declaration SEMICOLON
    (238) procedure_and_function_declaration_part -> . function_declaration SEMICOLON
    (239) procedure_and_function_declaration_part -> . procedure_and_function_declaration_part procedure_declaration SEMICOLON
    (240) procedure_and_function_declaration_part -> . procedure_and_function_declaration_part function_declaration SEMICOLON
    (241) procedure_declaration -> . procedure_heading SEMICOLON remote_directive
    (242) procedure_declaration -> . procedure_heading SEMICOLON procedure_block
    (283) function_declaration -> . function_heading SEMICOLON remote_directive
    (284) function_declaration -> . function_identification SEMICOLON function_block
    (285) function_declaration -> . function_heading SEMICOLON function_block
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (286) function_identification -> . FUNCTION identifier

    END             shift and go to state 108
    TO              shift and go to state 41
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 42

    variable_declaration_part      shift and go to state 105
    constant_definition_part       shift and go to state 106
    procedure_and_function_declaration_part shift and go to state 107
    function_identification        shift and go to state 44
    type_definition_part           shift and go to state 109
    procedure_heading              shift and go to state 48
    function_declaration           shift and go to state 49
    procedure_declaration          shift and go to state 50
    function_heading               shift and go to state 51
    initialization_part            shift and go to state 110
    finalization_part              shift and go to state 111

state 56

    (195) import_part -> IMPORT import_specification_list .
    (198) import_specification_list -> import_specification_list . import_specification SEMICOLON
    (199) import_specification -> . interface_identifier
    (200) import_specification -> . interface_identifier access_qualifier
    (201) import_specification -> . interface_identifier import_qualifier
    (202) import_specification -> . interface_identifier access_qualifier import_qualifier
    (203) interface_identifier -> . identifier
    (16) identifier -> . ID

    END             reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    CONST           reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    TYPE            reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    VAR             reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    PROCEDURE       reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    FUNCTION        reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    TO              reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    LABEL_WORD      reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    BEGIN           reduce using rule 195 (import_part -> IMPORT import_specification_list .)
    ID              shift and go to state 18

    interface_identifier           shift and go to state 57
    import_specification           shift and go to state 112
    identifier                     shift and go to state 59

state 57

    (199) import_specification -> interface_identifier .
    (200) import_specification -> interface_identifier . access_qualifier
    (201) import_specification -> interface_identifier . import_qualifier
    (202) import_specification -> interface_identifier . access_qualifier import_qualifier
    (204) access_qualifier -> . QUALIFIED
    (205) import_qualifier -> . selective_import_option LPAREN import_list RPAREN
    (206) import_qualifier -> . LPAREN import_list RPAREN
    (207) selective_import_option -> . ONLY

    SEMICOLON       reduce using rule 199 (import_specification -> interface_identifier .)
    QUALIFIED       shift and go to state 116
    LPAREN          shift and go to state 117
    ONLY            shift and go to state 113

    import_qualifier               shift and go to state 115
    selective_import_option        shift and go to state 118
    access_qualifier               shift and go to state 114

state 58

    (197) import_specification_list -> import_specification . SEMICOLON

    SEMICOLON       shift and go to state 119


state 59

    (203) interface_identifier -> identifier .

    QUALIFIED       reduce using rule 203 (interface_identifier -> identifier .)
    LPAREN          reduce using rule 203 (interface_identifier -> identifier .)
    ONLY            reduce using rule 203 (interface_identifier -> identifier .)
    SEMICOLON       reduce using rule 203 (interface_identifier -> identifier .)


state 60

    (188) block_middle_part -> variable_declaration_part .

    LABEL_WORD      reduce using rule 188 (block_middle_part -> variable_declaration_part .)
    CONST           reduce using rule 188 (block_middle_part -> variable_declaration_part .)
    TYPE            reduce using rule 188 (block_middle_part -> variable_declaration_part .)
    VAR             reduce using rule 188 (block_middle_part -> variable_declaration_part .)
    BEGIN           reduce using rule 188 (block_middle_part -> variable_declaration_part .)
    PROCEDURE       reduce using rule 188 (block_middle_part -> variable_declaration_part .)
    FUNCTION        reduce using rule 188 (block_middle_part -> variable_declaration_part .)


state 61

    (186) block_middle_part -> constant_definition_part .

    LABEL_WORD      reduce using rule 186 (block_middle_part -> constant_definition_part .)
    CONST           reduce using rule 186 (block_middle_part -> constant_definition_part .)
    TYPE            reduce using rule 186 (block_middle_part -> constant_definition_part .)
    VAR             reduce using rule 186 (block_middle_part -> constant_definition_part .)
    BEGIN           reduce using rule 186 (block_middle_part -> constant_definition_part .)
    PROCEDURE       reduce using rule 186 (block_middle_part -> constant_definition_part .)
    FUNCTION        reduce using rule 186 (block_middle_part -> constant_definition_part .)


state 62

    (289) compound_statement -> BEGIN . statement_sequence END
    (290) statement_sequence -> . statement
    (291) statement_sequence -> . statement_sequence SEMICOLON statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    statement_sequence             shift and go to state 122
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 136
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 63

    (189) block_middle_part -> procedure_and_function_declaration_part .
    (239) procedure_and_function_declaration_part -> procedure_and_function_declaration_part . procedure_declaration SEMICOLON
    (240) procedure_and_function_declaration_part -> procedure_and_function_declaration_part . function_declaration SEMICOLON
    (241) procedure_declaration -> . procedure_heading SEMICOLON remote_directive
    (242) procedure_declaration -> . procedure_heading SEMICOLON procedure_block
    (283) function_declaration -> . function_heading SEMICOLON remote_directive
    (284) function_declaration -> . function_identification SEMICOLON function_block
    (285) function_declaration -> . function_heading SEMICOLON function_block
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (286) function_identification -> . FUNCTION identifier

  ! shift/reduce conflict for PROCEDURE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    LABEL_WORD      reduce using rule 189 (block_middle_part -> procedure_and_function_declaration_part .)
    CONST           reduce using rule 189 (block_middle_part -> procedure_and_function_declaration_part .)
    TYPE            reduce using rule 189 (block_middle_part -> procedure_and_function_declaration_part .)
    VAR             reduce using rule 189 (block_middle_part -> procedure_and_function_declaration_part .)
    BEGIN           reduce using rule 189 (block_middle_part -> procedure_and_function_declaration_part .)
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 42

  ! PROCEDURE       [ reduce using rule 189 (block_middle_part -> procedure_and_function_declaration_part .) ]
  ! FUNCTION        [ reduce using rule 189 (block_middle_part -> procedure_and_function_declaration_part .) ]

    procedure_heading              shift and go to state 48
    function_declaration           shift and go to state 82
    procedure_declaration          shift and go to state 83
    function_heading               shift and go to state 51
    function_identification        shift and go to state 44

state 64

    (288) statement_part -> compound_statement .

    DOT             reduce using rule 288 (statement_part -> compound_statement .)
    SEMICOLON       reduce using rule 288 (statement_part -> compound_statement .)


state 65

    (184) block -> import_part statement_part .

    SEMICOLON       reduce using rule 184 (block -> import_part statement_part .)
    DOT             reduce using rule 184 (block -> import_part statement_part .)


state 66

    (214) label_declaration_part -> LABEL_WORD . label_list SEMICOLON
    (215) label_list -> . label
    (216) label_list -> . label_list COMMA label
    (217) label -> . UNSIGNEDNUMBER

    UNSIGNEDNUMBER  shift and go to state 149

    label_list                     shift and go to state 154
    label                          shift and go to state 155

state 67

    (183) block -> import_part block_middle_part . statement_part
    (190) block_middle_part -> block_middle_part . label_declaration_part
    (191) block_middle_part -> block_middle_part . constant_definition_part
    (192) block_middle_part -> block_middle_part . type_definition_part
    (193) block_middle_part -> block_middle_part . variable_declaration_part
    (194) block_middle_part -> block_middle_part . procedure_and_function_declaration_part
    (288) statement_part -> . compound_statement
    (214) label_declaration_part -> . LABEL_WORD label_list SEMICOLON
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (237) procedure_and_function_declaration_part -> . procedure_declaration SEMICOLON
    (238) procedure_and_function_declaration_part -> . function_declaration SEMICOLON
    (239) procedure_and_function_declaration_part -> . procedure_and_function_declaration_part procedure_declaration SEMICOLON
    (240) procedure_and_function_declaration_part -> . procedure_and_function_declaration_part function_declaration SEMICOLON
    (289) compound_statement -> . BEGIN statement_sequence END
    (241) procedure_declaration -> . procedure_heading SEMICOLON remote_directive
    (242) procedure_declaration -> . procedure_heading SEMICOLON procedure_block
    (283) function_declaration -> . function_heading SEMICOLON remote_directive
    (284) function_declaration -> . function_identification SEMICOLON function_block
    (285) function_declaration -> . function_heading SEMICOLON function_block
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (286) function_identification -> . FUNCTION identifier

    LABEL_WORD      shift and go to state 66
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    BEGIN           shift and go to state 62
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 42

    variable_declaration_part      shift and go to state 156
    constant_definition_part       shift and go to state 157
    procedure_declaration          shift and go to state 50
    procedure_and_function_declaration_part shift and go to state 158
    compound_statement             shift and go to state 64
    statement_part                 shift and go to state 159
    function_identification        shift and go to state 44
    type_definition_part           shift and go to state 160
    procedure_heading              shift and go to state 48
    function_declaration           shift and go to state 49
    function_heading               shift and go to state 51
    label_declaration_part         shift and go to state 161

state 68

    (187) block_middle_part -> type_definition_part .

    LABEL_WORD      reduce using rule 187 (block_middle_part -> type_definition_part .)
    CONST           reduce using rule 187 (block_middle_part -> type_definition_part .)
    TYPE            reduce using rule 187 (block_middle_part -> type_definition_part .)
    VAR             reduce using rule 187 (block_middle_part -> type_definition_part .)
    BEGIN           reduce using rule 187 (block_middle_part -> type_definition_part .)
    PROCEDURE       reduce using rule 187 (block_middle_part -> type_definition_part .)
    FUNCTION        reduce using rule 187 (block_middle_part -> type_definition_part .)


state 69

    (185) block_middle_part -> label_declaration_part .

    LABEL_WORD      reduce using rule 185 (block_middle_part -> label_declaration_part .)
    CONST           reduce using rule 185 (block_middle_part -> label_declaration_part .)
    TYPE            reduce using rule 185 (block_middle_part -> label_declaration_part .)
    VAR             reduce using rule 185 (block_middle_part -> label_declaration_part .)
    BEGIN           reduce using rule 185 (block_middle_part -> label_declaration_part .)
    PROCEDURE       reduce using rule 185 (block_middle_part -> label_declaration_part .)
    FUNCTION        reduce using rule 185 (block_middle_part -> label_declaration_part .)


state 70

    (367) interface_specification_part -> EXPORT . export_part_list
    (368) export_part_list -> . export_part SEMICOLON
    (369) export_part_list -> . export_part_list export_part SEMICOLON
    (370) export_part -> . identifier EQUAL LPAREN export_list RPAREN
    (16) identifier -> . ID

    ID              shift and go to state 18

    export_part_list               shift and go to state 163
    identifier                     shift and go to state 164
    export_part                    shift and go to state 162

state 71

    (351) module_heading -> MODULE identifier SEMICOLON interface_specification_part . import_part module_heading_middle_part END
    (355) module_heading -> MODULE identifier SEMICOLON interface_specification_part . import_part END
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    IMPORT          shift and go to state 23
    END             reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    import_part                    shift and go to state 165
    empty                          shift and go to state 21

state 72

    (348) module_heading -> MODULE identifier interface_directive SEMICOLON . interface_specification_part import_part module_heading_middle_part END
    (352) module_heading -> MODULE identifier interface_directive SEMICOLON . interface_specification_part import_part END
    (367) interface_specification_part -> . EXPORT export_part_list

    EXPORT          shift and go to state 70

    interface_specification_part   shift and go to state 166

state 73

    (350) module_heading -> MODULE identifier interface_directive LPAREN . module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (354) module_heading -> MODULE identifier interface_directive LPAREN . module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END
    (383) module_parameter_list -> . identifier_list
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier_list                shift and go to state 74
    module_parameter_list          shift and go to state 167
    identifier                     shift and go to state 76

state 74

    (383) module_parameter_list -> identifier_list .
    (15) identifier_list -> identifier_list . COMMA identifier

    RPAREN          reduce using rule 383 (module_parameter_list -> identifier_list .)
    COMMA           shift and go to state 168


state 75

    (349) module_heading -> MODULE identifier LPAREN module_parameter_list . RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (353) module_heading -> MODULE identifier LPAREN module_parameter_list . RPAREN SEMICOLON interface_specification_part import_part END

    RPAREN          shift and go to state 169


state 76

    (14) identifier_list -> identifier .

    COLON           reduce using rule 14 (identifier_list -> identifier .)
    COMMA           reduce using rule 14 (identifier_list -> identifier .)
    RPAREN          reduce using rule 14 (identifier_list -> identifier .)


state 77

    (180) program_heading -> PROGRAM_WORD identifier LPAREN program_parameter_list . RPAREN

    RPAREN          shift and go to state 170


state 78

    (181) program_parameter_list -> identifier_list .
    (15) identifier_list -> identifier_list . COMMA identifier

    RPAREN          reduce using rule 181 (program_parameter_list -> identifier_list .)
    COMMA           shift and go to state 168


state 79

    (218) constant_definition_part -> CONST constant_definition_list .
    (220) constant_definition_list -> constant_definition_list . constant_definition SEMICOLON
    (221) constant_definition -> . identifier EQUAL constant_expression
    (16) identifier -> . ID

    END             reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    TO              reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    CONST           reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    TYPE            reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    VAR             reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    PROCEDURE       reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    FUNCTION        reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    LABEL_WORD      reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    BEGIN           reduce using rule 218 (constant_definition_part -> CONST constant_definition_list .)
    ID              shift and go to state 18

    constant_definition            shift and go to state 171
    identifier                     shift and go to state 81

state 80

    (219) constant_definition_list -> constant_definition . SEMICOLON

    SEMICOLON       shift and go to state 172


state 81

    (221) constant_definition -> identifier . EQUAL constant_expression

    EQUAL           shift and go to state 173


state 82

    (240) procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration . SEMICOLON

    SEMICOLON       shift and go to state 174


state 83

    (239) procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration . SEMICOLON

    SEMICOLON       shift and go to state 175


state 84

    (400) initialization_part -> TO BEGIN . DO statement SEMICOLON

    DO              shift and go to state 176


state 85

    (401) finalization_part -> TO END . DO statement SEMICOLON

    DO              shift and go to state 177


state 86

    (260) function_heading -> FUNCTION identifier . COLON result_type
    (261) function_heading -> FUNCTION identifier . formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> FUNCTION identifier . formal_parameter_list COLON result_type
    (263) function_heading -> FUNCTION identifier . result_variable_specification COLON result_type
    (286) function_identification -> FUNCTION identifier .
    (245) formal_parameter_list -> . LPAREN formal_parameter_section_list RPAREN
    (265) result_variable_specification -> . EQUAL identifier

    COLON           shift and go to state 181
    SEMICOLON       reduce using rule 286 (function_identification -> FUNCTION identifier .)
    LPAREN          shift and go to state 182
    EQUAL           shift and go to state 180

    formal_parameter_list          shift and go to state 178
    result_variable_specification  shift and go to state 179

state 87

    (284) function_declaration -> function_identification SEMICOLON . function_block
    (287) function_block -> . block
    (183) block -> . import_part block_middle_part statement_part
    (184) block -> . import_part statement_part
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    IMPORT          shift and go to state 23
    LABEL_WORD      reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    BEGIN           reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    import_part                    shift and go to state 25
    empty                          shift and go to state 21
    function_block                 shift and go to state 183
    block                          shift and go to state 184

state 88

    (233) variable_declaration_part -> VAR variable_declaration_list .
    (235) variable_declaration_list -> variable_declaration_list . variable_declaration SEMICOLON
    (236) variable_declaration -> . identifier_list COLON type_denoter
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    END             reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    CONST           reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    TYPE            reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    VAR             reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    PROCEDURE       reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    FUNCTION        reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    LABEL_WORD      reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    BEGIN           reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    TO              reduce using rule 233 (variable_declaration_part -> VAR variable_declaration_list .)
    ID              shift and go to state 18

    identifier_list                shift and go to state 89
    identifier                     shift and go to state 76
    variable_declaration           shift and go to state 185

state 89

    (236) variable_declaration -> identifier_list . COLON type_denoter
    (15) identifier_list -> identifier_list . COMMA identifier

    COLON           shift and go to state 186
    COMMA           shift and go to state 168


state 90

    (234) variable_declaration_list -> variable_declaration . SEMICOLON

    SEMICOLON       shift and go to state 187


state 91

    (243) procedure_heading -> PROCEDURE name . formal_parameter_list
    (244) procedure_heading -> PROCEDURE name .
    (48) name -> name . DOT identifier
    (245) formal_parameter_list -> . LPAREN formal_parameter_section_list RPAREN

    SEMICOLON       reduce using rule 244 (procedure_heading -> PROCEDURE name .)
    RPAREN          reduce using rule 244 (procedure_heading -> PROCEDURE name .)
    DOT             shift and go to state 189
    LPAREN          shift and go to state 182

    formal_parameter_list          shift and go to state 188

state 92

    (47) name -> identifier .

    DOT             reduce using rule 47 (name -> identifier .)
    EG              reduce using rule 47 (name -> identifier .)
    RPAREN          reduce using rule 47 (name -> identifier .)
    COMMA           reduce using rule 47 (name -> identifier .)
    DOTDOT          reduce using rule 47 (name -> identifier .)
    LPAREN          reduce using rule 47 (name -> identifier .)
    SEMICOLON       reduce using rule 47 (name -> identifier .)
    ASSIGNMENT      reduce using rule 47 (name -> identifier .)
    LBRAC           reduce using rule 47 (name -> identifier .)
    UPARROW         reduce using rule 47 (name -> identifier .)
    STARSTAR        reduce using rule 47 (name -> identifier .)
    POW             reduce using rule 47 (name -> identifier .)
    STAR            reduce using rule 47 (name -> identifier .)
    SLASH           reduce using rule 47 (name -> identifier .)
    DIV             reduce using rule 47 (name -> identifier .)
    MOD             reduce using rule 47 (name -> identifier .)
    AND             reduce using rule 47 (name -> identifier .)
    AND_THEN        reduce using rule 47 (name -> identifier .)
    PLUS            reduce using rule 47 (name -> identifier .)
    MINUS           reduce using rule 47 (name -> identifier .)
    GL              reduce using rule 47 (name -> identifier .)
    OR              reduce using rule 47 (name -> identifier .)
    OR_ELSE         reduce using rule 47 (name -> identifier .)
    EQUAL           reduce using rule 47 (name -> identifier .)
    LG              reduce using rule 47 (name -> identifier .)
    LT              reduce using rule 47 (name -> identifier .)
    GT              reduce using rule 47 (name -> identifier .)
    LE              reduce using rule 47 (name -> identifier .)
    GE              reduce using rule 47 (name -> identifier .)
    IN              reduce using rule 47 (name -> identifier .)
    RBRAC           reduce using rule 47 (name -> identifier .)
    DO              reduce using rule 47 (name -> identifier .)
    COLON           reduce using rule 47 (name -> identifier .)
    VALUE           reduce using rule 47 (name -> identifier .)
    END             reduce using rule 47 (name -> identifier .)
    OF              reduce using rule 47 (name -> identifier .)
    THEN            reduce using rule 47 (name -> identifier .)
    UNTIL           reduce using rule 47 (name -> identifier .)
    ELSE            reduce using rule 47 (name -> identifier .)
    OTHERWISE       reduce using rule 47 (name -> identifier .)
    TO              reduce using rule 47 (name -> identifier .)
    DOWNTO          reduce using rule 47 (name -> identifier .)


state 93

    (241) procedure_declaration -> procedure_heading SEMICOLON . remote_directive
    (242) procedure_declaration -> procedure_heading SEMICOLON . procedure_block
    (280) remote_directive -> . directive
    (282) procedure_block -> . block
    (281) directive -> . ID
    (183) block -> . import_part block_middle_part statement_part
    (184) block -> . import_part statement_part
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    ID              shift and go to state 31
    IMPORT          shift and go to state 23
    LABEL_WORD      reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    BEGIN           reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    directive                      shift and go to state 190
    remote_directive               shift and go to state 191
    import_part                    shift and go to state 25
    empty                          shift and go to state 21
    procedure_block                shift and go to state 192
    block                          shift and go to state 193

state 94

    (238) procedure_and_function_declaration_part -> function_declaration SEMICOLON .

    PROCEDURE       reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)
    FUNCTION        reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)
    LABEL_WORD      reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)
    CONST           reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)
    TYPE            reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)
    VAR             reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)
    BEGIN           reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)
    END             reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)
    TO              reduce using rule 238 (procedure_and_function_declaration_part -> function_declaration SEMICOLON .)


state 95

    (237) procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .

    PROCEDURE       reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)
    FUNCTION        reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)
    LABEL_WORD      reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)
    CONST           reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)
    TYPE            reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)
    VAR             reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)
    BEGIN           reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)
    END             reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)
    TO              reduce using rule 237 (procedure_and_function_declaration_part -> procedure_declaration SEMICOLON .)


state 96

    (283) function_declaration -> function_heading SEMICOLON . remote_directive
    (285) function_declaration -> function_heading SEMICOLON . function_block
    (280) remote_directive -> . directive
    (287) function_block -> . block
    (281) directive -> . ID
    (183) block -> . import_part block_middle_part statement_part
    (184) block -> . import_part statement_part
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    ID              shift and go to state 31
    IMPORT          shift and go to state 23
    LABEL_WORD      reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    BEGIN           reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    directive                      shift and go to state 190
    remote_directive               shift and go to state 194
    import_part                    shift and go to state 25
    empty                          shift and go to state 21
    function_block                 shift and go to state 195
    block                          shift and go to state 184

state 97

    (385) module_block -> import_part initialization_part END .

    DOT             reduce using rule 385 (module_block -> import_part initialization_part END .)


state 98

    (401) finalization_part -> TO . END DO statement SEMICOLON

    END             shift and go to state 85


state 99

    (387) module_block -> import_part initialization_part finalization_part . END

    END             shift and go to state 196


state 100

    (386) module_block -> import_part finalization_part END .

    DOT             reduce using rule 386 (module_block -> import_part finalization_part END .)


state 101

    (224) type_definition_list -> schema_definition . SEMICOLON

    SEMICOLON       shift and go to state 197


state 102

    (223) type_definition_list -> type_definition . SEMICOLON

    SEMICOLON       shift and go to state 198


state 103

    (222) type_definition_part -> TYPE type_definition_list .
    (225) type_definition_list -> type_definition_list . type_definition SEMICOLON
    (226) type_definition_list -> type_definition_list . schema_definition SEMICOLON
    (227) type_definition -> . identifier EQUAL type_denoter
    (228) schema_definition -> . identifier formal_discriminant_part EQUAL type_denoter
    (16) identifier -> . ID

    END             reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    CONST           reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    TYPE            reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    VAR             reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    PROCEDURE       reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    FUNCTION        reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    TO              reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    LABEL_WORD      reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    BEGIN           reduce using rule 222 (type_definition_part -> TYPE type_definition_list .)
    ID              shift and go to state 18

    schema_definition              shift and go to state 199
    type_definition                shift and go to state 200
    identifier                     shift and go to state 104

state 104

    (227) type_definition -> identifier . EQUAL type_denoter
    (228) schema_definition -> identifier . formal_discriminant_part EQUAL type_denoter
    (229) formal_discriminant_part -> . LPAREN discriminant_specification_list RPAREN

    EQUAL           shift and go to state 202
    LPAREN          shift and go to state 203

    formal_discriminant_part       shift and go to state 201

state 105

    (398) module_block_middle_part -> module_block_middle_part variable_declaration_part .

    END             reduce using rule 398 (module_block_middle_part -> module_block_middle_part variable_declaration_part .)
    TO              reduce using rule 398 (module_block_middle_part -> module_block_middle_part variable_declaration_part .)
    CONST           reduce using rule 398 (module_block_middle_part -> module_block_middle_part variable_declaration_part .)
    TYPE            reduce using rule 398 (module_block_middle_part -> module_block_middle_part variable_declaration_part .)
    VAR             reduce using rule 398 (module_block_middle_part -> module_block_middle_part variable_declaration_part .)
    PROCEDURE       reduce using rule 398 (module_block_middle_part -> module_block_middle_part variable_declaration_part .)
    FUNCTION        reduce using rule 398 (module_block_middle_part -> module_block_middle_part variable_declaration_part .)


state 106

    (396) module_block_middle_part -> module_block_middle_part constant_definition_part .

    END             reduce using rule 396 (module_block_middle_part -> module_block_middle_part constant_definition_part .)
    TO              reduce using rule 396 (module_block_middle_part -> module_block_middle_part constant_definition_part .)
    CONST           reduce using rule 396 (module_block_middle_part -> module_block_middle_part constant_definition_part .)
    TYPE            reduce using rule 396 (module_block_middle_part -> module_block_middle_part constant_definition_part .)
    VAR             reduce using rule 396 (module_block_middle_part -> module_block_middle_part constant_definition_part .)
    PROCEDURE       reduce using rule 396 (module_block_middle_part -> module_block_middle_part constant_definition_part .)
    FUNCTION        reduce using rule 396 (module_block_middle_part -> module_block_middle_part constant_definition_part .)


state 107

    (399) module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part .
    (239) procedure_and_function_declaration_part -> procedure_and_function_declaration_part . procedure_declaration SEMICOLON
    (240) procedure_and_function_declaration_part -> procedure_and_function_declaration_part . function_declaration SEMICOLON
    (241) procedure_declaration -> . procedure_heading SEMICOLON remote_directive
    (242) procedure_declaration -> . procedure_heading SEMICOLON procedure_block
    (283) function_declaration -> . function_heading SEMICOLON remote_directive
    (284) function_declaration -> . function_identification SEMICOLON function_block
    (285) function_declaration -> . function_heading SEMICOLON function_block
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (286) function_identification -> . FUNCTION identifier

  ! shift/reduce conflict for PROCEDURE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    END             reduce using rule 399 (module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part .)
    TO              reduce using rule 399 (module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part .)
    CONST           reduce using rule 399 (module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part .)
    TYPE            reduce using rule 399 (module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part .)
    VAR             reduce using rule 399 (module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part .)
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 42

  ! PROCEDURE       [ reduce using rule 399 (module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part .) ]
  ! FUNCTION        [ reduce using rule 399 (module_block_middle_part -> module_block_middle_part procedure_and_function_declaration_part .) ]

    procedure_heading              shift and go to state 48
    function_declaration           shift and go to state 82
    procedure_declaration          shift and go to state 83
    function_heading               shift and go to state 51
    function_identification        shift and go to state 44

state 108

    (388) module_block -> import_part module_block_middle_part END .

    DOT             reduce using rule 388 (module_block -> import_part module_block_middle_part END .)


state 109

    (397) module_block_middle_part -> module_block_middle_part type_definition_part .

    END             reduce using rule 397 (module_block_middle_part -> module_block_middle_part type_definition_part .)
    TO              reduce using rule 397 (module_block_middle_part -> module_block_middle_part type_definition_part .)
    CONST           reduce using rule 397 (module_block_middle_part -> module_block_middle_part type_definition_part .)
    TYPE            reduce using rule 397 (module_block_middle_part -> module_block_middle_part type_definition_part .)
    VAR             reduce using rule 397 (module_block_middle_part -> module_block_middle_part type_definition_part .)
    PROCEDURE       reduce using rule 397 (module_block_middle_part -> module_block_middle_part type_definition_part .)
    FUNCTION        reduce using rule 397 (module_block_middle_part -> module_block_middle_part type_definition_part .)


state 110

    (389) module_block -> import_part module_block_middle_part initialization_part . END
    (391) module_block -> import_part module_block_middle_part initialization_part . finalization_part END
    (401) finalization_part -> . TO END DO statement SEMICOLON

    END             shift and go to state 204
    TO              shift and go to state 98

    finalization_part              shift and go to state 205

state 111

    (390) module_block -> import_part module_block_middle_part finalization_part . END

    END             shift and go to state 206


state 112

    (198) import_specification_list -> import_specification_list import_specification . SEMICOLON

    SEMICOLON       shift and go to state 207


state 113

    (207) selective_import_option -> ONLY .

    LPAREN          reduce using rule 207 (selective_import_option -> ONLY .)


state 114

    (200) import_specification -> interface_identifier access_qualifier .
    (202) import_specification -> interface_identifier access_qualifier . import_qualifier
    (205) import_qualifier -> . selective_import_option LPAREN import_list RPAREN
    (206) import_qualifier -> . LPAREN import_list RPAREN
    (207) selective_import_option -> . ONLY

    SEMICOLON       reduce using rule 200 (import_specification -> interface_identifier access_qualifier .)
    LPAREN          shift and go to state 117
    ONLY            shift and go to state 113

    import_qualifier               shift and go to state 208
    selective_import_option        shift and go to state 118

state 115

    (201) import_specification -> interface_identifier import_qualifier .

    SEMICOLON       reduce using rule 201 (import_specification -> interface_identifier import_qualifier .)


state 116

    (204) access_qualifier -> QUALIFIED .

    LPAREN          reduce using rule 204 (access_qualifier -> QUALIFIED .)
    ONLY            reduce using rule 204 (access_qualifier -> QUALIFIED .)
    SEMICOLON       reduce using rule 204 (access_qualifier -> QUALIFIED .)


state 117

    (206) import_qualifier -> LPAREN . import_list RPAREN
    (208) import_list -> . import_clause
    (209) import_list -> . import_list COMMA import_clause
    (210) import_clause -> . constituent_identifier
    (211) import_clause -> . import_renaming_clause
    (212) constituent_identifier -> . identifier
    (213) import_renaming_clause -> . constituent_identifier EG identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 212
    import_clause                  shift and go to state 211
    import_list                    shift and go to state 213
    constituent_identifier         shift and go to state 209
    import_renaming_clause         shift and go to state 210

state 118

    (205) import_qualifier -> selective_import_option . LPAREN import_list RPAREN

    LPAREN          shift and go to state 214


state 119

    (197) import_specification_list -> import_specification SEMICOLON .

    ID              reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    END             reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    TO              reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    CONST           reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    TYPE            reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    VAR             reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    PROCEDURE       reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    FUNCTION        reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    LABEL_WORD      reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)
    BEGIN           reduce using rule 197 (import_specification_list -> import_specification SEMICOLON .)


state 120

    (40) component_variable -> indexed_variable .

    ASSIGNMENT      reduce using rule 40 (component_variable -> indexed_variable .)
    LBRAC           reduce using rule 40 (component_variable -> indexed_variable .)
    UPARROW         reduce using rule 40 (component_variable -> indexed_variable .)
    DOT             reduce using rule 40 (component_variable -> indexed_variable .)
    STARSTAR        reduce using rule 40 (component_variable -> indexed_variable .)
    POW             reduce using rule 40 (component_variable -> indexed_variable .)
    STAR            reduce using rule 40 (component_variable -> indexed_variable .)
    SLASH           reduce using rule 40 (component_variable -> indexed_variable .)
    DIV             reduce using rule 40 (component_variable -> indexed_variable .)
    MOD             reduce using rule 40 (component_variable -> indexed_variable .)
    AND             reduce using rule 40 (component_variable -> indexed_variable .)
    AND_THEN        reduce using rule 40 (component_variable -> indexed_variable .)
    PLUS            reduce using rule 40 (component_variable -> indexed_variable .)
    MINUS           reduce using rule 40 (component_variable -> indexed_variable .)
    GL              reduce using rule 40 (component_variable -> indexed_variable .)
    OR              reduce using rule 40 (component_variable -> indexed_variable .)
    OR_ELSE         reduce using rule 40 (component_variable -> indexed_variable .)
    DOTDOT          reduce using rule 40 (component_variable -> indexed_variable .)
    EQUAL           reduce using rule 40 (component_variable -> indexed_variable .)
    LG              reduce using rule 40 (component_variable -> indexed_variable .)
    LT              reduce using rule 40 (component_variable -> indexed_variable .)
    GT              reduce using rule 40 (component_variable -> indexed_variable .)
    LE              reduce using rule 40 (component_variable -> indexed_variable .)
    GE              reduce using rule 40 (component_variable -> indexed_variable .)
    IN              reduce using rule 40 (component_variable -> indexed_variable .)
    RBRAC           reduce using rule 40 (component_variable -> indexed_variable .)
    COMMA           reduce using rule 40 (component_variable -> indexed_variable .)
    COLON           reduce using rule 40 (component_variable -> indexed_variable .)
    TO              reduce using rule 40 (component_variable -> indexed_variable .)
    DOWNTO          reduce using rule 40 (component_variable -> indexed_variable .)
    RPAREN          reduce using rule 40 (component_variable -> indexed_variable .)
    SEMICOLON       reduce using rule 40 (component_variable -> indexed_variable .)
    DO              reduce using rule 40 (component_variable -> indexed_variable .)
    END             reduce using rule 40 (component_variable -> indexed_variable .)
    UNTIL           reduce using rule 40 (component_variable -> indexed_variable .)
    ELSE            reduce using rule 40 (component_variable -> indexed_variable .)
    OTHERWISE       reduce using rule 40 (component_variable -> indexed_variable .)
    OF              reduce using rule 40 (component_variable -> indexed_variable .)
    THEN            reduce using rule 40 (component_variable -> indexed_variable .)
    VALUE           reduce using rule 40 (component_variable -> indexed_variable .)


state 121

    (307) structured_statement -> with_statement .

    UNTIL           reduce using rule 307 (structured_statement -> with_statement .)
    SEMICOLON       reduce using rule 307 (structured_statement -> with_statement .)
    END             reduce using rule 307 (structured_statement -> with_statement .)
    ELSE            reduce using rule 307 (structured_statement -> with_statement .)
    OTHERWISE       reduce using rule 307 (structured_statement -> with_statement .)


state 122

    (289) compound_statement -> BEGIN statement_sequence . END
    (291) statement_sequence -> statement_sequence . SEMICOLON statement

    END             shift and go to state 215
    SEMICOLON       shift and go to state 216


state 123

    (299) simple_statement -> goto_statement .

    END             reduce using rule 299 (simple_statement -> goto_statement .)
    SEMICOLON       reduce using rule 299 (simple_statement -> goto_statement .)
    UNTIL           reduce using rule 299 (simple_statement -> goto_statement .)
    ELSE            reduce using rule 299 (simple_statement -> goto_statement .)
    OTHERWISE       reduce using rule 299 (simple_statement -> goto_statement .)


state 124

    (300) assignment_statement -> variable_access . ASSIGNMENT expression
    (50) substring_variable -> variable_access . LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> variable_access . UPARROW
    (42) indexed_variable -> variable_access . LBRAC index_expression_list RBRAC
    (46) field_designator -> variable_access . DOT identifier

    ASSIGNMENT      shift and go to state 218
    LBRAC           shift and go to state 217
    UPARROW         shift and go to state 219
    DOT             shift and go to state 220


state 125

    (295) statement -> structured_statement .

    END             reduce using rule 295 (statement -> structured_statement .)
    SEMICOLON       reduce using rule 295 (statement -> structured_statement .)
    UNTIL           reduce using rule 295 (statement -> structured_statement .)
    ELSE            reduce using rule 295 (statement -> structured_statement .)
    OTHERWISE       reduce using rule 295 (statement -> structured_statement .)


state 126

    (341) with_statement -> WITH . with_list DO statement
    (342) with_list -> . with_element
    (343) with_list -> . with_list COMMA with_element
    (344) with_element -> . variable_access
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    name                           shift and go to state 224
    indexed_variable               shift and go to state 120
    entire_variable                shift and go to state 134
    field_designator               shift and go to state 130
    component_variable             shift and go to state 152
    variable_access                shift and go to state 222
    with_element                   shift and go to state 223
    with_list                      shift and go to state 221
    pointer_variable               shift and go to state 137
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 127

    (314) case_statement -> CASE . case_index OF case_list_element_list END
    (315) case_statement -> CASE . case_index OF case_statement_completer END
    (316) case_statement -> CASE . case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> CASE . case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> CASE . case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> CASE . case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> CASE . case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> CASE . case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (326) case_index -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    case_index                     shift and go to state 235
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 244
    substring_variable             shift and go to state 153

state 128

    (332) for_statement -> FOR . entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    name                           shift and go to state 224
    entire_variable                shift and go to state 245
    identifier                     shift and go to state 92

state 129

    (304) structured_statement -> compound_statement .

    UNTIL           reduce using rule 304 (structured_statement -> compound_statement .)
    SEMICOLON       reduce using rule 304 (structured_statement -> compound_statement .)
    END             reduce using rule 304 (structured_statement -> compound_statement .)
    ELSE            reduce using rule 304 (structured_statement -> compound_statement .)
    OTHERWISE       reduce using rule 304 (structured_statement -> compound_statement .)


state 130

    (41) component_variable -> field_designator .

    ASSIGNMENT      reduce using rule 41 (component_variable -> field_designator .)
    LBRAC           reduce using rule 41 (component_variable -> field_designator .)
    UPARROW         reduce using rule 41 (component_variable -> field_designator .)
    DOT             reduce using rule 41 (component_variable -> field_designator .)
    STARSTAR        reduce using rule 41 (component_variable -> field_designator .)
    POW             reduce using rule 41 (component_variable -> field_designator .)
    STAR            reduce using rule 41 (component_variable -> field_designator .)
    SLASH           reduce using rule 41 (component_variable -> field_designator .)
    DIV             reduce using rule 41 (component_variable -> field_designator .)
    MOD             reduce using rule 41 (component_variable -> field_designator .)
    AND             reduce using rule 41 (component_variable -> field_designator .)
    AND_THEN        reduce using rule 41 (component_variable -> field_designator .)
    PLUS            reduce using rule 41 (component_variable -> field_designator .)
    MINUS           reduce using rule 41 (component_variable -> field_designator .)
    GL              reduce using rule 41 (component_variable -> field_designator .)
    OR              reduce using rule 41 (component_variable -> field_designator .)
    OR_ELSE         reduce using rule 41 (component_variable -> field_designator .)
    DOTDOT          reduce using rule 41 (component_variable -> field_designator .)
    EQUAL           reduce using rule 41 (component_variable -> field_designator .)
    LG              reduce using rule 41 (component_variable -> field_designator .)
    LT              reduce using rule 41 (component_variable -> field_designator .)
    GT              reduce using rule 41 (component_variable -> field_designator .)
    LE              reduce using rule 41 (component_variable -> field_designator .)
    GE              reduce using rule 41 (component_variable -> field_designator .)
    IN              reduce using rule 41 (component_variable -> field_designator .)
    RBRAC           reduce using rule 41 (component_variable -> field_designator .)
    COMMA           reduce using rule 41 (component_variable -> field_designator .)
    COLON           reduce using rule 41 (component_variable -> field_designator .)
    TO              reduce using rule 41 (component_variable -> field_designator .)
    DOWNTO          reduce using rule 41 (component_variable -> field_designator .)
    RPAREN          reduce using rule 41 (component_variable -> field_designator .)
    SEMICOLON       reduce using rule 41 (component_variable -> field_designator .)
    DO              reduce using rule 41 (component_variable -> field_designator .)
    END             reduce using rule 41 (component_variable -> field_designator .)
    UNTIL           reduce using rule 41 (component_variable -> field_designator .)
    ELSE            reduce using rule 41 (component_variable -> field_designator .)
    OTHERWISE       reduce using rule 41 (component_variable -> field_designator .)
    OF              reduce using rule 41 (component_variable -> field_designator .)
    THEN            reduce using rule 41 (component_variable -> field_designator .)
    VALUE           reduce using rule 41 (component_variable -> field_designator .)


state 131

    (297) simple_statement -> assignment_statement .

    END             reduce using rule 297 (simple_statement -> assignment_statement .)
    SEMICOLON       reduce using rule 297 (simple_statement -> assignment_statement .)
    UNTIL           reduce using rule 297 (simple_statement -> assignment_statement .)
    ELSE            reduce using rule 297 (simple_statement -> assignment_statement .)
    OTHERWISE       reduce using rule 297 (simple_statement -> assignment_statement .)


state 132

    (298) simple_statement -> procedure_statement .

    END             reduce using rule 298 (simple_statement -> procedure_statement .)
    SEMICOLON       reduce using rule 298 (simple_statement -> procedure_statement .)
    UNTIL           reduce using rule 298 (simple_statement -> procedure_statement .)
    ELSE            reduce using rule 298 (simple_statement -> procedure_statement .)
    OTHERWISE       reduce using rule 298 (simple_statement -> procedure_statement .)


state 133

    (292) statement -> label . COLON simple_statement
    (293) statement -> label . COLON structured_statement

    COLON           shift and go to state 246


state 134

    (34) variable_access -> entire_variable .

    LBRAC           reduce using rule 34 (variable_access -> entire_variable .)
    UPARROW         reduce using rule 34 (variable_access -> entire_variable .)
    DOT             reduce using rule 34 (variable_access -> entire_variable .)
    STARSTAR        reduce using rule 34 (variable_access -> entire_variable .)
    POW             reduce using rule 34 (variable_access -> entire_variable .)
    STAR            reduce using rule 34 (variable_access -> entire_variable .)
    SLASH           reduce using rule 34 (variable_access -> entire_variable .)
    DIV             reduce using rule 34 (variable_access -> entire_variable .)
    MOD             reduce using rule 34 (variable_access -> entire_variable .)
    AND             reduce using rule 34 (variable_access -> entire_variable .)
    AND_THEN        reduce using rule 34 (variable_access -> entire_variable .)
    PLUS            reduce using rule 34 (variable_access -> entire_variable .)
    MINUS           reduce using rule 34 (variable_access -> entire_variable .)
    GL              reduce using rule 34 (variable_access -> entire_variable .)
    OR              reduce using rule 34 (variable_access -> entire_variable .)
    OR_ELSE         reduce using rule 34 (variable_access -> entire_variable .)
    EQUAL           reduce using rule 34 (variable_access -> entire_variable .)
    LG              reduce using rule 34 (variable_access -> entire_variable .)
    LT              reduce using rule 34 (variable_access -> entire_variable .)
    GT              reduce using rule 34 (variable_access -> entire_variable .)
    LE              reduce using rule 34 (variable_access -> entire_variable .)
    GE              reduce using rule 34 (variable_access -> entire_variable .)
    IN              reduce using rule 34 (variable_access -> entire_variable .)
    OF              reduce using rule 34 (variable_access -> entire_variable .)
    THEN            reduce using rule 34 (variable_access -> entire_variable .)
    DO              reduce using rule 34 (variable_access -> entire_variable .)
    SEMICOLON       reduce using rule 34 (variable_access -> entire_variable .)
    DOTDOT          reduce using rule 34 (variable_access -> entire_variable .)
    RBRAC           reduce using rule 34 (variable_access -> entire_variable .)
    COMMA           reduce using rule 34 (variable_access -> entire_variable .)
    END             reduce using rule 34 (variable_access -> entire_variable .)
    UNTIL           reduce using rule 34 (variable_access -> entire_variable .)
    ELSE            reduce using rule 34 (variable_access -> entire_variable .)
    OTHERWISE       reduce using rule 34 (variable_access -> entire_variable .)
    RPAREN          reduce using rule 34 (variable_access -> entire_variable .)
    COLON           reduce using rule 34 (variable_access -> entire_variable .)
    TO              reduce using rule 34 (variable_access -> entire_variable .)
    DOWNTO          reduce using rule 34 (variable_access -> entire_variable .)
    VALUE           reduce using rule 34 (variable_access -> entire_variable .)
    ASSIGNMENT      reduce using rule 34 (variable_access -> entire_variable .)


state 135

    (328) repetitive_statement -> while_statement .

    END             reduce using rule 328 (repetitive_statement -> while_statement .)
    SEMICOLON       reduce using rule 328 (repetitive_statement -> while_statement .)
    UNTIL           reduce using rule 328 (repetitive_statement -> while_statement .)
    ELSE            reduce using rule 328 (repetitive_statement -> while_statement .)
    OTHERWISE       reduce using rule 328 (repetitive_statement -> while_statement .)


state 136

    (290) statement_sequence -> statement .

    END             reduce using rule 290 (statement_sequence -> statement .)
    SEMICOLON       reduce using rule 290 (statement_sequence -> statement .)
    UNTIL           reduce using rule 290 (statement_sequence -> statement .)


state 137

    (37) variable_access -> pointer_variable .

    LBRAC           reduce using rule 37 (variable_access -> pointer_variable .)
    UPARROW         reduce using rule 37 (variable_access -> pointer_variable .)
    DOT             reduce using rule 37 (variable_access -> pointer_variable .)
    STARSTAR        reduce using rule 37 (variable_access -> pointer_variable .)
    POW             reduce using rule 37 (variable_access -> pointer_variable .)
    STAR            reduce using rule 37 (variable_access -> pointer_variable .)
    SLASH           reduce using rule 37 (variable_access -> pointer_variable .)
    DIV             reduce using rule 37 (variable_access -> pointer_variable .)
    MOD             reduce using rule 37 (variable_access -> pointer_variable .)
    AND             reduce using rule 37 (variable_access -> pointer_variable .)
    AND_THEN        reduce using rule 37 (variable_access -> pointer_variable .)
    PLUS            reduce using rule 37 (variable_access -> pointer_variable .)
    MINUS           reduce using rule 37 (variable_access -> pointer_variable .)
    GL              reduce using rule 37 (variable_access -> pointer_variable .)
    OR              reduce using rule 37 (variable_access -> pointer_variable .)
    OR_ELSE         reduce using rule 37 (variable_access -> pointer_variable .)
    EQUAL           reduce using rule 37 (variable_access -> pointer_variable .)
    LG              reduce using rule 37 (variable_access -> pointer_variable .)
    LT              reduce using rule 37 (variable_access -> pointer_variable .)
    GT              reduce using rule 37 (variable_access -> pointer_variable .)
    LE              reduce using rule 37 (variable_access -> pointer_variable .)
    GE              reduce using rule 37 (variable_access -> pointer_variable .)
    IN              reduce using rule 37 (variable_access -> pointer_variable .)
    OF              reduce using rule 37 (variable_access -> pointer_variable .)
    THEN            reduce using rule 37 (variable_access -> pointer_variable .)
    DO              reduce using rule 37 (variable_access -> pointer_variable .)
    SEMICOLON       reduce using rule 37 (variable_access -> pointer_variable .)
    DOTDOT          reduce using rule 37 (variable_access -> pointer_variable .)
    RBRAC           reduce using rule 37 (variable_access -> pointer_variable .)
    COMMA           reduce using rule 37 (variable_access -> pointer_variable .)
    END             reduce using rule 37 (variable_access -> pointer_variable .)
    UNTIL           reduce using rule 37 (variable_access -> pointer_variable .)
    ELSE            reduce using rule 37 (variable_access -> pointer_variable .)
    OTHERWISE       reduce using rule 37 (variable_access -> pointer_variable .)
    RPAREN          reduce using rule 37 (variable_access -> pointer_variable .)
    COLON           reduce using rule 37 (variable_access -> pointer_variable .)
    TO              reduce using rule 37 (variable_access -> pointer_variable .)
    DOWNTO          reduce using rule 37 (variable_access -> pointer_variable .)
    VALUE           reduce using rule 37 (variable_access -> pointer_variable .)
    ASSIGNMENT      reduce using rule 37 (variable_access -> pointer_variable .)


state 138

    (308) conditional_statement -> if_statement .

    UNTIL           reduce using rule 308 (conditional_statement -> if_statement .)
    SEMICOLON       reduce using rule 308 (conditional_statement -> if_statement .)
    END             reduce using rule 308 (conditional_statement -> if_statement .)
    ELSE            reduce using rule 308 (conditional_statement -> if_statement .)
    OTHERWISE       reduce using rule 308 (conditional_statement -> if_statement .)


state 139

    (296) simple_statement -> empty .

    END             reduce using rule 296 (simple_statement -> empty .)
    SEMICOLON       reduce using rule 296 (simple_statement -> empty .)
    UNTIL           reduce using rule 296 (simple_statement -> empty .)
    ELSE            reduce using rule 296 (simple_statement -> empty .)
    OTHERWISE       reduce using rule 296 (simple_statement -> empty .)


state 140

    (327) repetitive_statement -> repeat_statement .

    END             reduce using rule 327 (repetitive_statement -> repeat_statement .)
    SEMICOLON       reduce using rule 327 (repetitive_statement -> repeat_statement .)
    UNTIL           reduce using rule 327 (repetitive_statement -> repeat_statement .)
    ELSE            reduce using rule 327 (repetitive_statement -> repeat_statement .)
    OTHERWISE       reduce using rule 327 (repetitive_statement -> repeat_statement .)


state 141

    (329) repetitive_statement -> for_statement .

    END             reduce using rule 329 (repetitive_statement -> for_statement .)
    SEMICOLON       reduce using rule 329 (repetitive_statement -> for_statement .)
    UNTIL           reduce using rule 329 (repetitive_statement -> for_statement .)
    ELSE            reduce using rule 329 (repetitive_statement -> for_statement .)
    OTHERWISE       reduce using rule 329 (repetitive_statement -> for_statement .)


state 142

    (330) repeat_statement -> REPEAT . statement_sequence UNTIL boolean_expression
    (290) statement_sequence -> . statement
    (291) statement_sequence -> . statement_sequence SEMICOLON statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    UNTIL           reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    statement_sequence             shift and go to state 247
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 136
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 143

    (303) goto_statement -> GOTO . label
    (217) label -> . UNSIGNEDNUMBER

    UNSIGNEDNUMBER  shift and go to state 149

    label                          shift and go to state 248

state 144

    (294) statement -> simple_statement .

    END             reduce using rule 294 (statement -> simple_statement .)
    SEMICOLON       reduce using rule 294 (statement -> simple_statement .)
    UNTIL           reduce using rule 294 (statement -> simple_statement .)
    ELSE            reduce using rule 294 (statement -> simple_statement .)
    OTHERWISE       reduce using rule 294 (statement -> simple_statement .)


state 145

    (306) structured_statement -> repetitive_statement .

    UNTIL           reduce using rule 306 (structured_statement -> repetitive_statement .)
    SEMICOLON       reduce using rule 306 (structured_statement -> repetitive_statement .)
    END             reduce using rule 306 (structured_statement -> repetitive_statement .)
    ELSE            reduce using rule 306 (structured_statement -> repetitive_statement .)
    OTHERWISE       reduce using rule 306 (structured_statement -> repetitive_statement .)


state 146

    (309) conditional_statement -> case_statement .

    UNTIL           reduce using rule 309 (conditional_statement -> case_statement .)
    SEMICOLON       reduce using rule 309 (conditional_statement -> case_statement .)
    END             reduce using rule 309 (conditional_statement -> case_statement .)
    ELSE            reduce using rule 309 (conditional_statement -> case_statement .)
    OTHERWISE       reduce using rule 309 (conditional_statement -> case_statement .)


state 147

    (305) structured_statement -> conditional_statement .

    UNTIL           reduce using rule 305 (structured_statement -> conditional_statement .)
    SEMICOLON       reduce using rule 305 (structured_statement -> conditional_statement .)
    END             reduce using rule 305 (structured_statement -> conditional_statement .)
    ELSE            reduce using rule 305 (structured_statement -> conditional_statement .)
    OTHERWISE       reduce using rule 305 (structured_statement -> conditional_statement .)


state 148

    (310) if_statement -> IF . boolean_expression THEN statement
    (311) if_statement -> IF . boolean_expression THEN statement else_part
    (312) boolean_expression -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    boolean_expression             shift and go to state 249
    expression                     shift and go to state 250
    substring_variable             shift and go to state 153

state 149

    (217) label -> UNSIGNEDNUMBER .

    COLON           reduce using rule 217 (label -> UNSIGNEDNUMBER .)
    END             reduce using rule 217 (label -> UNSIGNEDNUMBER .)
    SEMICOLON       reduce using rule 217 (label -> UNSIGNEDNUMBER .)
    UNTIL           reduce using rule 217 (label -> UNSIGNEDNUMBER .)
    ELSE            reduce using rule 217 (label -> UNSIGNEDNUMBER .)
    OTHERWISE       reduce using rule 217 (label -> UNSIGNEDNUMBER .)
    COMMA           reduce using rule 217 (label -> UNSIGNEDNUMBER .)


state 150

    (301) procedure_statement -> name .
    (302) procedure_statement -> name . actual_parameter_list
    (48) name -> name . DOT identifier
    (38) entire_variable -> name .
    (39) entire_variable -> name . actual_parameter_list
    (51) actual_parameter_list -> . LPAREN actual_parameter_list_list RPAREN

  ! shift/reduce conflict for DOT resolved as shift
    SEMICOLON       reduce using rule 301 (procedure_statement -> name .)
    END             reduce using rule 301 (procedure_statement -> name .)
    UNTIL           reduce using rule 301 (procedure_statement -> name .)
    ELSE            reduce using rule 301 (procedure_statement -> name .)
    OTHERWISE       reduce using rule 301 (procedure_statement -> name .)
    DOT             shift and go to state 189
    ASSIGNMENT      reduce using rule 38 (entire_variable -> name .)
    LBRAC           reduce using rule 38 (entire_variable -> name .)
    UPARROW         reduce using rule 38 (entire_variable -> name .)
    LPAREN          shift and go to state 252

  ! DOT             [ reduce using rule 38 (entire_variable -> name .) ]

    actual_parameter_list          shift and go to state 251

state 151

    (331) while_statement -> WHILE . boolean_expression DO statement
    (312) boolean_expression -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    boolean_expression             shift and go to state 253
    expression                     shift and go to state 250
    substring_variable             shift and go to state 153

state 152

    (35) variable_access -> component_variable .

    LBRAC           reduce using rule 35 (variable_access -> component_variable .)
    UPARROW         reduce using rule 35 (variable_access -> component_variable .)
    DOT             reduce using rule 35 (variable_access -> component_variable .)
    STARSTAR        reduce using rule 35 (variable_access -> component_variable .)
    POW             reduce using rule 35 (variable_access -> component_variable .)
    STAR            reduce using rule 35 (variable_access -> component_variable .)
    SLASH           reduce using rule 35 (variable_access -> component_variable .)
    DIV             reduce using rule 35 (variable_access -> component_variable .)
    MOD             reduce using rule 35 (variable_access -> component_variable .)
    AND             reduce using rule 35 (variable_access -> component_variable .)
    AND_THEN        reduce using rule 35 (variable_access -> component_variable .)
    PLUS            reduce using rule 35 (variable_access -> component_variable .)
    MINUS           reduce using rule 35 (variable_access -> component_variable .)
    GL              reduce using rule 35 (variable_access -> component_variable .)
    OR              reduce using rule 35 (variable_access -> component_variable .)
    OR_ELSE         reduce using rule 35 (variable_access -> component_variable .)
    EQUAL           reduce using rule 35 (variable_access -> component_variable .)
    LG              reduce using rule 35 (variable_access -> component_variable .)
    LT              reduce using rule 35 (variable_access -> component_variable .)
    GT              reduce using rule 35 (variable_access -> component_variable .)
    LE              reduce using rule 35 (variable_access -> component_variable .)
    GE              reduce using rule 35 (variable_access -> component_variable .)
    IN              reduce using rule 35 (variable_access -> component_variable .)
    OF              reduce using rule 35 (variable_access -> component_variable .)
    THEN            reduce using rule 35 (variable_access -> component_variable .)
    DO              reduce using rule 35 (variable_access -> component_variable .)
    SEMICOLON       reduce using rule 35 (variable_access -> component_variable .)
    DOTDOT          reduce using rule 35 (variable_access -> component_variable .)
    RBRAC           reduce using rule 35 (variable_access -> component_variable .)
    COMMA           reduce using rule 35 (variable_access -> component_variable .)
    END             reduce using rule 35 (variable_access -> component_variable .)
    UNTIL           reduce using rule 35 (variable_access -> component_variable .)
    ELSE            reduce using rule 35 (variable_access -> component_variable .)
    OTHERWISE       reduce using rule 35 (variable_access -> component_variable .)
    RPAREN          reduce using rule 35 (variable_access -> component_variable .)
    COLON           reduce using rule 35 (variable_access -> component_variable .)
    TO              reduce using rule 35 (variable_access -> component_variable .)
    DOWNTO          reduce using rule 35 (variable_access -> component_variable .)
    VALUE           reduce using rule 35 (variable_access -> component_variable .)
    ASSIGNMENT      reduce using rule 35 (variable_access -> component_variable .)


state 153

    (36) variable_access -> substring_variable .

    LBRAC           reduce using rule 36 (variable_access -> substring_variable .)
    UPARROW         reduce using rule 36 (variable_access -> substring_variable .)
    DOT             reduce using rule 36 (variable_access -> substring_variable .)
    STARSTAR        reduce using rule 36 (variable_access -> substring_variable .)
    POW             reduce using rule 36 (variable_access -> substring_variable .)
    STAR            reduce using rule 36 (variable_access -> substring_variable .)
    SLASH           reduce using rule 36 (variable_access -> substring_variable .)
    DIV             reduce using rule 36 (variable_access -> substring_variable .)
    MOD             reduce using rule 36 (variable_access -> substring_variable .)
    AND             reduce using rule 36 (variable_access -> substring_variable .)
    AND_THEN        reduce using rule 36 (variable_access -> substring_variable .)
    PLUS            reduce using rule 36 (variable_access -> substring_variable .)
    MINUS           reduce using rule 36 (variable_access -> substring_variable .)
    GL              reduce using rule 36 (variable_access -> substring_variable .)
    OR              reduce using rule 36 (variable_access -> substring_variable .)
    OR_ELSE         reduce using rule 36 (variable_access -> substring_variable .)
    EQUAL           reduce using rule 36 (variable_access -> substring_variable .)
    LG              reduce using rule 36 (variable_access -> substring_variable .)
    LT              reduce using rule 36 (variable_access -> substring_variable .)
    GT              reduce using rule 36 (variable_access -> substring_variable .)
    LE              reduce using rule 36 (variable_access -> substring_variable .)
    GE              reduce using rule 36 (variable_access -> substring_variable .)
    IN              reduce using rule 36 (variable_access -> substring_variable .)
    OF              reduce using rule 36 (variable_access -> substring_variable .)
    THEN            reduce using rule 36 (variable_access -> substring_variable .)
    DO              reduce using rule 36 (variable_access -> substring_variable .)
    SEMICOLON       reduce using rule 36 (variable_access -> substring_variable .)
    DOTDOT          reduce using rule 36 (variable_access -> substring_variable .)
    RBRAC           reduce using rule 36 (variable_access -> substring_variable .)
    COMMA           reduce using rule 36 (variable_access -> substring_variable .)
    END             reduce using rule 36 (variable_access -> substring_variable .)
    UNTIL           reduce using rule 36 (variable_access -> substring_variable .)
    ELSE            reduce using rule 36 (variable_access -> substring_variable .)
    OTHERWISE       reduce using rule 36 (variable_access -> substring_variable .)
    RPAREN          reduce using rule 36 (variable_access -> substring_variable .)
    COLON           reduce using rule 36 (variable_access -> substring_variable .)
    TO              reduce using rule 36 (variable_access -> substring_variable .)
    DOWNTO          reduce using rule 36 (variable_access -> substring_variable .)
    VALUE           reduce using rule 36 (variable_access -> substring_variable .)
    ASSIGNMENT      reduce using rule 36 (variable_access -> substring_variable .)


state 154

    (214) label_declaration_part -> LABEL_WORD label_list . SEMICOLON
    (216) label_list -> label_list . COMMA label

    SEMICOLON       shift and go to state 255
    COMMA           shift and go to state 254


state 155

    (215) label_list -> label .

    SEMICOLON       reduce using rule 215 (label_list -> label .)
    COMMA           reduce using rule 215 (label_list -> label .)


state 156

    (193) block_middle_part -> block_middle_part variable_declaration_part .

    LABEL_WORD      reduce using rule 193 (block_middle_part -> block_middle_part variable_declaration_part .)
    CONST           reduce using rule 193 (block_middle_part -> block_middle_part variable_declaration_part .)
    TYPE            reduce using rule 193 (block_middle_part -> block_middle_part variable_declaration_part .)
    VAR             reduce using rule 193 (block_middle_part -> block_middle_part variable_declaration_part .)
    BEGIN           reduce using rule 193 (block_middle_part -> block_middle_part variable_declaration_part .)
    PROCEDURE       reduce using rule 193 (block_middle_part -> block_middle_part variable_declaration_part .)
    FUNCTION        reduce using rule 193 (block_middle_part -> block_middle_part variable_declaration_part .)


state 157

    (191) block_middle_part -> block_middle_part constant_definition_part .

    LABEL_WORD      reduce using rule 191 (block_middle_part -> block_middle_part constant_definition_part .)
    CONST           reduce using rule 191 (block_middle_part -> block_middle_part constant_definition_part .)
    TYPE            reduce using rule 191 (block_middle_part -> block_middle_part constant_definition_part .)
    VAR             reduce using rule 191 (block_middle_part -> block_middle_part constant_definition_part .)
    BEGIN           reduce using rule 191 (block_middle_part -> block_middle_part constant_definition_part .)
    PROCEDURE       reduce using rule 191 (block_middle_part -> block_middle_part constant_definition_part .)
    FUNCTION        reduce using rule 191 (block_middle_part -> block_middle_part constant_definition_part .)


state 158

    (194) block_middle_part -> block_middle_part procedure_and_function_declaration_part .
    (239) procedure_and_function_declaration_part -> procedure_and_function_declaration_part . procedure_declaration SEMICOLON
    (240) procedure_and_function_declaration_part -> procedure_and_function_declaration_part . function_declaration SEMICOLON
    (241) procedure_declaration -> . procedure_heading SEMICOLON remote_directive
    (242) procedure_declaration -> . procedure_heading SEMICOLON procedure_block
    (283) function_declaration -> . function_heading SEMICOLON remote_directive
    (284) function_declaration -> . function_identification SEMICOLON function_block
    (285) function_declaration -> . function_heading SEMICOLON function_block
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (286) function_identification -> . FUNCTION identifier

  ! shift/reduce conflict for PROCEDURE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    LABEL_WORD      reduce using rule 194 (block_middle_part -> block_middle_part procedure_and_function_declaration_part .)
    CONST           reduce using rule 194 (block_middle_part -> block_middle_part procedure_and_function_declaration_part .)
    TYPE            reduce using rule 194 (block_middle_part -> block_middle_part procedure_and_function_declaration_part .)
    VAR             reduce using rule 194 (block_middle_part -> block_middle_part procedure_and_function_declaration_part .)
    BEGIN           reduce using rule 194 (block_middle_part -> block_middle_part procedure_and_function_declaration_part .)
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 42

  ! PROCEDURE       [ reduce using rule 194 (block_middle_part -> block_middle_part procedure_and_function_declaration_part .) ]
  ! FUNCTION        [ reduce using rule 194 (block_middle_part -> block_middle_part procedure_and_function_declaration_part .) ]

    procedure_heading              shift and go to state 48
    function_declaration           shift and go to state 82
    procedure_declaration          shift and go to state 83
    function_heading               shift and go to state 51
    function_identification        shift and go to state 44

state 159

    (183) block -> import_part block_middle_part statement_part .

    SEMICOLON       reduce using rule 183 (block -> import_part block_middle_part statement_part .)
    DOT             reduce using rule 183 (block -> import_part block_middle_part statement_part .)


state 160

    (192) block_middle_part -> block_middle_part type_definition_part .

    LABEL_WORD      reduce using rule 192 (block_middle_part -> block_middle_part type_definition_part .)
    CONST           reduce using rule 192 (block_middle_part -> block_middle_part type_definition_part .)
    TYPE            reduce using rule 192 (block_middle_part -> block_middle_part type_definition_part .)
    VAR             reduce using rule 192 (block_middle_part -> block_middle_part type_definition_part .)
    BEGIN           reduce using rule 192 (block_middle_part -> block_middle_part type_definition_part .)
    PROCEDURE       reduce using rule 192 (block_middle_part -> block_middle_part type_definition_part .)
    FUNCTION        reduce using rule 192 (block_middle_part -> block_middle_part type_definition_part .)


state 161

    (190) block_middle_part -> block_middle_part label_declaration_part .

    LABEL_WORD      reduce using rule 190 (block_middle_part -> block_middle_part label_declaration_part .)
    CONST           reduce using rule 190 (block_middle_part -> block_middle_part label_declaration_part .)
    TYPE            reduce using rule 190 (block_middle_part -> block_middle_part label_declaration_part .)
    VAR             reduce using rule 190 (block_middle_part -> block_middle_part label_declaration_part .)
    BEGIN           reduce using rule 190 (block_middle_part -> block_middle_part label_declaration_part .)
    PROCEDURE       reduce using rule 190 (block_middle_part -> block_middle_part label_declaration_part .)
    FUNCTION        reduce using rule 190 (block_middle_part -> block_middle_part label_declaration_part .)


state 162

    (368) export_part_list -> export_part . SEMICOLON

    SEMICOLON       shift and go to state 256


state 163

    (367) interface_specification_part -> EXPORT export_part_list .
    (369) export_part_list -> export_part_list . export_part SEMICOLON
    (370) export_part -> . identifier EQUAL LPAREN export_list RPAREN
    (16) identifier -> . ID

    IMPORT          reduce using rule 367 (interface_specification_part -> EXPORT export_part_list .)
    END             reduce using rule 367 (interface_specification_part -> EXPORT export_part_list .)
    CONST           reduce using rule 367 (interface_specification_part -> EXPORT export_part_list .)
    TYPE            reduce using rule 367 (interface_specification_part -> EXPORT export_part_list .)
    VAR             reduce using rule 367 (interface_specification_part -> EXPORT export_part_list .)
    PROCEDURE       reduce using rule 367 (interface_specification_part -> EXPORT export_part_list .)
    FUNCTION        reduce using rule 367 (interface_specification_part -> EXPORT export_part_list .)
    ID              shift and go to state 18

    identifier                     shift and go to state 164
    export_part                    shift and go to state 257

state 164

    (370) export_part -> identifier . EQUAL LPAREN export_list RPAREN

    EQUAL           shift and go to state 258


state 165

    (351) module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part . module_heading_middle_part END
    (355) module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part . END
    (356) module_heading_middle_part -> . constant_definition_part
    (357) module_heading_middle_part -> . type_definition_part
    (358) module_heading_middle_part -> . variable_declaration_part
    (359) module_heading_middle_part -> . procedure_and_function_heading_part
    (360) module_heading_middle_part -> . module_heading_middle_part constant_definition_part
    (361) module_heading_middle_part -> . module_heading_middle_part type_definition_part
    (362) module_heading_middle_part -> . module_heading_middle_part variable_declaration_part
    (363) module_heading_middle_part -> . module_heading_middle_part procedure_and_function_heading_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (364) procedure_and_function_heading_part -> . procedure_heading SEMICOLON
    (365) procedure_and_function_heading_part -> . function_heading SEMICOLON
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type

    END             shift and go to state 263
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262

    constant_definition_part       shift and go to state 261
    type_definition_part           shift and go to state 264
    variable_declaration_part      shift and go to state 259
    function_heading               shift and go to state 266
    procedure_and_function_heading_part shift and go to state 267
    module_heading_middle_part     shift and go to state 260
    procedure_heading              shift and go to state 265

state 166

    (348) module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part . import_part module_heading_middle_part END
    (352) module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part . import_part END
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    IMPORT          shift and go to state 23
    END             reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    import_part                    shift and go to state 268
    empty                          shift and go to state 21

state 167

    (350) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list . RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (354) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list . RPAREN SEMICOLON interface_specification_part import_part END

    RPAREN          shift and go to state 269


state 168

    (15) identifier_list -> identifier_list COMMA . identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 270

state 169

    (349) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN . SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (353) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN . SEMICOLON interface_specification_part import_part END

    SEMICOLON       shift and go to state 271


state 170

    (180) program_heading -> PROGRAM_WORD identifier LPAREN program_parameter_list RPAREN .

    SEMICOLON       reduce using rule 180 (program_heading -> PROGRAM_WORD identifier LPAREN program_parameter_list RPAREN .)


state 171

    (220) constant_definition_list -> constant_definition_list constant_definition . SEMICOLON

    SEMICOLON       shift and go to state 272


state 172

    (219) constant_definition_list -> constant_definition SEMICOLON .

    ID              reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    END             reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    TO              reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    CONST           reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    TYPE            reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    VAR             reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    PROCEDURE       reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    FUNCTION        reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    LABEL_WORD      reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)
    BEGIN           reduce using rule 219 (constant_definition_list -> constant_definition SEMICOLON .)


state 173

    (221) constant_definition -> identifier EQUAL . constant_expression
    (94) constant_expression -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    constant_expression            shift and go to state 273
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 274
    substring_variable             shift and go to state 153

state 174

    (240) procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .

    PROCEDURE       reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)
    FUNCTION        reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)
    LABEL_WORD      reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)
    CONST           reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)
    TYPE            reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)
    VAR             reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)
    BEGIN           reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)
    END             reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)
    TO              reduce using rule 240 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part function_declaration SEMICOLON .)


state 175

    (239) procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .

    PROCEDURE       reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)
    FUNCTION        reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)
    LABEL_WORD      reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)
    CONST           reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)
    TYPE            reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)
    VAR             reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)
    BEGIN           reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)
    END             reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)
    TO              reduce using rule 239 (procedure_and_function_declaration_part -> procedure_and_function_declaration_part procedure_declaration SEMICOLON .)


state 176

    (400) initialization_part -> TO BEGIN DO . statement SEMICOLON
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    SEMICOLON       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 275
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 177

    (401) finalization_part -> TO END DO . statement SEMICOLON
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    SEMICOLON       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 276
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 178

    (261) function_heading -> FUNCTION identifier formal_parameter_list . result_variable_specification COLON result_type
    (262) function_heading -> FUNCTION identifier formal_parameter_list . COLON result_type
    (265) result_variable_specification -> . EQUAL identifier

    COLON           shift and go to state 278
    EQUAL           shift and go to state 180

    result_variable_specification  shift and go to state 277

state 179

    (263) function_heading -> FUNCTION identifier result_variable_specification . COLON result_type

    COLON           shift and go to state 279


state 180

    (265) result_variable_specification -> EQUAL . identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 280

state 181

    (260) function_heading -> FUNCTION identifier COLON . result_type
    (264) result_type -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    result_type                    shift and go to state 282
    name                           shift and go to state 281

state 182

    (245) formal_parameter_list -> LPAREN . formal_parameter_section_list RPAREN
    (246) formal_parameter_section_list -> . formal_parameter_section
    (247) formal_parameter_section_list -> . formal_parameter_section_list SEMICOLON formal_parameter_section
    (248) formal_parameter_section -> . value_parameter_specification
    (249) formal_parameter_section -> . variable_parameter_specification
    (250) formal_parameter_section -> . procedural_parameter_specification
    (251) formal_parameter_section -> . functional_parameter_specification
    (252) formal_parameter_section -> . conformant_array_parameter_specification
    (253) value_parameter_specification -> . identifier_list COLON parameter_form
    (254) value_parameter_specification -> . PROTECTED identifier_list COLON parameter_form
    (256) variable_parameter_specification -> . PROTECTED VAR identifier_list COLON parameter_form
    (257) variable_parameter_specification -> . VAR identifier_list COLON parameter_form
    (258) procedural_parameter_specification -> . procedure_heading
    (259) functional_parameter_specification -> . function_heading
    (266) conformant_array_parameter_specification -> . PROTECTED value_conformant_array_specification
    (267) conformant_array_parameter_specification -> . PROTECTED variable_conformant_array_specification
    (268) conformant_array_parameter_specification -> . value_conformant_array_specification
    (269) conformant_array_parameter_specification -> . variable_conformant_array_specification
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (270) value_conformant_array_specification -> . identifier_list COLON conformant_array_form
    (279) variable_conformant_array_specification -> . VAR identifier_list COLON conformant_array_form
    (16) identifier -> . ID

    PROTECTED       shift and go to state 284
    VAR             shift and go to state 291
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262
    ID              shift and go to state 18

    procedure_heading              shift and go to state 293
    variable_conformant_array_specification shift and go to state 289
    identifier_list                shift and go to state 292
    procedural_parameter_specification shift and go to state 286
    identifier                     shift and go to state 76
    function_heading               shift and go to state 295
    formal_parameter_section_list  shift and go to state 290
    value_conformant_array_specification shift and go to state 283
    variable_parameter_specification shift and go to state 288
    formal_parameter_section       shift and go to state 296
    value_parameter_specification  shift and go to state 285
    functional_parameter_specification shift and go to state 294
    conformant_array_parameter_specification shift and go to state 287

state 183

    (284) function_declaration -> function_identification SEMICOLON function_block .

    SEMICOLON       reduce using rule 284 (function_declaration -> function_identification SEMICOLON function_block .)


state 184

    (287) function_block -> block .

    SEMICOLON       reduce using rule 287 (function_block -> block .)


state 185

    (235) variable_declaration_list -> variable_declaration_list variable_declaration . SEMICOLON

    SEMICOLON       shift and go to state 297


state 186

    (236) variable_declaration -> identifier_list COLON . type_denoter
    (124) type_denoter -> . type_denoter_middle_part
    (125) type_denoter -> . BINDABLE type_denoter_middle_part
    (126) type_denoter -> . type_denoter_middle_part initial_state_specifier
    (127) type_denoter -> . BINDABLE type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    BINDABLE        shift and go to state 310
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    type_denoter                   shift and go to state 313
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 315
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 187

    (234) variable_declaration_list -> variable_declaration SEMICOLON .

    ID              reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    END             reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    TO              reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    CONST           reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    TYPE            reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    VAR             reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    PROCEDURE       reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    FUNCTION        reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    LABEL_WORD      reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)
    BEGIN           reduce using rule 234 (variable_declaration_list -> variable_declaration SEMICOLON .)


state 188

    (243) procedure_heading -> PROCEDURE name formal_parameter_list .

    SEMICOLON       reduce using rule 243 (procedure_heading -> PROCEDURE name formal_parameter_list .)
    RPAREN          reduce using rule 243 (procedure_heading -> PROCEDURE name formal_parameter_list .)


state 189

    (48) name -> name DOT . identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 327

state 190

    (280) remote_directive -> directive .

    SEMICOLON       reduce using rule 280 (remote_directive -> directive .)


state 191

    (241) procedure_declaration -> procedure_heading SEMICOLON remote_directive .

    SEMICOLON       reduce using rule 241 (procedure_declaration -> procedure_heading SEMICOLON remote_directive .)


state 192

    (242) procedure_declaration -> procedure_heading SEMICOLON procedure_block .

    SEMICOLON       reduce using rule 242 (procedure_declaration -> procedure_heading SEMICOLON procedure_block .)


state 193

    (282) procedure_block -> block .

    SEMICOLON       reduce using rule 282 (procedure_block -> block .)


state 194

    (283) function_declaration -> function_heading SEMICOLON remote_directive .

    SEMICOLON       reduce using rule 283 (function_declaration -> function_heading SEMICOLON remote_directive .)


state 195

    (285) function_declaration -> function_heading SEMICOLON function_block .

    SEMICOLON       reduce using rule 285 (function_declaration -> function_heading SEMICOLON function_block .)


state 196

    (387) module_block -> import_part initialization_part finalization_part END .

    DOT             reduce using rule 387 (module_block -> import_part initialization_part finalization_part END .)


state 197

    (224) type_definition_list -> schema_definition SEMICOLON .

    ID              reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    END             reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    TO              reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    CONST           reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    TYPE            reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    VAR             reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    PROCEDURE       reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    FUNCTION        reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    LABEL_WORD      reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)
    BEGIN           reduce using rule 224 (type_definition_list -> schema_definition SEMICOLON .)


state 198

    (223) type_definition_list -> type_definition SEMICOLON .

    ID              reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    END             reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    TO              reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    CONST           reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    TYPE            reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    VAR             reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    PROCEDURE       reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    FUNCTION        reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    LABEL_WORD      reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)
    BEGIN           reduce using rule 223 (type_definition_list -> type_definition SEMICOLON .)


state 199

    (226) type_definition_list -> type_definition_list schema_definition . SEMICOLON

    SEMICOLON       shift and go to state 328


state 200

    (225) type_definition_list -> type_definition_list type_definition . SEMICOLON

    SEMICOLON       shift and go to state 329


state 201

    (228) schema_definition -> identifier formal_discriminant_part . EQUAL type_denoter

    EQUAL           shift and go to state 330


state 202

    (227) type_definition -> identifier EQUAL . type_denoter
    (124) type_denoter -> . type_denoter_middle_part
    (125) type_denoter -> . BINDABLE type_denoter_middle_part
    (126) type_denoter -> . type_denoter_middle_part initial_state_specifier
    (127) type_denoter -> . BINDABLE type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    BINDABLE        shift and go to state 310
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    type_denoter                   shift and go to state 331
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 315
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 203

    (229) formal_discriminant_part -> LPAREN . discriminant_specification_list RPAREN
    (230) discriminant_specification_list -> . discriminant_specification
    (231) discriminant_specification_list -> . discriminant_specification_list SEMICOLON discriminant_specification
    (232) discriminant_specification -> . identifier_list COLON ordinal_type_name
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    discriminant_specification     shift and go to state 333
    identifier                     shift and go to state 76
    discriminant_specification_list shift and go to state 332
    identifier_list                shift and go to state 334

state 204

    (389) module_block -> import_part module_block_middle_part initialization_part END .

    DOT             reduce using rule 389 (module_block -> import_part module_block_middle_part initialization_part END .)


state 205

    (391) module_block -> import_part module_block_middle_part initialization_part finalization_part . END

    END             shift and go to state 335


state 206

    (390) module_block -> import_part module_block_middle_part finalization_part END .

    DOT             reduce using rule 390 (module_block -> import_part module_block_middle_part finalization_part END .)


state 207

    (198) import_specification_list -> import_specification_list import_specification SEMICOLON .

    ID              reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    END             reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    TO              reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    CONST           reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    TYPE            reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    VAR             reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    PROCEDURE       reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    FUNCTION        reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    LABEL_WORD      reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)
    BEGIN           reduce using rule 198 (import_specification_list -> import_specification_list import_specification SEMICOLON .)


state 208

    (202) import_specification -> interface_identifier access_qualifier import_qualifier .

    SEMICOLON       reduce using rule 202 (import_specification -> interface_identifier access_qualifier import_qualifier .)


state 209

    (210) import_clause -> constituent_identifier .
    (213) import_renaming_clause -> constituent_identifier . EG identifier

    RPAREN          reduce using rule 210 (import_clause -> constituent_identifier .)
    COMMA           reduce using rule 210 (import_clause -> constituent_identifier .)
    EG              shift and go to state 336


state 210

    (211) import_clause -> import_renaming_clause .

    RPAREN          reduce using rule 211 (import_clause -> import_renaming_clause .)
    COMMA           reduce using rule 211 (import_clause -> import_renaming_clause .)


state 211

    (208) import_list -> import_clause .

    RPAREN          reduce using rule 208 (import_list -> import_clause .)
    COMMA           reduce using rule 208 (import_list -> import_clause .)


state 212

    (212) constituent_identifier -> identifier .

    EG              reduce using rule 212 (constituent_identifier -> identifier .)
    RPAREN          reduce using rule 212 (constituent_identifier -> identifier .)
    COMMA           reduce using rule 212 (constituent_identifier -> identifier .)


state 213

    (206) import_qualifier -> LPAREN import_list . RPAREN
    (209) import_list -> import_list . COMMA import_clause

    RPAREN          shift and go to state 338
    COMMA           shift and go to state 337


state 214

    (205) import_qualifier -> selective_import_option LPAREN . import_list RPAREN
    (208) import_list -> . import_clause
    (209) import_list -> . import_list COMMA import_clause
    (210) import_clause -> . constituent_identifier
    (211) import_clause -> . import_renaming_clause
    (212) constituent_identifier -> . identifier
    (213) import_renaming_clause -> . constituent_identifier EG identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    constituent_identifier         shift and go to state 209
    import_renaming_clause         shift and go to state 210
    import_clause                  shift and go to state 211
    identifier                     shift and go to state 212
    import_list                    shift and go to state 339

state 215

    (289) compound_statement -> BEGIN statement_sequence END .

    END             reduce using rule 289 (compound_statement -> BEGIN statement_sequence END .)
    SEMICOLON       reduce using rule 289 (compound_statement -> BEGIN statement_sequence END .)
    UNTIL           reduce using rule 289 (compound_statement -> BEGIN statement_sequence END .)
    ELSE            reduce using rule 289 (compound_statement -> BEGIN statement_sequence END .)
    OTHERWISE       reduce using rule 289 (compound_statement -> BEGIN statement_sequence END .)
    DOT             reduce using rule 289 (compound_statement -> BEGIN statement_sequence END .)


state 216

    (291) statement_sequence -> statement_sequence SEMICOLON . statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    UNTIL           reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 340
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 217

    (50) substring_variable -> variable_access LBRAC . index_expression DOTDOT index_expression RBRAC
    (42) indexed_variable -> variable_access LBRAC . index_expression_list RBRAC
    (45) index_expression -> . expression
    (43) index_expression_list -> . index_expression
    (44) index_expression_list -> . index_expression_list COMMA index_expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    index_expression_list          shift and go to state 342
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    index_expression               shift and go to state 341
    expression                     shift and go to state 343
    substring_variable             shift and go to state 153

state 218

    (300) assignment_statement -> variable_access ASSIGNMENT . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 344
    substring_variable             shift and go to state 153

state 219

    (49) pointer_variable -> variable_access UPARROW .

    LBRAC           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    UPARROW         reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    DOT             reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    STARSTAR        reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    POW             reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    STAR            reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    SLASH           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    DIV             reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    MOD             reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    AND             reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    AND_THEN        reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    PLUS            reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    MINUS           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    GL              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    OR              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    OR_ELSE         reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    EQUAL           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    LG              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    LT              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    GT              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    LE              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    GE              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    IN              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    THEN            reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    ASSIGNMENT      reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    DOTDOT          reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    OF              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    DO              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    SEMICOLON       reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    RBRAC           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    COMMA           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    END             reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    UNTIL           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    ELSE            reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    OTHERWISE       reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    RPAREN          reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    COLON           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    TO              reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    DOWNTO          reduce using rule 49 (pointer_variable -> variable_access UPARROW .)
    VALUE           reduce using rule 49 (pointer_variable -> variable_access UPARROW .)


state 220

    (46) field_designator -> variable_access DOT . identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 345

state 221

    (341) with_statement -> WITH with_list . DO statement
    (343) with_list -> with_list . COMMA with_element

    DO              shift and go to state 346
    COMMA           shift and go to state 347


state 222

    (344) with_element -> variable_access .
    (50) substring_variable -> variable_access . LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> variable_access . UPARROW
    (42) indexed_variable -> variable_access . LBRAC index_expression_list RBRAC
    (46) field_designator -> variable_access . DOT identifier

    DO              reduce using rule 344 (with_element -> variable_access .)
    COMMA           reduce using rule 344 (with_element -> variable_access .)
    LBRAC           shift and go to state 217
    UPARROW         shift and go to state 219
    DOT             shift and go to state 220


state 223

    (342) with_list -> with_element .

    DO              reduce using rule 342 (with_list -> with_element .)
    COMMA           reduce using rule 342 (with_list -> with_element .)


state 224

    (38) entire_variable -> name .
    (39) entire_variable -> name . actual_parameter_list
    (48) name -> name . DOT identifier
    (51) actual_parameter_list -> . LPAREN actual_parameter_list_list RPAREN

  ! shift/reduce conflict for DOT resolved as shift
    LBRAC           reduce using rule 38 (entire_variable -> name .)
    UPARROW         reduce using rule 38 (entire_variable -> name .)
    STARSTAR        reduce using rule 38 (entire_variable -> name .)
    POW             reduce using rule 38 (entire_variable -> name .)
    STAR            reduce using rule 38 (entire_variable -> name .)
    SLASH           reduce using rule 38 (entire_variable -> name .)
    DIV             reduce using rule 38 (entire_variable -> name .)
    MOD             reduce using rule 38 (entire_variable -> name .)
    AND             reduce using rule 38 (entire_variable -> name .)
    AND_THEN        reduce using rule 38 (entire_variable -> name .)
    PLUS            reduce using rule 38 (entire_variable -> name .)
    MINUS           reduce using rule 38 (entire_variable -> name .)
    GL              reduce using rule 38 (entire_variable -> name .)
    OR              reduce using rule 38 (entire_variable -> name .)
    OR_ELSE         reduce using rule 38 (entire_variable -> name .)
    DOTDOT          reduce using rule 38 (entire_variable -> name .)
    EQUAL           reduce using rule 38 (entire_variable -> name .)
    LG              reduce using rule 38 (entire_variable -> name .)
    LT              reduce using rule 38 (entire_variable -> name .)
    GT              reduce using rule 38 (entire_variable -> name .)
    LE              reduce using rule 38 (entire_variable -> name .)
    GE              reduce using rule 38 (entire_variable -> name .)
    IN              reduce using rule 38 (entire_variable -> name .)
    RBRAC           reduce using rule 38 (entire_variable -> name .)
    COMMA           reduce using rule 38 (entire_variable -> name .)
    COLON           reduce using rule 38 (entire_variable -> name .)
    DO              reduce using rule 38 (entire_variable -> name .)
    OF              reduce using rule 38 (entire_variable -> name .)
    THEN            reduce using rule 38 (entire_variable -> name .)
    SEMICOLON       reduce using rule 38 (entire_variable -> name .)
    END             reduce using rule 38 (entire_variable -> name .)
    UNTIL           reduce using rule 38 (entire_variable -> name .)
    ELSE            reduce using rule 38 (entire_variable -> name .)
    OTHERWISE       reduce using rule 38 (entire_variable -> name .)
    RPAREN          reduce using rule 38 (entire_variable -> name .)
    TO              reduce using rule 38 (entire_variable -> name .)
    DOWNTO          reduce using rule 38 (entire_variable -> name .)
    VALUE           reduce using rule 38 (entire_variable -> name .)
    ASSIGNMENT      reduce using rule 38 (entire_variable -> name .)
    DOT             shift and go to state 189
    LPAREN          shift and go to state 252

  ! DOT             [ reduce using rule 38 (entire_variable -> name .) ]

    actual_parameter_list          shift and go to state 348

state 225

    (27) factor -> primary .
    (28) factor -> primary . exponentiating_operator primary
    (99) exponentiating_operator -> . STARSTAR
    (100) exponentiating_operator -> . POW

    STAR            reduce using rule 27 (factor -> primary .)
    SLASH           reduce using rule 27 (factor -> primary .)
    DIV             reduce using rule 27 (factor -> primary .)
    MOD             reduce using rule 27 (factor -> primary .)
    AND             reduce using rule 27 (factor -> primary .)
    AND_THEN        reduce using rule 27 (factor -> primary .)
    PLUS            reduce using rule 27 (factor -> primary .)
    MINUS           reduce using rule 27 (factor -> primary .)
    GL              reduce using rule 27 (factor -> primary .)
    OR              reduce using rule 27 (factor -> primary .)
    OR_ELSE         reduce using rule 27 (factor -> primary .)
    EQUAL           reduce using rule 27 (factor -> primary .)
    LG              reduce using rule 27 (factor -> primary .)
    LT              reduce using rule 27 (factor -> primary .)
    GT              reduce using rule 27 (factor -> primary .)
    LE              reduce using rule 27 (factor -> primary .)
    GE              reduce using rule 27 (factor -> primary .)
    IN              reduce using rule 27 (factor -> primary .)
    OF              reduce using rule 27 (factor -> primary .)
    RBRAC           reduce using rule 27 (factor -> primary .)
    DOTDOT          reduce using rule 27 (factor -> primary .)
    COLON           reduce using rule 27 (factor -> primary .)
    COMMA           reduce using rule 27 (factor -> primary .)
    END             reduce using rule 27 (factor -> primary .)
    SEMICOLON       reduce using rule 27 (factor -> primary .)
    UNTIL           reduce using rule 27 (factor -> primary .)
    ELSE            reduce using rule 27 (factor -> primary .)
    OTHERWISE       reduce using rule 27 (factor -> primary .)
    DO              reduce using rule 27 (factor -> primary .)
    TO              reduce using rule 27 (factor -> primary .)
    DOWNTO          reduce using rule 27 (factor -> primary .)
    THEN            reduce using rule 27 (factor -> primary .)
    RPAREN          reduce using rule 27 (factor -> primary .)
    VALUE           reduce using rule 27 (factor -> primary .)
    STARSTAR        shift and go to state 349
    POW             shift and go to state 351

    exponentiating_operator        shift and go to state 350

state 226

    (22) simple_expression -> sign . simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    set_constructor                shift and go to state 227
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 352
    substring_variable             shift and go to state 153

state 227

    (31) primary -> set_constructor .

    STARSTAR        reduce using rule 31 (primary -> set_constructor .)
    POW             reduce using rule 31 (primary -> set_constructor .)
    STAR            reduce using rule 31 (primary -> set_constructor .)
    SLASH           reduce using rule 31 (primary -> set_constructor .)
    DIV             reduce using rule 31 (primary -> set_constructor .)
    MOD             reduce using rule 31 (primary -> set_constructor .)
    AND             reduce using rule 31 (primary -> set_constructor .)
    AND_THEN        reduce using rule 31 (primary -> set_constructor .)
    PLUS            reduce using rule 31 (primary -> set_constructor .)
    MINUS           reduce using rule 31 (primary -> set_constructor .)
    GL              reduce using rule 31 (primary -> set_constructor .)
    OR              reduce using rule 31 (primary -> set_constructor .)
    OR_ELSE         reduce using rule 31 (primary -> set_constructor .)
    EQUAL           reduce using rule 31 (primary -> set_constructor .)
    LG              reduce using rule 31 (primary -> set_constructor .)
    LT              reduce using rule 31 (primary -> set_constructor .)
    GT              reduce using rule 31 (primary -> set_constructor .)
    LE              reduce using rule 31 (primary -> set_constructor .)
    GE              reduce using rule 31 (primary -> set_constructor .)
    IN              reduce using rule 31 (primary -> set_constructor .)
    THEN            reduce using rule 31 (primary -> set_constructor .)
    OF              reduce using rule 31 (primary -> set_constructor .)
    DO              reduce using rule 31 (primary -> set_constructor .)
    SEMICOLON       reduce using rule 31 (primary -> set_constructor .)
    DOTDOT          reduce using rule 31 (primary -> set_constructor .)
    RBRAC           reduce using rule 31 (primary -> set_constructor .)
    COMMA           reduce using rule 31 (primary -> set_constructor .)
    END             reduce using rule 31 (primary -> set_constructor .)
    UNTIL           reduce using rule 31 (primary -> set_constructor .)
    ELSE            reduce using rule 31 (primary -> set_constructor .)
    OTHERWISE       reduce using rule 31 (primary -> set_constructor .)
    RPAREN          reduce using rule 31 (primary -> set_constructor .)
    COLON           reduce using rule 31 (primary -> set_constructor .)
    TO              reduce using rule 31 (primary -> set_constructor .)
    DOWNTO          reduce using rule 31 (primary -> set_constructor .)
    VALUE           reduce using rule 31 (primary -> set_constructor .)


state 228

    (19) expression -> simple_expression .

    EQUAL           reduce using rule 19 (expression -> simple_expression .)
    LG              reduce using rule 19 (expression -> simple_expression .)
    LT              reduce using rule 19 (expression -> simple_expression .)
    GT              reduce using rule 19 (expression -> simple_expression .)
    LE              reduce using rule 19 (expression -> simple_expression .)
    GE              reduce using rule 19 (expression -> simple_expression .)
    IN              reduce using rule 19 (expression -> simple_expression .)
    DOTDOT          reduce using rule 19 (expression -> simple_expression .)
    DO              reduce using rule 19 (expression -> simple_expression .)
    COLON           reduce using rule 19 (expression -> simple_expression .)
    RPAREN          reduce using rule 19 (expression -> simple_expression .)
    COMMA           reduce using rule 19 (expression -> simple_expression .)
    OF              reduce using rule 19 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 19 (expression -> simple_expression .)
    VALUE           reduce using rule 19 (expression -> simple_expression .)
    END             reduce using rule 19 (expression -> simple_expression .)
    RBRAC           reduce using rule 19 (expression -> simple_expression .)
    OTHERWISE       reduce using rule 19 (expression -> simple_expression .)
    UNTIL           reduce using rule 19 (expression -> simple_expression .)
    ELSE            reduce using rule 19 (expression -> simple_expression .)
    THEN            reduce using rule 19 (expression -> simple_expression .)
    TO              reduce using rule 19 (expression -> simple_expression .)
    DOWNTO          reduce using rule 19 (expression -> simple_expression .)


state 229

    (62) sign -> MINUS .

    LPAREN          reduce using rule 62 (sign -> MINUS .)
    NOT             reduce using rule 62 (sign -> MINUS .)
    UNSIGNEDNUMBER  reduce using rule 62 (sign -> MINUS .)
    CHARACTER_STRING reduce using rule 62 (sign -> MINUS .)
    NIL             reduce using rule 62 (sign -> MINUS .)
    EXTENDEDNUMBER  reduce using rule 62 (sign -> MINUS .)
    LBRAC           reduce using rule 62 (sign -> MINUS .)
    ID              reduce using rule 62 (sign -> MINUS .)


state 230

    (58) unsigned_constant -> CHARACTER_STRING .

    STARSTAR        reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    POW             reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    STAR            reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    SLASH           reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    DIV             reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    MOD             reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    AND             reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    AND_THEN        reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    PLUS            reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    MINUS           reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    GL              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    OR              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    OR_ELSE         reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    EQUAL           reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    LG              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    LT              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    GT              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    LE              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    GE              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    IN              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    TO              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    DOWNTO          reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    OF              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    THEN            reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    DO              reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    SEMICOLON       reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    DOTDOT          reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    RBRAC           reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    COMMA           reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    END             reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    UNTIL           reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    ELSE            reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    OTHERWISE       reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    RPAREN          reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    COLON           reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)
    VALUE           reduce using rule 58 (unsigned_constant -> CHARACTER_STRING .)


state 231

    (29) primary -> variable_access .
    (50) substring_variable -> variable_access . LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> variable_access . UPARROW
    (42) indexed_variable -> variable_access . LBRAC index_expression_list RBRAC
    (46) field_designator -> variable_access . DOT identifier

    STARSTAR        reduce using rule 29 (primary -> variable_access .)
    POW             reduce using rule 29 (primary -> variable_access .)
    STAR            reduce using rule 29 (primary -> variable_access .)
    SLASH           reduce using rule 29 (primary -> variable_access .)
    DIV             reduce using rule 29 (primary -> variable_access .)
    MOD             reduce using rule 29 (primary -> variable_access .)
    AND             reduce using rule 29 (primary -> variable_access .)
    AND_THEN        reduce using rule 29 (primary -> variable_access .)
    PLUS            reduce using rule 29 (primary -> variable_access .)
    MINUS           reduce using rule 29 (primary -> variable_access .)
    GL              reduce using rule 29 (primary -> variable_access .)
    OR              reduce using rule 29 (primary -> variable_access .)
    OR_ELSE         reduce using rule 29 (primary -> variable_access .)
    EQUAL           reduce using rule 29 (primary -> variable_access .)
    LG              reduce using rule 29 (primary -> variable_access .)
    LT              reduce using rule 29 (primary -> variable_access .)
    GT              reduce using rule 29 (primary -> variable_access .)
    LE              reduce using rule 29 (primary -> variable_access .)
    GE              reduce using rule 29 (primary -> variable_access .)
    IN              reduce using rule 29 (primary -> variable_access .)
    THEN            reduce using rule 29 (primary -> variable_access .)
    OF              reduce using rule 29 (primary -> variable_access .)
    DO              reduce using rule 29 (primary -> variable_access .)
    SEMICOLON       reduce using rule 29 (primary -> variable_access .)
    DOTDOT          reduce using rule 29 (primary -> variable_access .)
    RBRAC           reduce using rule 29 (primary -> variable_access .)
    COMMA           reduce using rule 29 (primary -> variable_access .)
    END             reduce using rule 29 (primary -> variable_access .)
    UNTIL           reduce using rule 29 (primary -> variable_access .)
    ELSE            reduce using rule 29 (primary -> variable_access .)
    OTHERWISE       reduce using rule 29 (primary -> variable_access .)
    RPAREN          reduce using rule 29 (primary -> variable_access .)
    COLON           reduce using rule 29 (primary -> variable_access .)
    TO              reduce using rule 29 (primary -> variable_access .)
    DOWNTO          reduce using rule 29 (primary -> variable_access .)
    VALUE           reduce using rule 29 (primary -> variable_access .)
    LBRAC           shift and go to state 217
    UPARROW         shift and go to state 219
    DOT             shift and go to state 220


state 232

    (61) sign -> PLUS .

    LPAREN          reduce using rule 61 (sign -> PLUS .)
    NOT             reduce using rule 61 (sign -> PLUS .)
    UNSIGNEDNUMBER  reduce using rule 61 (sign -> PLUS .)
    CHARACTER_STRING reduce using rule 61 (sign -> PLUS .)
    NIL             reduce using rule 61 (sign -> PLUS .)
    EXTENDEDNUMBER  reduce using rule 61 (sign -> PLUS .)
    LBRAC           reduce using rule 61 (sign -> PLUS .)
    ID              reduce using rule 61 (sign -> PLUS .)


state 233

    (25) term -> factor .

    STAR            reduce using rule 25 (term -> factor .)
    SLASH           reduce using rule 25 (term -> factor .)
    DIV             reduce using rule 25 (term -> factor .)
    MOD             reduce using rule 25 (term -> factor .)
    AND             reduce using rule 25 (term -> factor .)
    AND_THEN        reduce using rule 25 (term -> factor .)
    PLUS            reduce using rule 25 (term -> factor .)
    MINUS           reduce using rule 25 (term -> factor .)
    GL              reduce using rule 25 (term -> factor .)
    OR              reduce using rule 25 (term -> factor .)
    OR_ELSE         reduce using rule 25 (term -> factor .)
    EQUAL           reduce using rule 25 (term -> factor .)
    LG              reduce using rule 25 (term -> factor .)
    LT              reduce using rule 25 (term -> factor .)
    GT              reduce using rule 25 (term -> factor .)
    LE              reduce using rule 25 (term -> factor .)
    GE              reduce using rule 25 (term -> factor .)
    IN              reduce using rule 25 (term -> factor .)
    RBRAC           reduce using rule 25 (term -> factor .)
    DOTDOT          reduce using rule 25 (term -> factor .)
    COMMA           reduce using rule 25 (term -> factor .)
    THEN            reduce using rule 25 (term -> factor .)
    OF              reduce using rule 25 (term -> factor .)
    COLON           reduce using rule 25 (term -> factor .)
    RPAREN          reduce using rule 25 (term -> factor .)
    TO              reduce using rule 25 (term -> factor .)
    DOWNTO          reduce using rule 25 (term -> factor .)
    END             reduce using rule 25 (term -> factor .)
    SEMICOLON       reduce using rule 25 (term -> factor .)
    UNTIL           reduce using rule 25 (term -> factor .)
    ELSE            reduce using rule 25 (term -> factor .)
    OTHERWISE       reduce using rule 25 (term -> factor .)
    VALUE           reduce using rule 25 (term -> factor .)
    DO              reduce using rule 25 (term -> factor .)


state 234

    (30) primary -> unsigned_constant .

    STARSTAR        reduce using rule 30 (primary -> unsigned_constant .)
    POW             reduce using rule 30 (primary -> unsigned_constant .)
    STAR            reduce using rule 30 (primary -> unsigned_constant .)
    SLASH           reduce using rule 30 (primary -> unsigned_constant .)
    DIV             reduce using rule 30 (primary -> unsigned_constant .)
    MOD             reduce using rule 30 (primary -> unsigned_constant .)
    AND             reduce using rule 30 (primary -> unsigned_constant .)
    AND_THEN        reduce using rule 30 (primary -> unsigned_constant .)
    PLUS            reduce using rule 30 (primary -> unsigned_constant .)
    MINUS           reduce using rule 30 (primary -> unsigned_constant .)
    GL              reduce using rule 30 (primary -> unsigned_constant .)
    OR              reduce using rule 30 (primary -> unsigned_constant .)
    OR_ELSE         reduce using rule 30 (primary -> unsigned_constant .)
    EQUAL           reduce using rule 30 (primary -> unsigned_constant .)
    LG              reduce using rule 30 (primary -> unsigned_constant .)
    LT              reduce using rule 30 (primary -> unsigned_constant .)
    GT              reduce using rule 30 (primary -> unsigned_constant .)
    LE              reduce using rule 30 (primary -> unsigned_constant .)
    GE              reduce using rule 30 (primary -> unsigned_constant .)
    IN              reduce using rule 30 (primary -> unsigned_constant .)
    THEN            reduce using rule 30 (primary -> unsigned_constant .)
    OF              reduce using rule 30 (primary -> unsigned_constant .)
    DO              reduce using rule 30 (primary -> unsigned_constant .)
    SEMICOLON       reduce using rule 30 (primary -> unsigned_constant .)
    DOTDOT          reduce using rule 30 (primary -> unsigned_constant .)
    RBRAC           reduce using rule 30 (primary -> unsigned_constant .)
    COMMA           reduce using rule 30 (primary -> unsigned_constant .)
    END             reduce using rule 30 (primary -> unsigned_constant .)
    UNTIL           reduce using rule 30 (primary -> unsigned_constant .)
    ELSE            reduce using rule 30 (primary -> unsigned_constant .)
    OTHERWISE       reduce using rule 30 (primary -> unsigned_constant .)
    RPAREN          reduce using rule 30 (primary -> unsigned_constant .)
    COLON           reduce using rule 30 (primary -> unsigned_constant .)
    TO              reduce using rule 30 (primary -> unsigned_constant .)
    DOWNTO          reduce using rule 30 (primary -> unsigned_constant .)
    VALUE           reduce using rule 30 (primary -> unsigned_constant .)


state 235

    (314) case_statement -> CASE case_index . OF case_list_element_list END
    (315) case_statement -> CASE case_index . OF case_statement_completer END
    (316) case_statement -> CASE case_index . OF case_list_element_list case_statement_completer END
    (317) case_statement -> CASE case_index . OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> CASE case_index . OF case_list_element_list SEMICOLON END
    (319) case_statement -> CASE case_index . OF case_statement_completer SEMICOLON END
    (320) case_statement -> CASE case_index . OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> CASE case_index . OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END

    OF              shift and go to state 353


state 236

    (32) primary -> LPAREN . expression RPAREN
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 354
    substring_variable             shift and go to state 153

state 237

    (63) set_constructor -> LBRAC . member_designator_list RBRAC
    (64) set_constructor -> LBRAC . RBRAC
    (65) member_designator_list -> . member_designator
    (66) member_designator_list -> . member_designator_list COMMA member_designator
    (67) member_designator -> . expression
    (68) member_designator -> . expression DOTDOT expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    RBRAC           shift and go to state 355
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    member_designator_list         shift and go to state 356
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    member_designator              shift and go to state 357
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 358
    substring_variable             shift and go to state 153

state 238

    (23) simple_expression_term -> term .
    (26) term -> term . multiplying_operator factor
    (101) multiplying_operator -> . STAR
    (102) multiplying_operator -> . SLASH
    (103) multiplying_operator -> . DIV
    (104) multiplying_operator -> . MOD
    (105) multiplying_operator -> . AND
    (106) multiplying_operator -> . AND_THEN

    PLUS            reduce using rule 23 (simple_expression_term -> term .)
    MINUS           reduce using rule 23 (simple_expression_term -> term .)
    GL              reduce using rule 23 (simple_expression_term -> term .)
    OR              reduce using rule 23 (simple_expression_term -> term .)
    OR_ELSE         reduce using rule 23 (simple_expression_term -> term .)
    COLON           reduce using rule 23 (simple_expression_term -> term .)
    EQUAL           reduce using rule 23 (simple_expression_term -> term .)
    LG              reduce using rule 23 (simple_expression_term -> term .)
    LT              reduce using rule 23 (simple_expression_term -> term .)
    GT              reduce using rule 23 (simple_expression_term -> term .)
    LE              reduce using rule 23 (simple_expression_term -> term .)
    GE              reduce using rule 23 (simple_expression_term -> term .)
    IN              reduce using rule 23 (simple_expression_term -> term .)
    RPAREN          reduce using rule 23 (simple_expression_term -> term .)
    COMMA           reduce using rule 23 (simple_expression_term -> term .)
    SEMICOLON       reduce using rule 23 (simple_expression_term -> term .)
    END             reduce using rule 23 (simple_expression_term -> term .)
    UNTIL           reduce using rule 23 (simple_expression_term -> term .)
    ELSE            reduce using rule 23 (simple_expression_term -> term .)
    OTHERWISE       reduce using rule 23 (simple_expression_term -> term .)
    DOTDOT          reduce using rule 23 (simple_expression_term -> term .)
    DO              reduce using rule 23 (simple_expression_term -> term .)
    RBRAC           reduce using rule 23 (simple_expression_term -> term .)
    THEN            reduce using rule 23 (simple_expression_term -> term .)
    OF              reduce using rule 23 (simple_expression_term -> term .)
    VALUE           reduce using rule 23 (simple_expression_term -> term .)
    TO              reduce using rule 23 (simple_expression_term -> term .)
    DOWNTO          reduce using rule 23 (simple_expression_term -> term .)
    STAR            shift and go to state 360
    SLASH           shift and go to state 362
    DIV             shift and go to state 363
    MOD             shift and go to state 365
    AND             shift and go to state 359
    AND_THEN        shift and go to state 361

    multiplying_operator           shift and go to state 364

state 239

    (57) unsigned_constant -> UNSIGNEDNUMBER .

    STARSTAR        reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    POW             reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    STAR            reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    SLASH           reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    DIV             reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    MOD             reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    AND             reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    AND_THEN        reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    PLUS            reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    MINUS           reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    GL              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    OR              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    OR_ELSE         reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    EQUAL           reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    LG              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    LT              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    GT              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    LE              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    GE              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    IN              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    TO              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    DOWNTO          reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    OF              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    THEN            reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    DO              reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    SEMICOLON       reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    DOTDOT          reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    RBRAC           reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    COMMA           reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    END             reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    UNTIL           reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    ELSE            reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    OTHERWISE       reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    RPAREN          reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    COLON           reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)
    VALUE           reduce using rule 57 (unsigned_constant -> UNSIGNEDNUMBER .)


state 240

    (59) unsigned_constant -> NIL .

    STARSTAR        reduce using rule 59 (unsigned_constant -> NIL .)
    POW             reduce using rule 59 (unsigned_constant -> NIL .)
    STAR            reduce using rule 59 (unsigned_constant -> NIL .)
    SLASH           reduce using rule 59 (unsigned_constant -> NIL .)
    DIV             reduce using rule 59 (unsigned_constant -> NIL .)
    MOD             reduce using rule 59 (unsigned_constant -> NIL .)
    AND             reduce using rule 59 (unsigned_constant -> NIL .)
    AND_THEN        reduce using rule 59 (unsigned_constant -> NIL .)
    PLUS            reduce using rule 59 (unsigned_constant -> NIL .)
    MINUS           reduce using rule 59 (unsigned_constant -> NIL .)
    GL              reduce using rule 59 (unsigned_constant -> NIL .)
    OR              reduce using rule 59 (unsigned_constant -> NIL .)
    OR_ELSE         reduce using rule 59 (unsigned_constant -> NIL .)
    EQUAL           reduce using rule 59 (unsigned_constant -> NIL .)
    LG              reduce using rule 59 (unsigned_constant -> NIL .)
    LT              reduce using rule 59 (unsigned_constant -> NIL .)
    GT              reduce using rule 59 (unsigned_constant -> NIL .)
    LE              reduce using rule 59 (unsigned_constant -> NIL .)
    GE              reduce using rule 59 (unsigned_constant -> NIL .)
    IN              reduce using rule 59 (unsigned_constant -> NIL .)
    TO              reduce using rule 59 (unsigned_constant -> NIL .)
    DOWNTO          reduce using rule 59 (unsigned_constant -> NIL .)
    OF              reduce using rule 59 (unsigned_constant -> NIL .)
    THEN            reduce using rule 59 (unsigned_constant -> NIL .)
    DO              reduce using rule 59 (unsigned_constant -> NIL .)
    SEMICOLON       reduce using rule 59 (unsigned_constant -> NIL .)
    DOTDOT          reduce using rule 59 (unsigned_constant -> NIL .)
    RBRAC           reduce using rule 59 (unsigned_constant -> NIL .)
    COMMA           reduce using rule 59 (unsigned_constant -> NIL .)
    END             reduce using rule 59 (unsigned_constant -> NIL .)
    UNTIL           reduce using rule 59 (unsigned_constant -> NIL .)
    ELSE            reduce using rule 59 (unsigned_constant -> NIL .)
    OTHERWISE       reduce using rule 59 (unsigned_constant -> NIL .)
    RPAREN          reduce using rule 59 (unsigned_constant -> NIL .)
    COLON           reduce using rule 59 (unsigned_constant -> NIL .)
    VALUE           reduce using rule 59 (unsigned_constant -> NIL .)


state 241

    (21) simple_expression -> simple_expression_term .
    (24) simple_expression_term -> simple_expression_term . adding_operator term
    (107) adding_operator -> . PLUS
    (108) adding_operator -> . MINUS
    (109) adding_operator -> . GL
    (110) adding_operator -> . OR
    (111) adding_operator -> . OR_ELSE

    EQUAL           reduce using rule 21 (simple_expression -> simple_expression_term .)
    LG              reduce using rule 21 (simple_expression -> simple_expression_term .)
    LT              reduce using rule 21 (simple_expression -> simple_expression_term .)
    GT              reduce using rule 21 (simple_expression -> simple_expression_term .)
    LE              reduce using rule 21 (simple_expression -> simple_expression_term .)
    GE              reduce using rule 21 (simple_expression -> simple_expression_term .)
    IN              reduce using rule 21 (simple_expression -> simple_expression_term .)
    RBRAC           reduce using rule 21 (simple_expression -> simple_expression_term .)
    SEMICOLON       reduce using rule 21 (simple_expression -> simple_expression_term .)
    OTHERWISE       reduce using rule 21 (simple_expression -> simple_expression_term .)
    OF              reduce using rule 21 (simple_expression -> simple_expression_term .)
    COLON           reduce using rule 21 (simple_expression -> simple_expression_term .)
    RPAREN          reduce using rule 21 (simple_expression -> simple_expression_term .)
    COMMA           reduce using rule 21 (simple_expression -> simple_expression_term .)
    DOTDOT          reduce using rule 21 (simple_expression -> simple_expression_term .)
    TO              reduce using rule 21 (simple_expression -> simple_expression_term .)
    DOWNTO          reduce using rule 21 (simple_expression -> simple_expression_term .)
    END             reduce using rule 21 (simple_expression -> simple_expression_term .)
    UNTIL           reduce using rule 21 (simple_expression -> simple_expression_term .)
    ELSE            reduce using rule 21 (simple_expression -> simple_expression_term .)
    DO              reduce using rule 21 (simple_expression -> simple_expression_term .)
    VALUE           reduce using rule 21 (simple_expression -> simple_expression_term .)
    THEN            reduce using rule 21 (simple_expression -> simple_expression_term .)
    PLUS            shift and go to state 367
    MINUS           shift and go to state 371
    GL              shift and go to state 370
    OR              shift and go to state 366
    OR_ELSE         shift and go to state 369

    adding_operator                shift and go to state 368

state 242

    (33) primary -> NOT . primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    name                           shift and go to state 224
    indexed_variable               shift and go to state 120
    field_designator               shift and go to state 130
    primary                        shift and go to state 372
    variable_access                shift and go to state 231
    unsigned_constant              shift and go to state 234
    entire_variable                shift and go to state 134
    set_constructor                shift and go to state 227
    component_variable             shift and go to state 152
    pointer_variable               shift and go to state 137
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 243

    (60) unsigned_constant -> EXTENDEDNUMBER .

    STARSTAR        reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    POW             reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    STAR            reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    SLASH           reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    DIV             reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    MOD             reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    AND             reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    AND_THEN        reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    PLUS            reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    MINUS           reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    GL              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    OR              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    OR_ELSE         reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    EQUAL           reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    LG              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    LT              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    GT              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    LE              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    GE              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    IN              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    TO              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    DOWNTO          reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    OF              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    THEN            reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    DO              reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    SEMICOLON       reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    DOTDOT          reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    RBRAC           reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    COMMA           reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    END             reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    UNTIL           reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    ELSE            reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    OTHERWISE       reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    RPAREN          reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    COLON           reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)
    VALUE           reduce using rule 60 (unsigned_constant -> EXTENDEDNUMBER .)


state 244

    (326) case_index -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    OF              reduce using rule 326 (case_index -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 245

    (332) for_statement -> FOR entire_variable . iteration_clause DO statement
    (333) iteration_clause -> . sequence_iteration
    (334) iteration_clause -> . set_member_iteration
    (335) sequence_iteration -> . ASSIGNMENT initial_value TO final_value
    (336) sequence_iteration -> . ASSIGNMENT initial_value DOWNTO final_value
    (339) set_member_iteration -> . IN set_expression

    ASSIGNMENT      shift and go to state 382
    IN              shift and go to state 385

    sequence_iteration             shift and go to state 381
    set_member_iteration           shift and go to state 383
    iteration_clause               shift and go to state 384

state 246

    (292) statement -> label COLON . simple_statement
    (293) statement -> label COLON . structured_statement
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    UNTIL           reduce using rule 405 (empty -> .)
    ELSE            reduce using rule 405 (empty -> .)
    OTHERWISE       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    assignment_statement           shift and go to state 131
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    while_statement                shift and go to state 135
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 386
    entire_variable                shift and go to state 134
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 387
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 247

    (330) repeat_statement -> REPEAT statement_sequence . UNTIL boolean_expression
    (291) statement_sequence -> statement_sequence . SEMICOLON statement

    UNTIL           shift and go to state 388
    SEMICOLON       shift and go to state 216


state 248

    (303) goto_statement -> GOTO label .

    END             reduce using rule 303 (goto_statement -> GOTO label .)
    SEMICOLON       reduce using rule 303 (goto_statement -> GOTO label .)
    UNTIL           reduce using rule 303 (goto_statement -> GOTO label .)
    ELSE            reduce using rule 303 (goto_statement -> GOTO label .)
    OTHERWISE       reduce using rule 303 (goto_statement -> GOTO label .)


state 249

    (310) if_statement -> IF boolean_expression . THEN statement
    (311) if_statement -> IF boolean_expression . THEN statement else_part

    THEN            shift and go to state 389


state 250

    (312) boolean_expression -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    DO              reduce using rule 312 (boolean_expression -> expression .)
    THEN            reduce using rule 312 (boolean_expression -> expression .)
    END             reduce using rule 312 (boolean_expression -> expression .)
    SEMICOLON       reduce using rule 312 (boolean_expression -> expression .)
    UNTIL           reduce using rule 312 (boolean_expression -> expression .)
    ELSE            reduce using rule 312 (boolean_expression -> expression .)
    OTHERWISE       reduce using rule 312 (boolean_expression -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 251

    (302) procedure_statement -> name actual_parameter_list .
    (39) entire_variable -> name actual_parameter_list .

    SEMICOLON       reduce using rule 302 (procedure_statement -> name actual_parameter_list .)
    END             reduce using rule 302 (procedure_statement -> name actual_parameter_list .)
    UNTIL           reduce using rule 302 (procedure_statement -> name actual_parameter_list .)
    ELSE            reduce using rule 302 (procedure_statement -> name actual_parameter_list .)
    OTHERWISE       reduce using rule 302 (procedure_statement -> name actual_parameter_list .)
    ASSIGNMENT      reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    LBRAC           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    UPARROW         reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    DOT             reduce using rule 39 (entire_variable -> name actual_parameter_list .)


state 252

    (51) actual_parameter_list -> LPAREN . actual_parameter_list_list RPAREN
    (52) actual_parameter_list_list -> . actual_parameter
    (53) actual_parameter_list_list -> . actual_parameter_list_list COMMA actual_parameter
    (54) actual_parameter -> . expression
    (55) actual_parameter -> . expression COLON expression
    (56) actual_parameter -> . expression COLON expression COLON expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    actual_parameter_list_list     shift and go to state 390
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    actual_parameter               shift and go to state 391
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    set_constructor                shift and go to state 227
    expression                     shift and go to state 392
    substring_variable             shift and go to state 153

state 253

    (331) while_statement -> WHILE boolean_expression . DO statement

    DO              shift and go to state 393


state 254

    (216) label_list -> label_list COMMA . label
    (217) label -> . UNSIGNEDNUMBER

    UNSIGNEDNUMBER  shift and go to state 149

    label                          shift and go to state 394

state 255

    (214) label_declaration_part -> LABEL_WORD label_list SEMICOLON .

    LABEL_WORD      reduce using rule 214 (label_declaration_part -> LABEL_WORD label_list SEMICOLON .)
    CONST           reduce using rule 214 (label_declaration_part -> LABEL_WORD label_list SEMICOLON .)
    TYPE            reduce using rule 214 (label_declaration_part -> LABEL_WORD label_list SEMICOLON .)
    VAR             reduce using rule 214 (label_declaration_part -> LABEL_WORD label_list SEMICOLON .)
    BEGIN           reduce using rule 214 (label_declaration_part -> LABEL_WORD label_list SEMICOLON .)
    PROCEDURE       reduce using rule 214 (label_declaration_part -> LABEL_WORD label_list SEMICOLON .)
    FUNCTION        reduce using rule 214 (label_declaration_part -> LABEL_WORD label_list SEMICOLON .)


state 256

    (368) export_part_list -> export_part SEMICOLON .

    ID              reduce using rule 368 (export_part_list -> export_part SEMICOLON .)
    IMPORT          reduce using rule 368 (export_part_list -> export_part SEMICOLON .)
    END             reduce using rule 368 (export_part_list -> export_part SEMICOLON .)
    CONST           reduce using rule 368 (export_part_list -> export_part SEMICOLON .)
    TYPE            reduce using rule 368 (export_part_list -> export_part SEMICOLON .)
    VAR             reduce using rule 368 (export_part_list -> export_part SEMICOLON .)
    PROCEDURE       reduce using rule 368 (export_part_list -> export_part SEMICOLON .)
    FUNCTION        reduce using rule 368 (export_part_list -> export_part SEMICOLON .)


state 257

    (369) export_part_list -> export_part_list export_part . SEMICOLON

    SEMICOLON       shift and go to state 395


state 258

    (370) export_part -> identifier EQUAL . LPAREN export_list RPAREN

    LPAREN          shift and go to state 396


state 259

    (358) module_heading_middle_part -> variable_declaration_part .

    END             reduce using rule 358 (module_heading_middle_part -> variable_declaration_part .)
    CONST           reduce using rule 358 (module_heading_middle_part -> variable_declaration_part .)
    TYPE            reduce using rule 358 (module_heading_middle_part -> variable_declaration_part .)
    VAR             reduce using rule 358 (module_heading_middle_part -> variable_declaration_part .)
    PROCEDURE       reduce using rule 358 (module_heading_middle_part -> variable_declaration_part .)
    FUNCTION        reduce using rule 358 (module_heading_middle_part -> variable_declaration_part .)


state 260

    (351) module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part module_heading_middle_part . END
    (360) module_heading_middle_part -> module_heading_middle_part . constant_definition_part
    (361) module_heading_middle_part -> module_heading_middle_part . type_definition_part
    (362) module_heading_middle_part -> module_heading_middle_part . variable_declaration_part
    (363) module_heading_middle_part -> module_heading_middle_part . procedure_and_function_heading_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (364) procedure_and_function_heading_part -> . procedure_heading SEMICOLON
    (365) procedure_and_function_heading_part -> . function_heading SEMICOLON
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type

    END             shift and go to state 399
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262

    constant_definition_part       shift and go to state 398
    type_definition_part           shift and go to state 400
    variable_declaration_part      shift and go to state 397
    function_heading               shift and go to state 266
    procedure_and_function_heading_part shift and go to state 401
    procedure_heading              shift and go to state 265

state 261

    (356) module_heading_middle_part -> constant_definition_part .

    END             reduce using rule 356 (module_heading_middle_part -> constant_definition_part .)
    CONST           reduce using rule 356 (module_heading_middle_part -> constant_definition_part .)
    TYPE            reduce using rule 356 (module_heading_middle_part -> constant_definition_part .)
    VAR             reduce using rule 356 (module_heading_middle_part -> constant_definition_part .)
    PROCEDURE       reduce using rule 356 (module_heading_middle_part -> constant_definition_part .)
    FUNCTION        reduce using rule 356 (module_heading_middle_part -> constant_definition_part .)


state 262

    (260) function_heading -> FUNCTION . identifier COLON result_type
    (261) function_heading -> FUNCTION . identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> FUNCTION . identifier formal_parameter_list COLON result_type
    (263) function_heading -> FUNCTION . identifier result_variable_specification COLON result_type
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 402

state 263

    (355) module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part END .

    SEMICOLON       reduce using rule 355 (module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part END .)
    DOT             reduce using rule 355 (module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part END .)


state 264

    (357) module_heading_middle_part -> type_definition_part .

    END             reduce using rule 357 (module_heading_middle_part -> type_definition_part .)
    CONST           reduce using rule 357 (module_heading_middle_part -> type_definition_part .)
    TYPE            reduce using rule 357 (module_heading_middle_part -> type_definition_part .)
    VAR             reduce using rule 357 (module_heading_middle_part -> type_definition_part .)
    PROCEDURE       reduce using rule 357 (module_heading_middle_part -> type_definition_part .)
    FUNCTION        reduce using rule 357 (module_heading_middle_part -> type_definition_part .)


state 265

    (364) procedure_and_function_heading_part -> procedure_heading . SEMICOLON

    SEMICOLON       shift and go to state 403


state 266

    (365) procedure_and_function_heading_part -> function_heading . SEMICOLON

    SEMICOLON       shift and go to state 404


state 267

    (359) module_heading_middle_part -> procedure_and_function_heading_part .

    END             reduce using rule 359 (module_heading_middle_part -> procedure_and_function_heading_part .)
    CONST           reduce using rule 359 (module_heading_middle_part -> procedure_and_function_heading_part .)
    TYPE            reduce using rule 359 (module_heading_middle_part -> procedure_and_function_heading_part .)
    VAR             reduce using rule 359 (module_heading_middle_part -> procedure_and_function_heading_part .)
    PROCEDURE       reduce using rule 359 (module_heading_middle_part -> procedure_and_function_heading_part .)
    FUNCTION        reduce using rule 359 (module_heading_middle_part -> procedure_and_function_heading_part .)


state 268

    (348) module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part . module_heading_middle_part END
    (352) module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part . END
    (356) module_heading_middle_part -> . constant_definition_part
    (357) module_heading_middle_part -> . type_definition_part
    (358) module_heading_middle_part -> . variable_declaration_part
    (359) module_heading_middle_part -> . procedure_and_function_heading_part
    (360) module_heading_middle_part -> . module_heading_middle_part constant_definition_part
    (361) module_heading_middle_part -> . module_heading_middle_part type_definition_part
    (362) module_heading_middle_part -> . module_heading_middle_part variable_declaration_part
    (363) module_heading_middle_part -> . module_heading_middle_part procedure_and_function_heading_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (364) procedure_and_function_heading_part -> . procedure_heading SEMICOLON
    (365) procedure_and_function_heading_part -> . function_heading SEMICOLON
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type

    END             shift and go to state 406
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262

    constant_definition_part       shift and go to state 261
    type_definition_part           shift and go to state 264
    variable_declaration_part      shift and go to state 259
    function_heading               shift and go to state 266
    procedure_and_function_heading_part shift and go to state 267
    module_heading_middle_part     shift and go to state 405
    procedure_heading              shift and go to state 265

state 269

    (350) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN . SEMICOLON interface_specification_part import_part module_heading_middle_part END
    (354) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN . SEMICOLON interface_specification_part import_part END

    SEMICOLON       shift and go to state 407


state 270

    (15) identifier_list -> identifier_list COMMA identifier .

    COLON           reduce using rule 15 (identifier_list -> identifier_list COMMA identifier .)
    COMMA           reduce using rule 15 (identifier_list -> identifier_list COMMA identifier .)
    RPAREN          reduce using rule 15 (identifier_list -> identifier_list COMMA identifier .)


state 271

    (349) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON . interface_specification_part import_part module_heading_middle_part END
    (353) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON . interface_specification_part import_part END
    (367) interface_specification_part -> . EXPORT export_part_list

    EXPORT          shift and go to state 70

    interface_specification_part   shift and go to state 408

state 272

    (220) constant_definition_list -> constant_definition_list constant_definition SEMICOLON .

    ID              reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    END             reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    TO              reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    CONST           reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    TYPE            reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    VAR             reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    PROCEDURE       reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    FUNCTION        reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    LABEL_WORD      reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)
    BEGIN           reduce using rule 220 (constant_definition_list -> constant_definition_list constant_definition SEMICOLON .)


state 273

    (221) constant_definition -> identifier EQUAL constant_expression .

    SEMICOLON       reduce using rule 221 (constant_definition -> identifier EQUAL constant_expression .)


state 274

    (94) constant_expression -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    SEMICOLON       reduce using rule 94 (constant_expression -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 275

    (400) initialization_part -> TO BEGIN DO statement . SEMICOLON

    SEMICOLON       shift and go to state 409


state 276

    (401) finalization_part -> TO END DO statement . SEMICOLON

    SEMICOLON       shift and go to state 410


state 277

    (261) function_heading -> FUNCTION identifier formal_parameter_list result_variable_specification . COLON result_type

    COLON           shift and go to state 411


state 278

    (262) function_heading -> FUNCTION identifier formal_parameter_list COLON . result_type
    (264) result_type -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    result_type                    shift and go to state 412
    name                           shift and go to state 281

state 279

    (263) function_heading -> FUNCTION identifier result_variable_specification COLON . result_type
    (264) result_type -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    result_type                    shift and go to state 413
    name                           shift and go to state 281

state 280

    (265) result_variable_specification -> EQUAL identifier .

    COLON           reduce using rule 265 (result_variable_specification -> EQUAL identifier .)


state 281

    (264) result_type -> name .
    (48) name -> name . DOT identifier

    SEMICOLON       reduce using rule 264 (result_type -> name .)
    RPAREN          reduce using rule 264 (result_type -> name .)
    DOT             shift and go to state 189


state 282

    (260) function_heading -> FUNCTION identifier COLON result_type .

    SEMICOLON       reduce using rule 260 (function_heading -> FUNCTION identifier COLON result_type .)
    RPAREN          reduce using rule 260 (function_heading -> FUNCTION identifier COLON result_type .)


state 283

    (268) conformant_array_parameter_specification -> value_conformant_array_specification .

    RPAREN          reduce using rule 268 (conformant_array_parameter_specification -> value_conformant_array_specification .)
    SEMICOLON       reduce using rule 268 (conformant_array_parameter_specification -> value_conformant_array_specification .)


state 284

    (254) value_parameter_specification -> PROTECTED . identifier_list COLON parameter_form
    (256) variable_parameter_specification -> PROTECTED . VAR identifier_list COLON parameter_form
    (266) conformant_array_parameter_specification -> PROTECTED . value_conformant_array_specification
    (267) conformant_array_parameter_specification -> PROTECTED . variable_conformant_array_specification
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (270) value_conformant_array_specification -> . identifier_list COLON conformant_array_form
    (279) variable_conformant_array_specification -> . VAR identifier_list COLON conformant_array_form
    (16) identifier -> . ID

    VAR             shift and go to state 416
    ID              shift and go to state 18

    identifier                     shift and go to state 76
    variable_conformant_array_specification shift and go to state 414
    value_conformant_array_specification shift and go to state 415
    identifier_list                shift and go to state 417

state 285

    (248) formal_parameter_section -> value_parameter_specification .

    RPAREN          reduce using rule 248 (formal_parameter_section -> value_parameter_specification .)
    SEMICOLON       reduce using rule 248 (formal_parameter_section -> value_parameter_specification .)


state 286

    (250) formal_parameter_section -> procedural_parameter_specification .

    RPAREN          reduce using rule 250 (formal_parameter_section -> procedural_parameter_specification .)
    SEMICOLON       reduce using rule 250 (formal_parameter_section -> procedural_parameter_specification .)


state 287

    (252) formal_parameter_section -> conformant_array_parameter_specification .

    RPAREN          reduce using rule 252 (formal_parameter_section -> conformant_array_parameter_specification .)
    SEMICOLON       reduce using rule 252 (formal_parameter_section -> conformant_array_parameter_specification .)


state 288

    (249) formal_parameter_section -> variable_parameter_specification .

    RPAREN          reduce using rule 249 (formal_parameter_section -> variable_parameter_specification .)
    SEMICOLON       reduce using rule 249 (formal_parameter_section -> variable_parameter_specification .)


state 289

    (269) conformant_array_parameter_specification -> variable_conformant_array_specification .

    RPAREN          reduce using rule 269 (conformant_array_parameter_specification -> variable_conformant_array_specification .)
    SEMICOLON       reduce using rule 269 (conformant_array_parameter_specification -> variable_conformant_array_specification .)


state 290

    (245) formal_parameter_list -> LPAREN formal_parameter_section_list . RPAREN
    (247) formal_parameter_section_list -> formal_parameter_section_list . SEMICOLON formal_parameter_section

    RPAREN          shift and go to state 418
    SEMICOLON       shift and go to state 419


state 291

    (257) variable_parameter_specification -> VAR . identifier_list COLON parameter_form
    (279) variable_conformant_array_specification -> VAR . identifier_list COLON conformant_array_form
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier_list                shift and go to state 420
    identifier                     shift and go to state 76

state 292

    (253) value_parameter_specification -> identifier_list . COLON parameter_form
    (15) identifier_list -> identifier_list . COMMA identifier
    (270) value_conformant_array_specification -> identifier_list . COLON conformant_array_form

    COLON           shift and go to state 421
    COMMA           shift and go to state 168


state 293

    (258) procedural_parameter_specification -> procedure_heading .

    RPAREN          reduce using rule 258 (procedural_parameter_specification -> procedure_heading .)
    SEMICOLON       reduce using rule 258 (procedural_parameter_specification -> procedure_heading .)


state 294

    (251) formal_parameter_section -> functional_parameter_specification .

    RPAREN          reduce using rule 251 (formal_parameter_section -> functional_parameter_specification .)
    SEMICOLON       reduce using rule 251 (formal_parameter_section -> functional_parameter_specification .)


state 295

    (259) functional_parameter_specification -> function_heading .

    RPAREN          reduce using rule 259 (functional_parameter_specification -> function_heading .)
    SEMICOLON       reduce using rule 259 (functional_parameter_specification -> function_heading .)


state 296

    (246) formal_parameter_section_list -> formal_parameter_section .

    RPAREN          reduce using rule 246 (formal_parameter_section_list -> formal_parameter_section .)
    SEMICOLON       reduce using rule 246 (formal_parameter_section_list -> formal_parameter_section .)


state 297

    (235) variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .

    ID              reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    END             reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    TO              reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    CONST           reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    TYPE            reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    VAR             reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    PROCEDURE       reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    FUNCTION        reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    LABEL_WORD      reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)
    BEGIN           reduce using rule 235 (variable_declaration_list -> variable_declaration_list variable_declaration SEMICOLON .)


state 298

    (141) unpacked_structured_type -> file_type .

    VALUE           reduce using rule 141 (unpacked_structured_type -> file_type .)
    SEMICOLON       reduce using rule 141 (unpacked_structured_type -> file_type .)
    RPAREN          reduce using rule 141 (unpacked_structured_type -> file_type .)
    END             reduce using rule 141 (unpacked_structured_type -> file_type .)


state 299

    (132) new_type -> new_ordinal_type .

    VALUE           reduce using rule 132 (new_type -> new_ordinal_type .)
    SEMICOLON       reduce using rule 132 (new_type -> new_ordinal_type .)
    RPAREN          reduce using rule 132 (new_type -> new_ordinal_type .)
    END             reduce using rule 132 (new_type -> new_ordinal_type .)


state 300

    (133) new_type -> new_structured_type .

    VALUE           reduce using rule 133 (new_type -> new_structured_type .)
    SEMICOLON       reduce using rule 133 (new_type -> new_structured_type .)
    RPAREN          reduce using rule 133 (new_type -> new_structured_type .)
    END             reduce using rule 133 (new_type -> new_structured_type .)


state 301

    (129) type_denoter_middle_part -> new_type .

    RPAREN          reduce using rule 129 (type_denoter_middle_part -> new_type .)
    SEMICOLON       reduce using rule 129 (type_denoter_middle_part -> new_type .)
    VALUE           reduce using rule 129 (type_denoter_middle_part -> new_type .)
    END             reduce using rule 129 (type_denoter_middle_part -> new_type .)


state 302

    (131) type_denoter_middle_part -> discriminated_schema .

    RPAREN          reduce using rule 131 (type_denoter_middle_part -> discriminated_schema .)
    SEMICOLON       reduce using rule 131 (type_denoter_middle_part -> discriminated_schema .)
    VALUE           reduce using rule 131 (type_denoter_middle_part -> discriminated_schema .)
    END             reduce using rule 131 (type_denoter_middle_part -> discriminated_schema .)


state 303

    (168) file_type -> FILE . LBRAC index_type RBRAC OF component_type
    (169) file_type -> FILE . OF component_type

    LBRAC           shift and go to state 422
    OF              shift and go to state 423


state 304

    (166) set_type -> SET . OF base_type

    OF              shift and go to state 424


state 305

    (130) type_denoter_middle_part -> type_inquiry .

    RPAREN          reduce using rule 130 (type_denoter_middle_part -> type_inquiry .)
    SEMICOLON       reduce using rule 130 (type_denoter_middle_part -> type_inquiry .)
    VALUE           reduce using rule 130 (type_denoter_middle_part -> type_inquiry .)
    END             reduce using rule 130 (type_denoter_middle_part -> type_inquiry .)


state 306

    (135) new_type -> restricted_type .

    VALUE           reduce using rule 135 (new_type -> restricted_type .)
    SEMICOLON       reduce using rule 135 (new_type -> restricted_type .)
    RPAREN          reduce using rule 135 (new_type -> restricted_type .)
    END             reduce using rule 135 (new_type -> restricted_type .)


state 307

    (142) record_type -> RECORD . field_list END
    (143) field_list -> . field_list_left_part
    (144) field_list -> . empty
    (145) field_list_left_part -> . fixed_part SEMICOLON variant_part
    (146) field_list_left_part -> . fixed_part
    (147) field_list_left_part -> . fixed_part SEMICOLON
    (148) field_list_left_part -> . variant_part
    (149) field_list_left_part -> . variant_part SEMICOLON
    (405) empty -> .
    (150) fixed_part -> . record_section
    (151) fixed_part -> . fixed_part SEMICOLON record_section
    (153) variant_part -> . CASE variant_selector OF variant_list_element_list
    (154) variant_part -> . CASE variant_selector OF variant_list_element_list SEMICOLON variant_part_completer
    (155) variant_part -> . CASE variant_selector OF variant_list_element_list variant_part_completer
    (156) variant_part -> . CASE variant_selector OF variant_part_completer
    (152) record_section -> . identifier_list COLON type_denoter
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    END             reduce using rule 405 (empty -> .)
    CASE            shift and go to state 425
    ID              shift and go to state 18

    identifier                     shift and go to state 76
    record_section                 shift and go to state 426
    fixed_part                     shift and go to state 427
    variant_part                   shift and go to state 428
    field_list_left_part           shift and go to state 429
    identifier_list                shift and go to state 430
    field_list                     shift and go to state 431
    empty                          shift and go to state 432

state 308

    (11) new_ordinal_type -> enumerated_type .

    VALUE           reduce using rule 11 (new_ordinal_type -> enumerated_type .)
    SEMICOLON       reduce using rule 11 (new_ordinal_type -> enumerated_type .)
    RPAREN          reduce using rule 11 (new_ordinal_type -> enumerated_type .)
    END             reduce using rule 11 (new_ordinal_type -> enumerated_type .)
    RBRAC           reduce using rule 11 (new_ordinal_type -> enumerated_type .)
    COMMA           reduce using rule 11 (new_ordinal_type -> enumerated_type .)


state 309

    (137) new_structured_type -> PACKED . unpacked_structured_type
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type

    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303

    file_type                      shift and go to state 298
    set_type                       shift and go to state 317
    record_type                    shift and go to state 321
    array_type                     shift and go to state 319
    unpacked_structured_type       shift and go to state 433

state 310

    (125) type_denoter -> BINDABLE . type_denoter_middle_part
    (127) type_denoter -> BINDABLE . type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 434
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 311

    (2) array_type -> ARRAY . LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> ARRAY . OF component_type

    LBRAC           shift and go to state 435
    OF              shift and go to state 436


state 312

    (136) new_structured_type -> unpacked_structured_type .

    RPAREN          reduce using rule 136 (new_structured_type -> unpacked_structured_type .)
    SEMICOLON       reduce using rule 136 (new_structured_type -> unpacked_structured_type .)
    VALUE           reduce using rule 136 (new_structured_type -> unpacked_structured_type .)
    END             reduce using rule 136 (new_structured_type -> unpacked_structured_type .)


state 313

    (236) variable_declaration -> identifier_list COLON type_denoter .

    SEMICOLON       reduce using rule 236 (variable_declaration -> identifier_list COLON type_denoter .)


state 314

    (12) new_ordinal_type -> subrange_type .

    VALUE           reduce using rule 12 (new_ordinal_type -> subrange_type .)
    SEMICOLON       reduce using rule 12 (new_ordinal_type -> subrange_type .)
    RPAREN          reduce using rule 12 (new_ordinal_type -> subrange_type .)
    END             reduce using rule 12 (new_ordinal_type -> subrange_type .)
    RBRAC           reduce using rule 12 (new_ordinal_type -> subrange_type .)
    COMMA           reduce using rule 12 (new_ordinal_type -> subrange_type .)


state 315

    (124) type_denoter -> type_denoter_middle_part .
    (126) type_denoter -> type_denoter_middle_part . initial_state_specifier
    (173) initial_state_specifier -> . VALUE component_value

  ! shift/reduce conflict for VALUE resolved as shift
    SEMICOLON       reduce using rule 124 (type_denoter -> type_denoter_middle_part .)
    RPAREN          reduce using rule 124 (type_denoter -> type_denoter_middle_part .)
    END             reduce using rule 124 (type_denoter -> type_denoter_middle_part .)
    VALUE           shift and go to state 438

  ! VALUE           [ reduce using rule 124 (type_denoter -> type_denoter_middle_part .) ]

    initial_state_specifier        shift and go to state 437

state 316

    (170) new_pointer_type -> UPARROW . domain_type
    (171) domain_type -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    domain_type                    shift and go to state 440
    identifier                     shift and go to state 92
    name                           shift and go to state 439

state 317

    (140) unpacked_structured_type -> set_type .

    VALUE           reduce using rule 140 (unpacked_structured_type -> set_type .)
    SEMICOLON       reduce using rule 140 (unpacked_structured_type -> set_type .)
    RPAREN          reduce using rule 140 (unpacked_structured_type -> set_type .)
    END             reduce using rule 140 (unpacked_structured_type -> set_type .)


state 318

    (13) enumerated_type -> LPAREN . identifier_list RPAREN
    (32) primary -> LPAREN . expression RPAREN
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (16) identifier -> . ID
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    ID              shift and go to state 18
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    identifier_list                shift and go to state 441
    term                           shift and go to state 238
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    identifier                     shift and go to state 442
    expression                     shift and go to state 354
    substring_variable             shift and go to state 153

state 319

    (138) unpacked_structured_type -> array_type .

    VALUE           reduce using rule 138 (unpacked_structured_type -> array_type .)
    SEMICOLON       reduce using rule 138 (unpacked_structured_type -> array_type .)
    RPAREN          reduce using rule 138 (unpacked_structured_type -> array_type .)
    END             reduce using rule 138 (unpacked_structured_type -> array_type .)


state 320

    (128) type_denoter_middle_part -> name .
    (48) name -> name . DOT identifier
    (119) discriminated_schema -> name . actual_discriminant_part
    (38) entire_variable -> name .
    (39) entire_variable -> name . actual_parameter_list
    (120) actual_discriminant_part -> . LPAREN actual_parameter_list RPAREN
    (51) actual_parameter_list -> . LPAREN actual_parameter_list_list RPAREN

  ! shift/reduce conflict for DOT resolved as shift
    RPAREN          reduce using rule 128 (type_denoter_middle_part -> name .)
    SEMICOLON       reduce using rule 128 (type_denoter_middle_part -> name .)
    VALUE           reduce using rule 128 (type_denoter_middle_part -> name .)
    END             reduce using rule 128 (type_denoter_middle_part -> name .)
    DOT             shift and go to state 189
    LBRAC           reduce using rule 38 (entire_variable -> name .)
    UPARROW         reduce using rule 38 (entire_variable -> name .)
    STARSTAR        reduce using rule 38 (entire_variable -> name .)
    POW             reduce using rule 38 (entire_variable -> name .)
    STAR            reduce using rule 38 (entire_variable -> name .)
    SLASH           reduce using rule 38 (entire_variable -> name .)
    DIV             reduce using rule 38 (entire_variable -> name .)
    MOD             reduce using rule 38 (entire_variable -> name .)
    AND             reduce using rule 38 (entire_variable -> name .)
    AND_THEN        reduce using rule 38 (entire_variable -> name .)
    PLUS            reduce using rule 38 (entire_variable -> name .)
    MINUS           reduce using rule 38 (entire_variable -> name .)
    GL              reduce using rule 38 (entire_variable -> name .)
    OR              reduce using rule 38 (entire_variable -> name .)
    OR_ELSE         reduce using rule 38 (entire_variable -> name .)
    EQUAL           reduce using rule 38 (entire_variable -> name .)
    LG              reduce using rule 38 (entire_variable -> name .)
    LT              reduce using rule 38 (entire_variable -> name .)
    GT              reduce using rule 38 (entire_variable -> name .)
    LE              reduce using rule 38 (entire_variable -> name .)
    GE              reduce using rule 38 (entire_variable -> name .)
    IN              reduce using rule 38 (entire_variable -> name .)
    DOTDOT          reduce using rule 38 (entire_variable -> name .)
    LPAREN          shift and go to state 443

  ! DOT             [ reduce using rule 38 (entire_variable -> name .) ]

    actual_parameter_list          shift and go to state 348
    actual_discriminant_part       shift and go to state 444

state 321

    (139) unpacked_structured_type -> record_type .

    VALUE           reduce using rule 139 (unpacked_structured_type -> record_type .)
    SEMICOLON       reduce using rule 139 (unpacked_structured_type -> record_type .)
    RPAREN          reduce using rule 139 (unpacked_structured_type -> record_type .)
    END             reduce using rule 139 (unpacked_structured_type -> record_type .)


state 322

    (134) new_type -> new_pointer_type .

    VALUE           reduce using rule 134 (new_type -> new_pointer_type .)
    SEMICOLON       reduce using rule 134 (new_type -> new_pointer_type .)
    RPAREN          reduce using rule 134 (new_type -> new_pointer_type .)
    END             reduce using rule 134 (new_type -> new_pointer_type .)


state 323

    (18) subrange_bound -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    DOTDOT          reduce using rule 18 (subrange_bound -> expression .)
    VALUE           reduce using rule 18 (subrange_bound -> expression .)
    SEMICOLON       reduce using rule 18 (subrange_bound -> expression .)
    RPAREN          reduce using rule 18 (subrange_bound -> expression .)
    END             reduce using rule 18 (subrange_bound -> expression .)
    RBRAC           reduce using rule 18 (subrange_bound -> expression .)
    COMMA           reduce using rule 18 (subrange_bound -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 324

    (17) subrange_type -> subrange_bound . DOTDOT subrange_bound

    DOTDOT          shift and go to state 445


state 325

    (172) restricted_type -> RESTRICTED . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    name                           shift and go to state 446

state 326

    (121) type_inquiry -> TYPE . OF name

    OF              shift and go to state 447


state 327

    (48) name -> name DOT identifier .

    DOT             reduce using rule 48 (name -> name DOT identifier .)
    EG              reduce using rule 48 (name -> name DOT identifier .)
    RPAREN          reduce using rule 48 (name -> name DOT identifier .)
    COMMA           reduce using rule 48 (name -> name DOT identifier .)
    DOTDOT          reduce using rule 48 (name -> name DOT identifier .)
    LPAREN          reduce using rule 48 (name -> name DOT identifier .)
    SEMICOLON       reduce using rule 48 (name -> name DOT identifier .)
    ASSIGNMENT      reduce using rule 48 (name -> name DOT identifier .)
    LBRAC           reduce using rule 48 (name -> name DOT identifier .)
    UPARROW         reduce using rule 48 (name -> name DOT identifier .)
    STARSTAR        reduce using rule 48 (name -> name DOT identifier .)
    POW             reduce using rule 48 (name -> name DOT identifier .)
    STAR            reduce using rule 48 (name -> name DOT identifier .)
    SLASH           reduce using rule 48 (name -> name DOT identifier .)
    DIV             reduce using rule 48 (name -> name DOT identifier .)
    MOD             reduce using rule 48 (name -> name DOT identifier .)
    AND             reduce using rule 48 (name -> name DOT identifier .)
    AND_THEN        reduce using rule 48 (name -> name DOT identifier .)
    PLUS            reduce using rule 48 (name -> name DOT identifier .)
    MINUS           reduce using rule 48 (name -> name DOT identifier .)
    GL              reduce using rule 48 (name -> name DOT identifier .)
    OR              reduce using rule 48 (name -> name DOT identifier .)
    OR_ELSE         reduce using rule 48 (name -> name DOT identifier .)
    EQUAL           reduce using rule 48 (name -> name DOT identifier .)
    LG              reduce using rule 48 (name -> name DOT identifier .)
    LT              reduce using rule 48 (name -> name DOT identifier .)
    GT              reduce using rule 48 (name -> name DOT identifier .)
    LE              reduce using rule 48 (name -> name DOT identifier .)
    GE              reduce using rule 48 (name -> name DOT identifier .)
    IN              reduce using rule 48 (name -> name DOT identifier .)
    RBRAC           reduce using rule 48 (name -> name DOT identifier .)
    DO              reduce using rule 48 (name -> name DOT identifier .)
    COLON           reduce using rule 48 (name -> name DOT identifier .)
    OF              reduce using rule 48 (name -> name DOT identifier .)
    VALUE           reduce using rule 48 (name -> name DOT identifier .)
    END             reduce using rule 48 (name -> name DOT identifier .)
    THEN            reduce using rule 48 (name -> name DOT identifier .)
    UNTIL           reduce using rule 48 (name -> name DOT identifier .)
    ELSE            reduce using rule 48 (name -> name DOT identifier .)
    OTHERWISE       reduce using rule 48 (name -> name DOT identifier .)
    TO              reduce using rule 48 (name -> name DOT identifier .)
    DOWNTO          reduce using rule 48 (name -> name DOT identifier .)


state 328

    (226) type_definition_list -> type_definition_list schema_definition SEMICOLON .

    ID              reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    END             reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    TO              reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    CONST           reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    TYPE            reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    VAR             reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    PROCEDURE       reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    FUNCTION        reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    LABEL_WORD      reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)
    BEGIN           reduce using rule 226 (type_definition_list -> type_definition_list schema_definition SEMICOLON .)


state 329

    (225) type_definition_list -> type_definition_list type_definition SEMICOLON .

    ID              reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    END             reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    TO              reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    CONST           reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    TYPE            reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    VAR             reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    PROCEDURE       reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    FUNCTION        reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    LABEL_WORD      reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)
    BEGIN           reduce using rule 225 (type_definition_list -> type_definition_list type_definition SEMICOLON .)


state 330

    (228) schema_definition -> identifier formal_discriminant_part EQUAL . type_denoter
    (124) type_denoter -> . type_denoter_middle_part
    (125) type_denoter -> . BINDABLE type_denoter_middle_part
    (126) type_denoter -> . type_denoter_middle_part initial_state_specifier
    (127) type_denoter -> . BINDABLE type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    BINDABLE        shift and go to state 310
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    type_denoter                   shift and go to state 448
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 315
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 331

    (227) type_definition -> identifier EQUAL type_denoter .

    SEMICOLON       reduce using rule 227 (type_definition -> identifier EQUAL type_denoter .)


state 332

    (229) formal_discriminant_part -> LPAREN discriminant_specification_list . RPAREN
    (231) discriminant_specification_list -> discriminant_specification_list . SEMICOLON discriminant_specification

    RPAREN          shift and go to state 449
    SEMICOLON       shift and go to state 450


state 333

    (230) discriminant_specification_list -> discriminant_specification .

    RPAREN          reduce using rule 230 (discriminant_specification_list -> discriminant_specification .)
    SEMICOLON       reduce using rule 230 (discriminant_specification_list -> discriminant_specification .)


state 334

    (232) discriminant_specification -> identifier_list . COLON ordinal_type_name
    (15) identifier_list -> identifier_list . COMMA identifier

    COLON           shift and go to state 451
    COMMA           shift and go to state 168


state 335

    (391) module_block -> import_part module_block_middle_part initialization_part finalization_part END .

    DOT             reduce using rule 391 (module_block -> import_part module_block_middle_part initialization_part finalization_part END .)


state 336

    (213) import_renaming_clause -> constituent_identifier EG . identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 452

state 337

    (209) import_list -> import_list COMMA . import_clause
    (210) import_clause -> . constituent_identifier
    (211) import_clause -> . import_renaming_clause
    (212) constituent_identifier -> . identifier
    (213) import_renaming_clause -> . constituent_identifier EG identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 212
    import_clause                  shift and go to state 453
    constituent_identifier         shift and go to state 209
    import_renaming_clause         shift and go to state 210

state 338

    (206) import_qualifier -> LPAREN import_list RPAREN .

    SEMICOLON       reduce using rule 206 (import_qualifier -> LPAREN import_list RPAREN .)


state 339

    (205) import_qualifier -> selective_import_option LPAREN import_list . RPAREN
    (209) import_list -> import_list . COMMA import_clause

    RPAREN          shift and go to state 454
    COMMA           shift and go to state 337


state 340

    (291) statement_sequence -> statement_sequence SEMICOLON statement .

    END             reduce using rule 291 (statement_sequence -> statement_sequence SEMICOLON statement .)
    SEMICOLON       reduce using rule 291 (statement_sequence -> statement_sequence SEMICOLON statement .)
    UNTIL           reduce using rule 291 (statement_sequence -> statement_sequence SEMICOLON statement .)


state 341

    (50) substring_variable -> variable_access LBRAC index_expression . DOTDOT index_expression RBRAC
    (43) index_expression_list -> index_expression .

    DOTDOT          shift and go to state 455
    RBRAC           reduce using rule 43 (index_expression_list -> index_expression .)
    COMMA           reduce using rule 43 (index_expression_list -> index_expression .)


state 342

    (42) indexed_variable -> variable_access LBRAC index_expression_list . RBRAC
    (44) index_expression_list -> index_expression_list . COMMA index_expression

    RBRAC           shift and go to state 456
    COMMA           shift and go to state 457


state 343

    (45) index_expression -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    RBRAC           reduce using rule 45 (index_expression -> expression .)
    DOTDOT          reduce using rule 45 (index_expression -> expression .)
    COMMA           reduce using rule 45 (index_expression -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 344

    (300) assignment_statement -> variable_access ASSIGNMENT expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    END             reduce using rule 300 (assignment_statement -> variable_access ASSIGNMENT expression .)
    SEMICOLON       reduce using rule 300 (assignment_statement -> variable_access ASSIGNMENT expression .)
    UNTIL           reduce using rule 300 (assignment_statement -> variable_access ASSIGNMENT expression .)
    ELSE            reduce using rule 300 (assignment_statement -> variable_access ASSIGNMENT expression .)
    OTHERWISE       reduce using rule 300 (assignment_statement -> variable_access ASSIGNMENT expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 345

    (46) field_designator -> variable_access DOT identifier .

    LBRAC           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    UPARROW         reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    DOT             reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    STARSTAR        reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    POW             reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    STAR            reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    SLASH           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    DIV             reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    MOD             reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    AND             reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    AND_THEN        reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    PLUS            reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    MINUS           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    GL              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    OR              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    OR_ELSE         reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    EQUAL           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    LG              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    LT              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    GT              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    LE              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    GE              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    IN              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    DOTDOT          reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    COLON           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    RPAREN          reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    COMMA           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    RBRAC           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    SEMICOLON       reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    OF              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    THEN            reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    DO              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    END             reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    UNTIL           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    ELSE            reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    OTHERWISE       reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    TO              reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    DOWNTO          reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    VALUE           reduce using rule 46 (field_designator -> variable_access DOT identifier .)
    ASSIGNMENT      reduce using rule 46 (field_designator -> variable_access DOT identifier .)


state 346

    (341) with_statement -> WITH with_list DO . statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    UNTIL           reduce using rule 405 (empty -> .)
    ELSE            reduce using rule 405 (empty -> .)
    OTHERWISE       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 458
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 347

    (343) with_list -> with_list COMMA . with_element
    (344) with_element -> . variable_access
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    name                           shift and go to state 224
    indexed_variable               shift and go to state 120
    entire_variable                shift and go to state 134
    field_designator               shift and go to state 130
    component_variable             shift and go to state 152
    variable_access                shift and go to state 222
    with_element                   shift and go to state 459
    pointer_variable               shift and go to state 137
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 348

    (39) entire_variable -> name actual_parameter_list .

    LBRAC           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    UPARROW         reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    DOT             reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    STARSTAR        reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    POW             reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    STAR            reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    SLASH           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    DIV             reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    MOD             reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    AND             reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    AND_THEN        reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    PLUS            reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    MINUS           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    GL              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    OR              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    OR_ELSE         reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    DOTDOT          reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    EQUAL           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    LG              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    LT              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    GT              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    LE              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    GE              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    IN              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    RBRAC           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    COMMA           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    COLON           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    DO              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    OF              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    THEN            reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    SEMICOLON       reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    END             reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    UNTIL           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    ELSE            reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    OTHERWISE       reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    RPAREN          reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    TO              reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    DOWNTO          reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    VALUE           reduce using rule 39 (entire_variable -> name actual_parameter_list .)
    ASSIGNMENT      reduce using rule 39 (entire_variable -> name actual_parameter_list .)


state 349

    (99) exponentiating_operator -> STARSTAR .

    LPAREN          reduce using rule 99 (exponentiating_operator -> STARSTAR .)
    NOT             reduce using rule 99 (exponentiating_operator -> STARSTAR .)
    UNSIGNEDNUMBER  reduce using rule 99 (exponentiating_operator -> STARSTAR .)
    CHARACTER_STRING reduce using rule 99 (exponentiating_operator -> STARSTAR .)
    NIL             reduce using rule 99 (exponentiating_operator -> STARSTAR .)
    EXTENDEDNUMBER  reduce using rule 99 (exponentiating_operator -> STARSTAR .)
    LBRAC           reduce using rule 99 (exponentiating_operator -> STARSTAR .)
    ID              reduce using rule 99 (exponentiating_operator -> STARSTAR .)


state 350

    (28) factor -> primary exponentiating_operator . primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    name                           shift and go to state 224
    indexed_variable               shift and go to state 120
    entire_variable                shift and go to state 134
    field_designator               shift and go to state 130
    primary                        shift and go to state 460
    variable_access                shift and go to state 231
    unsigned_constant              shift and go to state 234
    set_constructor                shift and go to state 227
    component_variable             shift and go to state 152
    pointer_variable               shift and go to state 137
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 351

    (100) exponentiating_operator -> POW .

    LPAREN          reduce using rule 100 (exponentiating_operator -> POW .)
    NOT             reduce using rule 100 (exponentiating_operator -> POW .)
    UNSIGNEDNUMBER  reduce using rule 100 (exponentiating_operator -> POW .)
    CHARACTER_STRING reduce using rule 100 (exponentiating_operator -> POW .)
    NIL             reduce using rule 100 (exponentiating_operator -> POW .)
    EXTENDEDNUMBER  reduce using rule 100 (exponentiating_operator -> POW .)
    LBRAC           reduce using rule 100 (exponentiating_operator -> POW .)
    ID              reduce using rule 100 (exponentiating_operator -> POW .)


state 352

    (22) simple_expression -> sign simple_expression_term .
    (24) simple_expression_term -> simple_expression_term . adding_operator term
    (107) adding_operator -> . PLUS
    (108) adding_operator -> . MINUS
    (109) adding_operator -> . GL
    (110) adding_operator -> . OR
    (111) adding_operator -> . OR_ELSE

    EQUAL           reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    LG              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    LT              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    GT              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    LE              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    GE              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    IN              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    RBRAC           reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    SEMICOLON       reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    OTHERWISE       reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    OF              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    COLON           reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    RPAREN          reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    COMMA           reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    DOTDOT          reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    TO              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    DOWNTO          reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    END             reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    UNTIL           reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    ELSE            reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    DO              reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    VALUE           reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    THEN            reduce using rule 22 (simple_expression -> sign simple_expression_term .)
    PLUS            shift and go to state 367
    MINUS           shift and go to state 371
    GL              shift and go to state 370
    OR              shift and go to state 366
    OR_ELSE         shift and go to state 369

    adding_operator                shift and go to state 368

state 353

    (314) case_statement -> CASE case_index OF . case_list_element_list END
    (315) case_statement -> CASE case_index OF . case_statement_completer END
    (316) case_statement -> CASE case_index OF . case_list_element_list case_statement_completer END
    (317) case_statement -> CASE case_index OF . case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> CASE case_index OF . case_list_element_list SEMICOLON END
    (319) case_statement -> CASE case_index OF . case_statement_completer SEMICOLON END
    (320) case_statement -> CASE case_index OF . case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> CASE case_index OF . case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (322) case_list_element_list -> . case_list_element
    (323) case_list_element_list -> . case_list_element_list SEMICOLON case_list_element
    (325) case_statement_completer -> . OTHERWISE statement_sequence
    (324) case_list_element -> . member_designator_list COLON statement
    (65) member_designator_list -> . member_designator
    (66) member_designator_list -> . member_designator_list COMMA member_designator
    (67) member_designator -> . expression
    (68) member_designator -> . expression DOTDOT expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    OTHERWISE       shift and go to state 461
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    member_designator_list         shift and go to state 462
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    member_designator              shift and go to state 357
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    case_statement_completer       shift and go to state 463
    unsigned_constant              shift and go to state 234
    case_list_element              shift and go to state 464
    case_list_element_list         shift and go to state 465
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 358
    substring_variable             shift and go to state 153

state 354

    (32) primary -> LPAREN expression . RPAREN
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    RPAREN          shift and go to state 466
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 355

    (64) set_constructor -> LBRAC RBRAC .

    STARSTAR        reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    POW             reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    STAR            reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    SLASH           reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    DIV             reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    MOD             reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    AND             reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    AND_THEN        reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    PLUS            reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    MINUS           reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    GL              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    OR              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    OR_ELSE         reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    EQUAL           reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    LG              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    LT              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    GT              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    LE              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    GE              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    IN              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    SEMICOLON       reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    RBRAC           reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    DOTDOT          reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    COLON           reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    RPAREN          reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    COMMA           reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    OTHERWISE       reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    DO              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    OF              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    THEN            reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    END             reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    UNTIL           reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    ELSE            reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    TO              reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    DOWNTO          reduce using rule 64 (set_constructor -> LBRAC RBRAC .)
    VALUE           reduce using rule 64 (set_constructor -> LBRAC RBRAC .)


state 356

    (63) set_constructor -> LBRAC member_designator_list . RBRAC
    (66) member_designator_list -> member_designator_list . COMMA member_designator

    RBRAC           shift and go to state 468
    COMMA           shift and go to state 467


state 357

    (65) member_designator_list -> member_designator .

    COLON           reduce using rule 65 (member_designator_list -> member_designator .)
    COMMA           reduce using rule 65 (member_designator_list -> member_designator .)
    RBRAC           reduce using rule 65 (member_designator_list -> member_designator .)


state 358

    (67) member_designator -> expression .
    (68) member_designator -> expression . DOTDOT expression
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    COLON           reduce using rule 67 (member_designator -> expression .)
    COMMA           reduce using rule 67 (member_designator -> expression .)
    RBRAC           reduce using rule 67 (member_designator -> expression .)
    DOTDOT          shift and go to state 469
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 359

    (105) multiplying_operator -> AND .

    LPAREN          reduce using rule 105 (multiplying_operator -> AND .)
    NOT             reduce using rule 105 (multiplying_operator -> AND .)
    UNSIGNEDNUMBER  reduce using rule 105 (multiplying_operator -> AND .)
    CHARACTER_STRING reduce using rule 105 (multiplying_operator -> AND .)
    NIL             reduce using rule 105 (multiplying_operator -> AND .)
    EXTENDEDNUMBER  reduce using rule 105 (multiplying_operator -> AND .)
    LBRAC           reduce using rule 105 (multiplying_operator -> AND .)
    ID              reduce using rule 105 (multiplying_operator -> AND .)


state 360

    (101) multiplying_operator -> STAR .

    LPAREN          reduce using rule 101 (multiplying_operator -> STAR .)
    NOT             reduce using rule 101 (multiplying_operator -> STAR .)
    UNSIGNEDNUMBER  reduce using rule 101 (multiplying_operator -> STAR .)
    CHARACTER_STRING reduce using rule 101 (multiplying_operator -> STAR .)
    NIL             reduce using rule 101 (multiplying_operator -> STAR .)
    EXTENDEDNUMBER  reduce using rule 101 (multiplying_operator -> STAR .)
    LBRAC           reduce using rule 101 (multiplying_operator -> STAR .)
    ID              reduce using rule 101 (multiplying_operator -> STAR .)


state 361

    (106) multiplying_operator -> AND_THEN .

    LPAREN          reduce using rule 106 (multiplying_operator -> AND_THEN .)
    NOT             reduce using rule 106 (multiplying_operator -> AND_THEN .)
    UNSIGNEDNUMBER  reduce using rule 106 (multiplying_operator -> AND_THEN .)
    CHARACTER_STRING reduce using rule 106 (multiplying_operator -> AND_THEN .)
    NIL             reduce using rule 106 (multiplying_operator -> AND_THEN .)
    EXTENDEDNUMBER  reduce using rule 106 (multiplying_operator -> AND_THEN .)
    LBRAC           reduce using rule 106 (multiplying_operator -> AND_THEN .)
    ID              reduce using rule 106 (multiplying_operator -> AND_THEN .)


state 362

    (102) multiplying_operator -> SLASH .

    LPAREN          reduce using rule 102 (multiplying_operator -> SLASH .)
    NOT             reduce using rule 102 (multiplying_operator -> SLASH .)
    UNSIGNEDNUMBER  reduce using rule 102 (multiplying_operator -> SLASH .)
    CHARACTER_STRING reduce using rule 102 (multiplying_operator -> SLASH .)
    NIL             reduce using rule 102 (multiplying_operator -> SLASH .)
    EXTENDEDNUMBER  reduce using rule 102 (multiplying_operator -> SLASH .)
    LBRAC           reduce using rule 102 (multiplying_operator -> SLASH .)
    ID              reduce using rule 102 (multiplying_operator -> SLASH .)


state 363

    (103) multiplying_operator -> DIV .

    LPAREN          reduce using rule 103 (multiplying_operator -> DIV .)
    NOT             reduce using rule 103 (multiplying_operator -> DIV .)
    UNSIGNEDNUMBER  reduce using rule 103 (multiplying_operator -> DIV .)
    CHARACTER_STRING reduce using rule 103 (multiplying_operator -> DIV .)
    NIL             reduce using rule 103 (multiplying_operator -> DIV .)
    EXTENDEDNUMBER  reduce using rule 103 (multiplying_operator -> DIV .)
    LBRAC           reduce using rule 103 (multiplying_operator -> DIV .)
    ID              reduce using rule 103 (multiplying_operator -> DIV .)


state 364

    (26) term -> term multiplying_operator . factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    identifier                     shift and go to state 92
    field_designator               shift and go to state 130
    name                           shift and go to state 224
    indexed_variable               shift and go to state 120
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    primary                        shift and go to state 225
    variable_access                shift and go to state 231
    unsigned_constant              shift and go to state 234
    set_constructor                shift and go to state 227
    factor                         shift and go to state 470
    pointer_variable               shift and go to state 137
    substring_variable             shift and go to state 153

state 365

    (104) multiplying_operator -> MOD .

    LPAREN          reduce using rule 104 (multiplying_operator -> MOD .)
    NOT             reduce using rule 104 (multiplying_operator -> MOD .)
    UNSIGNEDNUMBER  reduce using rule 104 (multiplying_operator -> MOD .)
    CHARACTER_STRING reduce using rule 104 (multiplying_operator -> MOD .)
    NIL             reduce using rule 104 (multiplying_operator -> MOD .)
    EXTENDEDNUMBER  reduce using rule 104 (multiplying_operator -> MOD .)
    LBRAC           reduce using rule 104 (multiplying_operator -> MOD .)
    ID              reduce using rule 104 (multiplying_operator -> MOD .)


state 366

    (110) adding_operator -> OR .

    LPAREN          reduce using rule 110 (adding_operator -> OR .)
    NOT             reduce using rule 110 (adding_operator -> OR .)
    UNSIGNEDNUMBER  reduce using rule 110 (adding_operator -> OR .)
    CHARACTER_STRING reduce using rule 110 (adding_operator -> OR .)
    NIL             reduce using rule 110 (adding_operator -> OR .)
    EXTENDEDNUMBER  reduce using rule 110 (adding_operator -> OR .)
    LBRAC           reduce using rule 110 (adding_operator -> OR .)
    ID              reduce using rule 110 (adding_operator -> OR .)


state 367

    (107) adding_operator -> PLUS .

    LPAREN          reduce using rule 107 (adding_operator -> PLUS .)
    NOT             reduce using rule 107 (adding_operator -> PLUS .)
    UNSIGNEDNUMBER  reduce using rule 107 (adding_operator -> PLUS .)
    CHARACTER_STRING reduce using rule 107 (adding_operator -> PLUS .)
    NIL             reduce using rule 107 (adding_operator -> PLUS .)
    EXTENDEDNUMBER  reduce using rule 107 (adding_operator -> PLUS .)
    LBRAC           reduce using rule 107 (adding_operator -> PLUS .)
    ID              reduce using rule 107 (adding_operator -> PLUS .)


state 368

    (24) simple_expression_term -> simple_expression_term adding_operator . term
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    set_constructor                shift and go to state 227
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 471
    name                           shift and go to state 224
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 369

    (111) adding_operator -> OR_ELSE .

    LPAREN          reduce using rule 111 (adding_operator -> OR_ELSE .)
    NOT             reduce using rule 111 (adding_operator -> OR_ELSE .)
    UNSIGNEDNUMBER  reduce using rule 111 (adding_operator -> OR_ELSE .)
    CHARACTER_STRING reduce using rule 111 (adding_operator -> OR_ELSE .)
    NIL             reduce using rule 111 (adding_operator -> OR_ELSE .)
    EXTENDEDNUMBER  reduce using rule 111 (adding_operator -> OR_ELSE .)
    LBRAC           reduce using rule 111 (adding_operator -> OR_ELSE .)
    ID              reduce using rule 111 (adding_operator -> OR_ELSE .)


state 370

    (109) adding_operator -> GL .

    LPAREN          reduce using rule 109 (adding_operator -> GL .)
    NOT             reduce using rule 109 (adding_operator -> GL .)
    UNSIGNEDNUMBER  reduce using rule 109 (adding_operator -> GL .)
    CHARACTER_STRING reduce using rule 109 (adding_operator -> GL .)
    NIL             reduce using rule 109 (adding_operator -> GL .)
    EXTENDEDNUMBER  reduce using rule 109 (adding_operator -> GL .)
    LBRAC           reduce using rule 109 (adding_operator -> GL .)
    ID              reduce using rule 109 (adding_operator -> GL .)


state 371

    (108) adding_operator -> MINUS .

    LPAREN          reduce using rule 108 (adding_operator -> MINUS .)
    NOT             reduce using rule 108 (adding_operator -> MINUS .)
    UNSIGNEDNUMBER  reduce using rule 108 (adding_operator -> MINUS .)
    CHARACTER_STRING reduce using rule 108 (adding_operator -> MINUS .)
    NIL             reduce using rule 108 (adding_operator -> MINUS .)
    EXTENDEDNUMBER  reduce using rule 108 (adding_operator -> MINUS .)
    LBRAC           reduce using rule 108 (adding_operator -> MINUS .)
    ID              reduce using rule 108 (adding_operator -> MINUS .)


state 372

    (33) primary -> NOT primary .

    STARSTAR        reduce using rule 33 (primary -> NOT primary .)
    POW             reduce using rule 33 (primary -> NOT primary .)
    STAR            reduce using rule 33 (primary -> NOT primary .)
    SLASH           reduce using rule 33 (primary -> NOT primary .)
    DIV             reduce using rule 33 (primary -> NOT primary .)
    MOD             reduce using rule 33 (primary -> NOT primary .)
    AND             reduce using rule 33 (primary -> NOT primary .)
    AND_THEN        reduce using rule 33 (primary -> NOT primary .)
    PLUS            reduce using rule 33 (primary -> NOT primary .)
    MINUS           reduce using rule 33 (primary -> NOT primary .)
    GL              reduce using rule 33 (primary -> NOT primary .)
    OR              reduce using rule 33 (primary -> NOT primary .)
    OR_ELSE         reduce using rule 33 (primary -> NOT primary .)
    EQUAL           reduce using rule 33 (primary -> NOT primary .)
    LG              reduce using rule 33 (primary -> NOT primary .)
    LT              reduce using rule 33 (primary -> NOT primary .)
    GT              reduce using rule 33 (primary -> NOT primary .)
    LE              reduce using rule 33 (primary -> NOT primary .)
    GE              reduce using rule 33 (primary -> NOT primary .)
    IN              reduce using rule 33 (primary -> NOT primary .)
    THEN            reduce using rule 33 (primary -> NOT primary .)
    OF              reduce using rule 33 (primary -> NOT primary .)
    DO              reduce using rule 33 (primary -> NOT primary .)
    SEMICOLON       reduce using rule 33 (primary -> NOT primary .)
    DOTDOT          reduce using rule 33 (primary -> NOT primary .)
    RBRAC           reduce using rule 33 (primary -> NOT primary .)
    COMMA           reduce using rule 33 (primary -> NOT primary .)
    END             reduce using rule 33 (primary -> NOT primary .)
    UNTIL           reduce using rule 33 (primary -> NOT primary .)
    ELSE            reduce using rule 33 (primary -> NOT primary .)
    OTHERWISE       reduce using rule 33 (primary -> NOT primary .)
    RPAREN          reduce using rule 33 (primary -> NOT primary .)
    COLON           reduce using rule 33 (primary -> NOT primary .)
    TO              reduce using rule 33 (primary -> NOT primary .)
    DOWNTO          reduce using rule 33 (primary -> NOT primary .)
    VALUE           reduce using rule 33 (primary -> NOT primary .)


state 373

    (113) relational_operator -> LG .

    PLUS            reduce using rule 113 (relational_operator -> LG .)
    MINUS           reduce using rule 113 (relational_operator -> LG .)
    LPAREN          reduce using rule 113 (relational_operator -> LG .)
    NOT             reduce using rule 113 (relational_operator -> LG .)
    UNSIGNEDNUMBER  reduce using rule 113 (relational_operator -> LG .)
    CHARACTER_STRING reduce using rule 113 (relational_operator -> LG .)
    NIL             reduce using rule 113 (relational_operator -> LG .)
    EXTENDEDNUMBER  reduce using rule 113 (relational_operator -> LG .)
    LBRAC           reduce using rule 113 (relational_operator -> LG .)
    ID              reduce using rule 113 (relational_operator -> LG .)


state 374

    (115) relational_operator -> GT .

    PLUS            reduce using rule 115 (relational_operator -> GT .)
    MINUS           reduce using rule 115 (relational_operator -> GT .)
    LPAREN          reduce using rule 115 (relational_operator -> GT .)
    NOT             reduce using rule 115 (relational_operator -> GT .)
    UNSIGNEDNUMBER  reduce using rule 115 (relational_operator -> GT .)
    CHARACTER_STRING reduce using rule 115 (relational_operator -> GT .)
    NIL             reduce using rule 115 (relational_operator -> GT .)
    EXTENDEDNUMBER  reduce using rule 115 (relational_operator -> GT .)
    LBRAC           reduce using rule 115 (relational_operator -> GT .)
    ID              reduce using rule 115 (relational_operator -> GT .)


state 375

    (117) relational_operator -> GE .

    PLUS            reduce using rule 117 (relational_operator -> GE .)
    MINUS           reduce using rule 117 (relational_operator -> GE .)
    LPAREN          reduce using rule 117 (relational_operator -> GE .)
    NOT             reduce using rule 117 (relational_operator -> GE .)
    UNSIGNEDNUMBER  reduce using rule 117 (relational_operator -> GE .)
    CHARACTER_STRING reduce using rule 117 (relational_operator -> GE .)
    NIL             reduce using rule 117 (relational_operator -> GE .)
    EXTENDEDNUMBER  reduce using rule 117 (relational_operator -> GE .)
    LBRAC           reduce using rule 117 (relational_operator -> GE .)
    ID              reduce using rule 117 (relational_operator -> GE .)


state 376

    (20) expression -> expression relational_operator . simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 472
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    substring_variable             shift and go to state 153

state 377

    (112) relational_operator -> EQUAL .

    PLUS            reduce using rule 112 (relational_operator -> EQUAL .)
    MINUS           reduce using rule 112 (relational_operator -> EQUAL .)
    LPAREN          reduce using rule 112 (relational_operator -> EQUAL .)
    NOT             reduce using rule 112 (relational_operator -> EQUAL .)
    UNSIGNEDNUMBER  reduce using rule 112 (relational_operator -> EQUAL .)
    CHARACTER_STRING reduce using rule 112 (relational_operator -> EQUAL .)
    NIL             reduce using rule 112 (relational_operator -> EQUAL .)
    EXTENDEDNUMBER  reduce using rule 112 (relational_operator -> EQUAL .)
    LBRAC           reduce using rule 112 (relational_operator -> EQUAL .)
    ID              reduce using rule 112 (relational_operator -> EQUAL .)


state 378

    (114) relational_operator -> LT .

    PLUS            reduce using rule 114 (relational_operator -> LT .)
    MINUS           reduce using rule 114 (relational_operator -> LT .)
    LPAREN          reduce using rule 114 (relational_operator -> LT .)
    NOT             reduce using rule 114 (relational_operator -> LT .)
    UNSIGNEDNUMBER  reduce using rule 114 (relational_operator -> LT .)
    CHARACTER_STRING reduce using rule 114 (relational_operator -> LT .)
    NIL             reduce using rule 114 (relational_operator -> LT .)
    EXTENDEDNUMBER  reduce using rule 114 (relational_operator -> LT .)
    LBRAC           reduce using rule 114 (relational_operator -> LT .)
    ID              reduce using rule 114 (relational_operator -> LT .)


state 379

    (116) relational_operator -> LE .

    PLUS            reduce using rule 116 (relational_operator -> LE .)
    MINUS           reduce using rule 116 (relational_operator -> LE .)
    LPAREN          reduce using rule 116 (relational_operator -> LE .)
    NOT             reduce using rule 116 (relational_operator -> LE .)
    UNSIGNEDNUMBER  reduce using rule 116 (relational_operator -> LE .)
    CHARACTER_STRING reduce using rule 116 (relational_operator -> LE .)
    NIL             reduce using rule 116 (relational_operator -> LE .)
    EXTENDEDNUMBER  reduce using rule 116 (relational_operator -> LE .)
    LBRAC           reduce using rule 116 (relational_operator -> LE .)
    ID              reduce using rule 116 (relational_operator -> LE .)


state 380

    (118) relational_operator -> IN .

    PLUS            reduce using rule 118 (relational_operator -> IN .)
    MINUS           reduce using rule 118 (relational_operator -> IN .)
    LPAREN          reduce using rule 118 (relational_operator -> IN .)
    NOT             reduce using rule 118 (relational_operator -> IN .)
    UNSIGNEDNUMBER  reduce using rule 118 (relational_operator -> IN .)
    CHARACTER_STRING reduce using rule 118 (relational_operator -> IN .)
    NIL             reduce using rule 118 (relational_operator -> IN .)
    EXTENDEDNUMBER  reduce using rule 118 (relational_operator -> IN .)
    LBRAC           reduce using rule 118 (relational_operator -> IN .)
    ID              reduce using rule 118 (relational_operator -> IN .)


state 381

    (333) iteration_clause -> sequence_iteration .

    DO              reduce using rule 333 (iteration_clause -> sequence_iteration .)


state 382

    (335) sequence_iteration -> ASSIGNMENT . initial_value TO final_value
    (336) sequence_iteration -> ASSIGNMENT . initial_value DOWNTO final_value
    (337) initial_value -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    initial_value                  shift and go to state 473
    expression                     shift and go to state 474
    substring_variable             shift and go to state 153

state 383

    (334) iteration_clause -> set_member_iteration .

    DO              reduce using rule 334 (iteration_clause -> set_member_iteration .)


state 384

    (332) for_statement -> FOR entire_variable iteration_clause . DO statement

    DO              shift and go to state 475


state 385

    (339) set_member_iteration -> IN . set_expression
    (340) set_expression -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    set_expression                 shift and go to state 476
    expression                     shift and go to state 477
    substring_variable             shift and go to state 153

state 386

    (293) statement -> label COLON structured_statement .

    END             reduce using rule 293 (statement -> label COLON structured_statement .)
    SEMICOLON       reduce using rule 293 (statement -> label COLON structured_statement .)
    UNTIL           reduce using rule 293 (statement -> label COLON structured_statement .)
    ELSE            reduce using rule 293 (statement -> label COLON structured_statement .)
    OTHERWISE       reduce using rule 293 (statement -> label COLON structured_statement .)


state 387

    (292) statement -> label COLON simple_statement .

    END             reduce using rule 292 (statement -> label COLON simple_statement .)
    SEMICOLON       reduce using rule 292 (statement -> label COLON simple_statement .)
    UNTIL           reduce using rule 292 (statement -> label COLON simple_statement .)
    ELSE            reduce using rule 292 (statement -> label COLON simple_statement .)
    OTHERWISE       reduce using rule 292 (statement -> label COLON simple_statement .)


state 388

    (330) repeat_statement -> REPEAT statement_sequence UNTIL . boolean_expression
    (312) boolean_expression -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    sign                           shift and go to state 226
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    boolean_expression             shift and go to state 478
    expression                     shift and go to state 250
    substring_variable             shift and go to state 153

state 389

    (310) if_statement -> IF boolean_expression THEN . statement
    (311) if_statement -> IF boolean_expression THEN . statement else_part
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    UNTIL           reduce using rule 405 (empty -> .)
    ELSE            reduce using rule 405 (empty -> .)
    OTHERWISE       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 479
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 390

    (51) actual_parameter_list -> LPAREN actual_parameter_list_list . RPAREN
    (53) actual_parameter_list_list -> actual_parameter_list_list . COMMA actual_parameter

    RPAREN          shift and go to state 481
    COMMA           shift and go to state 480


state 391

    (52) actual_parameter_list_list -> actual_parameter .

    RPAREN          reduce using rule 52 (actual_parameter_list_list -> actual_parameter .)
    COMMA           reduce using rule 52 (actual_parameter_list_list -> actual_parameter .)


state 392

    (54) actual_parameter -> expression .
    (55) actual_parameter -> expression . COLON expression
    (56) actual_parameter -> expression . COLON expression COLON expression
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    RPAREN          reduce using rule 54 (actual_parameter -> expression .)
    COMMA           reduce using rule 54 (actual_parameter -> expression .)
    COLON           shift and go to state 482
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 393

    (331) while_statement -> WHILE boolean_expression DO . statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    UNTIL           reduce using rule 405 (empty -> .)
    ELSE            reduce using rule 405 (empty -> .)
    OTHERWISE       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 483
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 394

    (216) label_list -> label_list COMMA label .

    SEMICOLON       reduce using rule 216 (label_list -> label_list COMMA label .)
    COMMA           reduce using rule 216 (label_list -> label_list COMMA label .)


state 395

    (369) export_part_list -> export_part_list export_part SEMICOLON .

    ID              reduce using rule 369 (export_part_list -> export_part_list export_part SEMICOLON .)
    IMPORT          reduce using rule 369 (export_part_list -> export_part_list export_part SEMICOLON .)
    END             reduce using rule 369 (export_part_list -> export_part_list export_part SEMICOLON .)
    CONST           reduce using rule 369 (export_part_list -> export_part_list export_part SEMICOLON .)
    TYPE            reduce using rule 369 (export_part_list -> export_part_list export_part SEMICOLON .)
    VAR             reduce using rule 369 (export_part_list -> export_part_list export_part SEMICOLON .)
    PROCEDURE       reduce using rule 369 (export_part_list -> export_part_list export_part SEMICOLON .)
    FUNCTION        reduce using rule 369 (export_part_list -> export_part_list export_part SEMICOLON .)


state 396

    (370) export_part -> identifier EQUAL LPAREN . export_list RPAREN
    (371) export_list -> . export_clause
    (372) export_list -> . export_range
    (373) export_list -> . export_list COMMA export_clause
    (374) export_list -> . export_list COMMA export_range
    (375) export_clause -> . exportable_name
    (376) export_clause -> . export_renaming_clause
    (380) export_range -> . first_constant_name DOTDOT last_constant_name
    (377) exportable_name -> . name
    (378) exportable_name -> . PROTECTED name
    (379) export_renaming_clause -> . exportable_name EG identifier
    (381) first_constant_name -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    PROTECTED       shift and go to state 488
    ID              shift and go to state 18

    identifier                     shift and go to state 92
    export_clause                  shift and go to state 485
    first_constant_name            shift and go to state 486
    export_renaming_clause         shift and go to state 487
    export_list                    shift and go to state 489
    exportable_name                shift and go to state 484
    export_range                   shift and go to state 490
    name                           shift and go to state 491

state 397

    (362) module_heading_middle_part -> module_heading_middle_part variable_declaration_part .

    END             reduce using rule 362 (module_heading_middle_part -> module_heading_middle_part variable_declaration_part .)
    CONST           reduce using rule 362 (module_heading_middle_part -> module_heading_middle_part variable_declaration_part .)
    TYPE            reduce using rule 362 (module_heading_middle_part -> module_heading_middle_part variable_declaration_part .)
    VAR             reduce using rule 362 (module_heading_middle_part -> module_heading_middle_part variable_declaration_part .)
    PROCEDURE       reduce using rule 362 (module_heading_middle_part -> module_heading_middle_part variable_declaration_part .)
    FUNCTION        reduce using rule 362 (module_heading_middle_part -> module_heading_middle_part variable_declaration_part .)


state 398

    (360) module_heading_middle_part -> module_heading_middle_part constant_definition_part .

    END             reduce using rule 360 (module_heading_middle_part -> module_heading_middle_part constant_definition_part .)
    CONST           reduce using rule 360 (module_heading_middle_part -> module_heading_middle_part constant_definition_part .)
    TYPE            reduce using rule 360 (module_heading_middle_part -> module_heading_middle_part constant_definition_part .)
    VAR             reduce using rule 360 (module_heading_middle_part -> module_heading_middle_part constant_definition_part .)
    PROCEDURE       reduce using rule 360 (module_heading_middle_part -> module_heading_middle_part constant_definition_part .)
    FUNCTION        reduce using rule 360 (module_heading_middle_part -> module_heading_middle_part constant_definition_part .)


state 399

    (351) module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part module_heading_middle_part END .

    SEMICOLON       reduce using rule 351 (module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part module_heading_middle_part END .)
    DOT             reduce using rule 351 (module_heading -> MODULE identifier SEMICOLON interface_specification_part import_part module_heading_middle_part END .)


state 400

    (361) module_heading_middle_part -> module_heading_middle_part type_definition_part .

    END             reduce using rule 361 (module_heading_middle_part -> module_heading_middle_part type_definition_part .)
    CONST           reduce using rule 361 (module_heading_middle_part -> module_heading_middle_part type_definition_part .)
    TYPE            reduce using rule 361 (module_heading_middle_part -> module_heading_middle_part type_definition_part .)
    VAR             reduce using rule 361 (module_heading_middle_part -> module_heading_middle_part type_definition_part .)
    PROCEDURE       reduce using rule 361 (module_heading_middle_part -> module_heading_middle_part type_definition_part .)
    FUNCTION        reduce using rule 361 (module_heading_middle_part -> module_heading_middle_part type_definition_part .)


state 401

    (363) module_heading_middle_part -> module_heading_middle_part procedure_and_function_heading_part .

    END             reduce using rule 363 (module_heading_middle_part -> module_heading_middle_part procedure_and_function_heading_part .)
    CONST           reduce using rule 363 (module_heading_middle_part -> module_heading_middle_part procedure_and_function_heading_part .)
    TYPE            reduce using rule 363 (module_heading_middle_part -> module_heading_middle_part procedure_and_function_heading_part .)
    VAR             reduce using rule 363 (module_heading_middle_part -> module_heading_middle_part procedure_and_function_heading_part .)
    PROCEDURE       reduce using rule 363 (module_heading_middle_part -> module_heading_middle_part procedure_and_function_heading_part .)
    FUNCTION        reduce using rule 363 (module_heading_middle_part -> module_heading_middle_part procedure_and_function_heading_part .)


state 402

    (260) function_heading -> FUNCTION identifier . COLON result_type
    (261) function_heading -> FUNCTION identifier . formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> FUNCTION identifier . formal_parameter_list COLON result_type
    (263) function_heading -> FUNCTION identifier . result_variable_specification COLON result_type
    (245) formal_parameter_list -> . LPAREN formal_parameter_section_list RPAREN
    (265) result_variable_specification -> . EQUAL identifier

    COLON           shift and go to state 181
    LPAREN          shift and go to state 182
    EQUAL           shift and go to state 180

    formal_parameter_list          shift and go to state 178
    result_variable_specification  shift and go to state 179

state 403

    (364) procedure_and_function_heading_part -> procedure_heading SEMICOLON .

    END             reduce using rule 364 (procedure_and_function_heading_part -> procedure_heading SEMICOLON .)
    CONST           reduce using rule 364 (procedure_and_function_heading_part -> procedure_heading SEMICOLON .)
    TYPE            reduce using rule 364 (procedure_and_function_heading_part -> procedure_heading SEMICOLON .)
    VAR             reduce using rule 364 (procedure_and_function_heading_part -> procedure_heading SEMICOLON .)
    PROCEDURE       reduce using rule 364 (procedure_and_function_heading_part -> procedure_heading SEMICOLON .)
    FUNCTION        reduce using rule 364 (procedure_and_function_heading_part -> procedure_heading SEMICOLON .)


state 404

    (365) procedure_and_function_heading_part -> function_heading SEMICOLON .

    END             reduce using rule 365 (procedure_and_function_heading_part -> function_heading SEMICOLON .)
    CONST           reduce using rule 365 (procedure_and_function_heading_part -> function_heading SEMICOLON .)
    TYPE            reduce using rule 365 (procedure_and_function_heading_part -> function_heading SEMICOLON .)
    VAR             reduce using rule 365 (procedure_and_function_heading_part -> function_heading SEMICOLON .)
    PROCEDURE       reduce using rule 365 (procedure_and_function_heading_part -> function_heading SEMICOLON .)
    FUNCTION        reduce using rule 365 (procedure_and_function_heading_part -> function_heading SEMICOLON .)


state 405

    (348) module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part . END
    (360) module_heading_middle_part -> module_heading_middle_part . constant_definition_part
    (361) module_heading_middle_part -> module_heading_middle_part . type_definition_part
    (362) module_heading_middle_part -> module_heading_middle_part . variable_declaration_part
    (363) module_heading_middle_part -> module_heading_middle_part . procedure_and_function_heading_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (364) procedure_and_function_heading_part -> . procedure_heading SEMICOLON
    (365) procedure_and_function_heading_part -> . function_heading SEMICOLON
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type

    END             shift and go to state 492
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262

    constant_definition_part       shift and go to state 398
    type_definition_part           shift and go to state 400
    variable_declaration_part      shift and go to state 397
    function_heading               shift and go to state 266
    procedure_and_function_heading_part shift and go to state 401
    procedure_heading              shift and go to state 265

state 406

    (352) module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part END .

    SEMICOLON       reduce using rule 352 (module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part END .)
    DOT             reduce using rule 352 (module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part END .)


state 407

    (350) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON . interface_specification_part import_part module_heading_middle_part END
    (354) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON . interface_specification_part import_part END
    (367) interface_specification_part -> . EXPORT export_part_list

    EXPORT          shift and go to state 70

    interface_specification_part   shift and go to state 493

state 408

    (349) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part . import_part module_heading_middle_part END
    (353) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part . import_part END
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    IMPORT          shift and go to state 23
    END             reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    import_part                    shift and go to state 494
    empty                          shift and go to state 21

state 409

    (400) initialization_part -> TO BEGIN DO statement SEMICOLON .

    END             reduce using rule 400 (initialization_part -> TO BEGIN DO statement SEMICOLON .)
    TO              reduce using rule 400 (initialization_part -> TO BEGIN DO statement SEMICOLON .)


state 410

    (401) finalization_part -> TO END DO statement SEMICOLON .

    END             reduce using rule 401 (finalization_part -> TO END DO statement SEMICOLON .)


state 411

    (261) function_heading -> FUNCTION identifier formal_parameter_list result_variable_specification COLON . result_type
    (264) result_type -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    result_type                    shift and go to state 495
    name                           shift and go to state 281

state 412

    (262) function_heading -> FUNCTION identifier formal_parameter_list COLON result_type .

    SEMICOLON       reduce using rule 262 (function_heading -> FUNCTION identifier formal_parameter_list COLON result_type .)
    RPAREN          reduce using rule 262 (function_heading -> FUNCTION identifier formal_parameter_list COLON result_type .)


state 413

    (263) function_heading -> FUNCTION identifier result_variable_specification COLON result_type .

    SEMICOLON       reduce using rule 263 (function_heading -> FUNCTION identifier result_variable_specification COLON result_type .)
    RPAREN          reduce using rule 263 (function_heading -> FUNCTION identifier result_variable_specification COLON result_type .)


state 414

    (267) conformant_array_parameter_specification -> PROTECTED variable_conformant_array_specification .

    RPAREN          reduce using rule 267 (conformant_array_parameter_specification -> PROTECTED variable_conformant_array_specification .)
    SEMICOLON       reduce using rule 267 (conformant_array_parameter_specification -> PROTECTED variable_conformant_array_specification .)


state 415

    (266) conformant_array_parameter_specification -> PROTECTED value_conformant_array_specification .

    RPAREN          reduce using rule 266 (conformant_array_parameter_specification -> PROTECTED value_conformant_array_specification .)
    SEMICOLON       reduce using rule 266 (conformant_array_parameter_specification -> PROTECTED value_conformant_array_specification .)


state 416

    (256) variable_parameter_specification -> PROTECTED VAR . identifier_list COLON parameter_form
    (279) variable_conformant_array_specification -> VAR . identifier_list COLON conformant_array_form
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier_list                shift and go to state 496
    identifier                     shift and go to state 76

state 417

    (254) value_parameter_specification -> PROTECTED identifier_list . COLON parameter_form
    (15) identifier_list -> identifier_list . COMMA identifier
    (270) value_conformant_array_specification -> identifier_list . COLON conformant_array_form

    COLON           shift and go to state 497
    COMMA           shift and go to state 168


state 418

    (245) formal_parameter_list -> LPAREN formal_parameter_section_list RPAREN .

    COLON           reduce using rule 245 (formal_parameter_list -> LPAREN formal_parameter_section_list RPAREN .)
    EQUAL           reduce using rule 245 (formal_parameter_list -> LPAREN formal_parameter_section_list RPAREN .)
    SEMICOLON       reduce using rule 245 (formal_parameter_list -> LPAREN formal_parameter_section_list RPAREN .)
    RPAREN          reduce using rule 245 (formal_parameter_list -> LPAREN formal_parameter_section_list RPAREN .)


state 419

    (247) formal_parameter_section_list -> formal_parameter_section_list SEMICOLON . formal_parameter_section
    (248) formal_parameter_section -> . value_parameter_specification
    (249) formal_parameter_section -> . variable_parameter_specification
    (250) formal_parameter_section -> . procedural_parameter_specification
    (251) formal_parameter_section -> . functional_parameter_specification
    (252) formal_parameter_section -> . conformant_array_parameter_specification
    (253) value_parameter_specification -> . identifier_list COLON parameter_form
    (254) value_parameter_specification -> . PROTECTED identifier_list COLON parameter_form
    (256) variable_parameter_specification -> . PROTECTED VAR identifier_list COLON parameter_form
    (257) variable_parameter_specification -> . VAR identifier_list COLON parameter_form
    (258) procedural_parameter_specification -> . procedure_heading
    (259) functional_parameter_specification -> . function_heading
    (266) conformant_array_parameter_specification -> . PROTECTED value_conformant_array_specification
    (267) conformant_array_parameter_specification -> . PROTECTED variable_conformant_array_specification
    (268) conformant_array_parameter_specification -> . value_conformant_array_specification
    (269) conformant_array_parameter_specification -> . variable_conformant_array_specification
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type
    (270) value_conformant_array_specification -> . identifier_list COLON conformant_array_form
    (279) variable_conformant_array_specification -> . VAR identifier_list COLON conformant_array_form
    (16) identifier -> . ID

    PROTECTED       shift and go to state 284
    VAR             shift and go to state 291
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262
    ID              shift and go to state 18

    procedure_heading              shift and go to state 293
    variable_conformant_array_specification shift and go to state 289
    identifier_list                shift and go to state 292
    procedural_parameter_specification shift and go to state 286
    identifier                     shift and go to state 76
    function_heading               shift and go to state 295
    value_conformant_array_specification shift and go to state 283
    variable_parameter_specification shift and go to state 288
    formal_parameter_section       shift and go to state 498
    value_parameter_specification  shift and go to state 285
    functional_parameter_specification shift and go to state 294
    conformant_array_parameter_specification shift and go to state 287

state 420

    (257) variable_parameter_specification -> VAR identifier_list . COLON parameter_form
    (279) variable_conformant_array_specification -> VAR identifier_list . COLON conformant_array_form
    (15) identifier_list -> identifier_list . COMMA identifier

    COLON           shift and go to state 499
    COMMA           shift and go to state 168


state 421

    (253) value_parameter_specification -> identifier_list COLON . parameter_form
    (270) value_conformant_array_specification -> identifier_list COLON . conformant_array_form
    (255) parameter_form -> . type_denoter_middle_part
    (271) conformant_array_form -> . packed_conformant_array_form
    (272) conformant_array_form -> . unpacked_conformant_array_form
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (273) packed_conformant_array_form -> . PACKED ARRAY LBRAC index_type_specification RBRAC OF name
    (275) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    PACKED          shift and go to state 502
    ARRAY           shift and go to state 503
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    unpacked_conformant_array_form shift and go to state 500
    field_designator               shift and go to state 130
    packed_conformant_array_form   shift and go to state 501
    indexed_variable               shift and go to state 120
    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 504
    parameter_form                 shift and go to state 505
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    conformant_array_form          shift and go to state 506
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 422

    (168) file_type -> FILE LBRAC . index_type RBRAC OF component_type
    (6) index_type -> . ordinal_type
    (7) ordinal_type -> . new_ordinal_type
    (8) ordinal_type -> . ordinal_type_name
    (9) ordinal_type -> . type_inquiry
    (10) ordinal_type -> . discriminated_schema
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (122) ordinal_type_name -> . name
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (18) subrange_bound -> . expression
    (16) identifier -> . ID
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    TYPE            shift and go to state 326
    LPAREN          shift and go to state 318
    ID              shift and go to state 18
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    discriminated_schema           shift and go to state 508
    simple_expression              shift and go to state 228
    type_inquiry                   shift and go to state 509
    entire_variable                shift and go to state 134
    field_designator               shift and go to state 130
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    index_type                     shift and go to state 510
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    subrange_type                  shift and go to state 314
    ordinal_type                   shift and go to state 511
    unsigned_constant              shift and go to state 234
    new_ordinal_type               shift and go to state 507
    name                           shift and go to state 512
    term                           shift and go to state 238
    simple_expression_term         shift and go to state 241
    ordinal_type_name              shift and go to state 513
    set_constructor                shift and go to state 227
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 423

    (169) file_type -> FILE OF . component_type
    (123) component_type -> . type_denoter
    (124) type_denoter -> . type_denoter_middle_part
    (125) type_denoter -> . BINDABLE type_denoter_middle_part
    (126) type_denoter -> . type_denoter_middle_part initial_state_specifier
    (127) type_denoter -> . BINDABLE type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    BINDABLE        shift and go to state 310
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    type_denoter                   shift and go to state 514
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 315
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    component_type                 shift and go to state 515
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 424

    (166) set_type -> SET OF . base_type
    (167) base_type -> . ordinal_type
    (7) ordinal_type -> . new_ordinal_type
    (8) ordinal_type -> . ordinal_type_name
    (9) ordinal_type -> . type_inquiry
    (10) ordinal_type -> . discriminated_schema
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (122) ordinal_type_name -> . name
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (18) subrange_bound -> . expression
    (16) identifier -> . ID
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    TYPE            shift and go to state 326
    LPAREN          shift and go to state 318
    ID              shift and go to state 18
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    discriminated_schema           shift and go to state 508
    simple_expression              shift and go to state 228
    type_inquiry                   shift and go to state 509
    field_designator               shift and go to state 130
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    enumerated_type                shift and go to state 308
    base_type                      shift and go to state 516
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    subrange_type                  shift and go to state 314
    ordinal_type                   shift and go to state 517
    unsigned_constant              shift and go to state 234
    new_ordinal_type               shift and go to state 507
    term                           shift and go to state 238
    name                           shift and go to state 512
    simple_expression_term         shift and go to state 241
    ordinal_type_name              shift and go to state 513
    set_constructor                shift and go to state 227
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 425

    (153) variant_part -> CASE . variant_selector OF variant_list_element_list
    (154) variant_part -> CASE . variant_selector OF variant_list_element_list SEMICOLON variant_part_completer
    (155) variant_part -> CASE . variant_selector OF variant_list_element_list variant_part_completer
    (156) variant_part -> CASE . variant_selector OF variant_part_completer
    (161) variant_selector -> . tag_field COLON tag_type
    (162) variant_selector -> . tag_type
    (163) tag_field -> . identifier
    (164) tag_type -> . ordinal_type_name
    (16) identifier -> . ID
    (122) ordinal_type_name -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier

    ID              shift and go to state 18

    variant_selector               shift and go to state 518
    name                           shift and go to state 519
    ordinal_type_name              shift and go to state 520
    identifier                     shift and go to state 521
    tag_field                      shift and go to state 522
    tag_type                       shift and go to state 523

state 426

    (150) fixed_part -> record_section .

    SEMICOLON       reduce using rule 150 (fixed_part -> record_section .)
    RPAREN          reduce using rule 150 (fixed_part -> record_section .)
    END             reduce using rule 150 (fixed_part -> record_section .)


state 427

    (145) field_list_left_part -> fixed_part . SEMICOLON variant_part
    (146) field_list_left_part -> fixed_part .
    (147) field_list_left_part -> fixed_part . SEMICOLON
    (151) fixed_part -> fixed_part . SEMICOLON record_section

    SEMICOLON       shift and go to state 524
    END             reduce using rule 146 (field_list_left_part -> fixed_part .)
    RPAREN          reduce using rule 146 (field_list_left_part -> fixed_part .)


state 428

    (148) field_list_left_part -> variant_part .
    (149) field_list_left_part -> variant_part . SEMICOLON

    END             reduce using rule 148 (field_list_left_part -> variant_part .)
    RPAREN          reduce using rule 148 (field_list_left_part -> variant_part .)
    SEMICOLON       shift and go to state 525


state 429

    (143) field_list -> field_list_left_part .

    END             reduce using rule 143 (field_list -> field_list_left_part .)
    RPAREN          reduce using rule 143 (field_list -> field_list_left_part .)


state 430

    (152) record_section -> identifier_list . COLON type_denoter
    (15) identifier_list -> identifier_list . COMMA identifier

    COLON           shift and go to state 526
    COMMA           shift and go to state 168


state 431

    (142) record_type -> RECORD field_list . END

    END             shift and go to state 527


state 432

    (144) field_list -> empty .

    END             reduce using rule 144 (field_list -> empty .)
    RPAREN          reduce using rule 144 (field_list -> empty .)


state 433

    (137) new_structured_type -> PACKED unpacked_structured_type .

    RPAREN          reduce using rule 137 (new_structured_type -> PACKED unpacked_structured_type .)
    SEMICOLON       reduce using rule 137 (new_structured_type -> PACKED unpacked_structured_type .)
    VALUE           reduce using rule 137 (new_structured_type -> PACKED unpacked_structured_type .)
    END             reduce using rule 137 (new_structured_type -> PACKED unpacked_structured_type .)


state 434

    (125) type_denoter -> BINDABLE type_denoter_middle_part .
    (127) type_denoter -> BINDABLE type_denoter_middle_part . initial_state_specifier
    (173) initial_state_specifier -> . VALUE component_value

  ! shift/reduce conflict for VALUE resolved as shift
    SEMICOLON       reduce using rule 125 (type_denoter -> BINDABLE type_denoter_middle_part .)
    RPAREN          reduce using rule 125 (type_denoter -> BINDABLE type_denoter_middle_part .)
    END             reduce using rule 125 (type_denoter -> BINDABLE type_denoter_middle_part .)
    VALUE           shift and go to state 438

  ! VALUE           [ reduce using rule 125 (type_denoter -> BINDABLE type_denoter_middle_part .) ]

    initial_state_specifier        shift and go to state 528

state 435

    (2) array_type -> ARRAY LBRAC . index_type_list RBRAC OF component_type
    (4) index_type_list -> . index_type
    (5) index_type_list -> . index_type_list COMMA index_type
    (6) index_type -> . ordinal_type
    (7) ordinal_type -> . new_ordinal_type
    (8) ordinal_type -> . ordinal_type_name
    (9) ordinal_type -> . type_inquiry
    (10) ordinal_type -> . discriminated_schema
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (122) ordinal_type_name -> . name
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (18) subrange_bound -> . expression
    (16) identifier -> . ID
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    TYPE            shift and go to state 326
    LPAREN          shift and go to state 318
    ID              shift and go to state 18
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    discriminated_schema           shift and go to state 508
    simple_expression              shift and go to state 228
    index_type_list                shift and go to state 529
    type_inquiry                   shift and go to state 509
    entire_variable                shift and go to state 134
    field_designator               shift and go to state 130
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    index_type                     shift and go to state 530
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    subrange_type                  shift and go to state 314
    ordinal_type                   shift and go to state 511
    unsigned_constant              shift and go to state 234
    new_ordinal_type               shift and go to state 507
    name                           shift and go to state 512
    term                           shift and go to state 238
    simple_expression_term         shift and go to state 241
    ordinal_type_name              shift and go to state 513
    set_constructor                shift and go to state 227
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 436

    (3) array_type -> ARRAY OF . component_type
    (123) component_type -> . type_denoter
    (124) type_denoter -> . type_denoter_middle_part
    (125) type_denoter -> . BINDABLE type_denoter_middle_part
    (126) type_denoter -> . type_denoter_middle_part initial_state_specifier
    (127) type_denoter -> . BINDABLE type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    BINDABLE        shift and go to state 310
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    type_denoter                   shift and go to state 514
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 315
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    component_type                 shift and go to state 531
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 437

    (126) type_denoter -> type_denoter_middle_part initial_state_specifier .

    VALUE           reduce using rule 126 (type_denoter -> type_denoter_middle_part initial_state_specifier .)
    SEMICOLON       reduce using rule 126 (type_denoter -> type_denoter_middle_part initial_state_specifier .)
    RPAREN          reduce using rule 126 (type_denoter -> type_denoter_middle_part initial_state_specifier .)
    END             reduce using rule 126 (type_denoter -> type_denoter_middle_part initial_state_specifier .)


state 438

    (173) initial_state_specifier -> VALUE . component_value
    (80) component_value -> . expression
    (81) component_value -> . array_value
    (82) component_value -> . record_value
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (69) array_value -> . LBRAC array_value_element_list RBRAC
    (70) array_value -> . LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC
    (71) array_value -> . LBRAC array_value_element_list SEMICOLON RBRAC
    (72) array_value -> . LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC
    (73) array_value -> . LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC
    (74) array_value -> . LBRAC array_value_element_list array_value_completer RBRAC
    (75) array_value -> . LBRAC array_value_completer SEMICOLON RBRAC
    (76) array_value -> . LBRAC array_value_completer RBRAC
    (83) record_value -> . LBRAC field_list_value RBRAC
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LBRAC           shift and go to state 534
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    array_value                    shift and go to state 532
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    component_value                shift and go to state 533
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    record_value                   shift and go to state 535
    expression                     shift and go to state 536
    substring_variable             shift and go to state 153

state 439

    (171) domain_type -> name .
    (48) name -> name . DOT identifier

    VALUE           reduce using rule 171 (domain_type -> name .)
    SEMICOLON       reduce using rule 171 (domain_type -> name .)
    RPAREN          reduce using rule 171 (domain_type -> name .)
    END             reduce using rule 171 (domain_type -> name .)
    DOT             shift and go to state 189


state 440

    (170) new_pointer_type -> UPARROW domain_type .

    VALUE           reduce using rule 170 (new_pointer_type -> UPARROW domain_type .)
    SEMICOLON       reduce using rule 170 (new_pointer_type -> UPARROW domain_type .)
    RPAREN          reduce using rule 170 (new_pointer_type -> UPARROW domain_type .)
    END             reduce using rule 170 (new_pointer_type -> UPARROW domain_type .)


state 441

    (13) enumerated_type -> LPAREN identifier_list . RPAREN
    (15) identifier_list -> identifier_list . COMMA identifier

    RPAREN          shift and go to state 537
    COMMA           shift and go to state 168


state 442

    (14) identifier_list -> identifier .
    (47) name -> identifier .

  ! reduce/reduce conflict for COMMA resolved using rule 14 (identifier_list -> identifier .)
  ! reduce/reduce conflict for COLON resolved using rule 14 (identifier_list -> identifier .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (identifier_list -> identifier .)
    COLON           reduce using rule 14 (identifier_list -> identifier .)
    COMMA           reduce using rule 14 (identifier_list -> identifier .)
    RPAREN          reduce using rule 14 (identifier_list -> identifier .)
    DOT             reduce using rule 47 (name -> identifier .)
    LPAREN          reduce using rule 47 (name -> identifier .)
    LBRAC           reduce using rule 47 (name -> identifier .)
    UPARROW         reduce using rule 47 (name -> identifier .)
    STARSTAR        reduce using rule 47 (name -> identifier .)
    POW             reduce using rule 47 (name -> identifier .)
    STAR            reduce using rule 47 (name -> identifier .)
    SLASH           reduce using rule 47 (name -> identifier .)
    DIV             reduce using rule 47 (name -> identifier .)
    MOD             reduce using rule 47 (name -> identifier .)
    AND             reduce using rule 47 (name -> identifier .)
    AND_THEN        reduce using rule 47 (name -> identifier .)
    PLUS            reduce using rule 47 (name -> identifier .)
    MINUS           reduce using rule 47 (name -> identifier .)
    GL              reduce using rule 47 (name -> identifier .)
    OR              reduce using rule 47 (name -> identifier .)
    OR_ELSE         reduce using rule 47 (name -> identifier .)
    DOTDOT          reduce using rule 47 (name -> identifier .)
    EQUAL           reduce using rule 47 (name -> identifier .)
    LG              reduce using rule 47 (name -> identifier .)
    LT              reduce using rule 47 (name -> identifier .)
    GT              reduce using rule 47 (name -> identifier .)
    LE              reduce using rule 47 (name -> identifier .)
    GE              reduce using rule 47 (name -> identifier .)
    IN              reduce using rule 47 (name -> identifier .)
    RBRAC           reduce using rule 47 (name -> identifier .)

  ! COMMA           [ reduce using rule 47 (name -> identifier .) ]
  ! COLON           [ reduce using rule 47 (name -> identifier .) ]
  ! RPAREN          [ reduce using rule 47 (name -> identifier .) ]


state 443

    (120) actual_discriminant_part -> LPAREN . actual_parameter_list RPAREN
    (51) actual_parameter_list -> LPAREN . actual_parameter_list_list RPAREN
    (51) actual_parameter_list -> . LPAREN actual_parameter_list_list RPAREN
    (52) actual_parameter_list_list -> . actual_parameter
    (53) actual_parameter_list_list -> . actual_parameter_list_list COMMA actual_parameter
    (54) actual_parameter -> . expression
    (55) actual_parameter -> . expression COLON expression
    (56) actual_parameter -> . expression COLON expression COLON expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LPAREN          shift and go to state 539
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    actual_parameter_list          shift and go to state 538
    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    actual_parameter_list_list     shift and go to state 390
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    actual_parameter               shift and go to state 391
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    set_constructor                shift and go to state 227
    expression                     shift and go to state 392
    substring_variable             shift and go to state 153

state 444

    (119) discriminated_schema -> name actual_discriminant_part .

    VALUE           reduce using rule 119 (discriminated_schema -> name actual_discriminant_part .)
    SEMICOLON       reduce using rule 119 (discriminated_schema -> name actual_discriminant_part .)
    RBRAC           reduce using rule 119 (discriminated_schema -> name actual_discriminant_part .)
    COMMA           reduce using rule 119 (discriminated_schema -> name actual_discriminant_part .)
    RPAREN          reduce using rule 119 (discriminated_schema -> name actual_discriminant_part .)
    END             reduce using rule 119 (discriminated_schema -> name actual_discriminant_part .)


state 445

    (17) subrange_type -> subrange_bound DOTDOT . subrange_bound
    (18) subrange_bound -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    subrange_bound                 shift and go to state 540
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 446

    (172) restricted_type -> RESTRICTED name .
    (48) name -> name . DOT identifier

    RPAREN          reduce using rule 172 (restricted_type -> RESTRICTED name .)
    SEMICOLON       reduce using rule 172 (restricted_type -> RESTRICTED name .)
    VALUE           reduce using rule 172 (restricted_type -> RESTRICTED name .)
    END             reduce using rule 172 (restricted_type -> RESTRICTED name .)
    DOT             shift and go to state 189


state 447

    (121) type_inquiry -> TYPE OF . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    name                           shift and go to state 541

state 448

    (228) schema_definition -> identifier formal_discriminant_part EQUAL type_denoter .

    SEMICOLON       reduce using rule 228 (schema_definition -> identifier formal_discriminant_part EQUAL type_denoter .)


state 449

    (229) formal_discriminant_part -> LPAREN discriminant_specification_list RPAREN .

    EQUAL           reduce using rule 229 (formal_discriminant_part -> LPAREN discriminant_specification_list RPAREN .)


state 450

    (231) discriminant_specification_list -> discriminant_specification_list SEMICOLON . discriminant_specification
    (232) discriminant_specification -> . identifier_list COLON ordinal_type_name
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    discriminant_specification     shift and go to state 542
    identifier                     shift and go to state 76
    identifier_list                shift and go to state 334

state 451

    (232) discriminant_specification -> identifier_list COLON . ordinal_type_name
    (122) ordinal_type_name -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    ordinal_type_name              shift and go to state 543
    name                           shift and go to state 519
    identifier                     shift and go to state 92

state 452

    (213) import_renaming_clause -> constituent_identifier EG identifier .

    RPAREN          reduce using rule 213 (import_renaming_clause -> constituent_identifier EG identifier .)
    COMMA           reduce using rule 213 (import_renaming_clause -> constituent_identifier EG identifier .)


state 453

    (209) import_list -> import_list COMMA import_clause .

    RPAREN          reduce using rule 209 (import_list -> import_list COMMA import_clause .)
    COMMA           reduce using rule 209 (import_list -> import_list COMMA import_clause .)


state 454

    (205) import_qualifier -> selective_import_option LPAREN import_list RPAREN .

    SEMICOLON       reduce using rule 205 (import_qualifier -> selective_import_option LPAREN import_list RPAREN .)


state 455

    (50) substring_variable -> variable_access LBRAC index_expression DOTDOT . index_expression RBRAC
    (45) index_expression -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    index_expression               shift and go to state 544
    expression                     shift and go to state 343
    substring_variable             shift and go to state 153

state 456

    (42) indexed_variable -> variable_access LBRAC index_expression_list RBRAC .

    ASSIGNMENT      reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    LBRAC           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    UPARROW         reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    DOT             reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    STARSTAR        reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    POW             reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    STAR            reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    SLASH           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    DIV             reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    MOD             reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    AND             reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    AND_THEN        reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    PLUS            reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    MINUS           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    GL              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    OR              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    OR_ELSE         reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    EQUAL           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    LG              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    LT              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    GT              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    LE              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    GE              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    IN              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    DO              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    COLON           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    RPAREN          reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    COMMA           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    DOTDOT          reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    RBRAC           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    END             reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    SEMICOLON       reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    UNTIL           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    ELSE            reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    OTHERWISE       reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    OF              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    THEN            reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    VALUE           reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    TO              reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)
    DOWNTO          reduce using rule 42 (indexed_variable -> variable_access LBRAC index_expression_list RBRAC .)


state 457

    (44) index_expression_list -> index_expression_list COMMA . index_expression
    (45) index_expression -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    index_expression               shift and go to state 545
    expression                     shift and go to state 343
    substring_variable             shift and go to state 153

state 458

    (341) with_statement -> WITH with_list DO statement .

    END             reduce using rule 341 (with_statement -> WITH with_list DO statement .)
    SEMICOLON       reduce using rule 341 (with_statement -> WITH with_list DO statement .)
    UNTIL           reduce using rule 341 (with_statement -> WITH with_list DO statement .)
    ELSE            reduce using rule 341 (with_statement -> WITH with_list DO statement .)
    OTHERWISE       reduce using rule 341 (with_statement -> WITH with_list DO statement .)


state 459

    (343) with_list -> with_list COMMA with_element .

    DO              reduce using rule 343 (with_list -> with_list COMMA with_element .)
    COMMA           reduce using rule 343 (with_list -> with_list COMMA with_element .)


state 460

    (28) factor -> primary exponentiating_operator primary .

    STAR            reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    SLASH           reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    DIV             reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    MOD             reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    AND             reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    AND_THEN        reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    PLUS            reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    MINUS           reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    GL              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    OR              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    OR_ELSE         reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    EQUAL           reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    LG              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    LT              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    GT              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    LE              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    GE              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    IN              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    OF              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    RBRAC           reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    DOTDOT          reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    COLON           reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    COMMA           reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    END             reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    SEMICOLON       reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    UNTIL           reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    ELSE            reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    OTHERWISE       reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    DO              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    TO              reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    DOWNTO          reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    THEN            reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    RPAREN          reduce using rule 28 (factor -> primary exponentiating_operator primary .)
    VALUE           reduce using rule 28 (factor -> primary exponentiating_operator primary .)


state 461

    (325) case_statement_completer -> OTHERWISE . statement_sequence
    (290) statement_sequence -> . statement
    (291) statement_sequence -> . statement_sequence SEMICOLON statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    SEMICOLON       reduce using rule 405 (empty -> .)
    END             reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    statement_sequence             shift and go to state 546
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 136
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 462

    (324) case_list_element -> member_designator_list . COLON statement
    (66) member_designator_list -> member_designator_list . COMMA member_designator

    COLON           shift and go to state 547
    COMMA           shift and go to state 467


state 463

    (315) case_statement -> CASE case_index OF case_statement_completer . END
    (319) case_statement -> CASE case_index OF case_statement_completer . SEMICOLON END

    END             shift and go to state 548
    SEMICOLON       shift and go to state 549


state 464

    (322) case_list_element_list -> case_list_element .

    END             reduce using rule 322 (case_list_element_list -> case_list_element .)
    SEMICOLON       reduce using rule 322 (case_list_element_list -> case_list_element .)
    OTHERWISE       reduce using rule 322 (case_list_element_list -> case_list_element .)


state 465

    (314) case_statement -> CASE case_index OF case_list_element_list . END
    (316) case_statement -> CASE case_index OF case_list_element_list . case_statement_completer END
    (317) case_statement -> CASE case_index OF case_list_element_list . SEMICOLON case_statement_completer END
    (318) case_statement -> CASE case_index OF case_list_element_list . SEMICOLON END
    (320) case_statement -> CASE case_index OF case_list_element_list . case_statement_completer SEMICOLON END
    (321) case_statement -> CASE case_index OF case_list_element_list . SEMICOLON case_statement_completer SEMICOLON END
    (323) case_list_element_list -> case_list_element_list . SEMICOLON case_list_element
    (325) case_statement_completer -> . OTHERWISE statement_sequence

    END             shift and go to state 550
    SEMICOLON       shift and go to state 551
    OTHERWISE       shift and go to state 461

    case_statement_completer       shift and go to state 552

state 466

    (32) primary -> LPAREN expression RPAREN .

    STARSTAR        reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    POW             reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    STAR            reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    SLASH           reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    DIV             reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    MOD             reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    AND             reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    AND_THEN        reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    GL              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    OR              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    OR_ELSE         reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    LG              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    LT              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    GT              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    LE              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    GE              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    IN              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    THEN            reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    OF              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    DO              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    RBRAC           reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    END             reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    UNTIL           reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    OTHERWISE       reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    COLON           reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    TO              reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    DOWNTO          reduce using rule 32 (primary -> LPAREN expression RPAREN .)
    VALUE           reduce using rule 32 (primary -> LPAREN expression RPAREN .)


state 467

    (66) member_designator_list -> member_designator_list COMMA . member_designator
    (67) member_designator -> . expression
    (68) member_designator -> . expression DOTDOT expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    member_designator              shift and go to state 553
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 358
    substring_variable             shift and go to state 153

state 468

    (63) set_constructor -> LBRAC member_designator_list RBRAC .

    STARSTAR        reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    POW             reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    STAR            reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    SLASH           reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    DIV             reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    MOD             reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    AND             reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    AND_THEN        reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    PLUS            reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    MINUS           reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    GL              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    OR              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    OR_ELSE         reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    EQUAL           reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    LG              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    LT              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    GT              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    LE              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    GE              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    IN              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    SEMICOLON       reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    RBRAC           reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    DOTDOT          reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    COLON           reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    RPAREN          reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    COMMA           reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    OTHERWISE       reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    DO              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    OF              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    THEN            reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    END             reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    UNTIL           reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    ELSE            reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    TO              reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    DOWNTO          reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)
    VALUE           reduce using rule 63 (set_constructor -> LBRAC member_designator_list RBRAC .)


state 469

    (68) member_designator -> expression DOTDOT . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 554
    substring_variable             shift and go to state 153

state 470

    (26) term -> term multiplying_operator factor .

    STAR            reduce using rule 26 (term -> term multiplying_operator factor .)
    SLASH           reduce using rule 26 (term -> term multiplying_operator factor .)
    DIV             reduce using rule 26 (term -> term multiplying_operator factor .)
    MOD             reduce using rule 26 (term -> term multiplying_operator factor .)
    AND             reduce using rule 26 (term -> term multiplying_operator factor .)
    AND_THEN        reduce using rule 26 (term -> term multiplying_operator factor .)
    PLUS            reduce using rule 26 (term -> term multiplying_operator factor .)
    MINUS           reduce using rule 26 (term -> term multiplying_operator factor .)
    GL              reduce using rule 26 (term -> term multiplying_operator factor .)
    OR              reduce using rule 26 (term -> term multiplying_operator factor .)
    OR_ELSE         reduce using rule 26 (term -> term multiplying_operator factor .)
    EQUAL           reduce using rule 26 (term -> term multiplying_operator factor .)
    LG              reduce using rule 26 (term -> term multiplying_operator factor .)
    LT              reduce using rule 26 (term -> term multiplying_operator factor .)
    GT              reduce using rule 26 (term -> term multiplying_operator factor .)
    LE              reduce using rule 26 (term -> term multiplying_operator factor .)
    GE              reduce using rule 26 (term -> term multiplying_operator factor .)
    IN              reduce using rule 26 (term -> term multiplying_operator factor .)
    RBRAC           reduce using rule 26 (term -> term multiplying_operator factor .)
    DOTDOT          reduce using rule 26 (term -> term multiplying_operator factor .)
    COMMA           reduce using rule 26 (term -> term multiplying_operator factor .)
    THEN            reduce using rule 26 (term -> term multiplying_operator factor .)
    OF              reduce using rule 26 (term -> term multiplying_operator factor .)
    COLON           reduce using rule 26 (term -> term multiplying_operator factor .)
    RPAREN          reduce using rule 26 (term -> term multiplying_operator factor .)
    TO              reduce using rule 26 (term -> term multiplying_operator factor .)
    DOWNTO          reduce using rule 26 (term -> term multiplying_operator factor .)
    END             reduce using rule 26 (term -> term multiplying_operator factor .)
    SEMICOLON       reduce using rule 26 (term -> term multiplying_operator factor .)
    UNTIL           reduce using rule 26 (term -> term multiplying_operator factor .)
    ELSE            reduce using rule 26 (term -> term multiplying_operator factor .)
    OTHERWISE       reduce using rule 26 (term -> term multiplying_operator factor .)
    VALUE           reduce using rule 26 (term -> term multiplying_operator factor .)
    DO              reduce using rule 26 (term -> term multiplying_operator factor .)


state 471

    (24) simple_expression_term -> simple_expression_term adding_operator term .
    (26) term -> term . multiplying_operator factor
    (101) multiplying_operator -> . STAR
    (102) multiplying_operator -> . SLASH
    (103) multiplying_operator -> . DIV
    (104) multiplying_operator -> . MOD
    (105) multiplying_operator -> . AND
    (106) multiplying_operator -> . AND_THEN

    PLUS            reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    MINUS           reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    GL              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    OR              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    OR_ELSE         reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    COLON           reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    EQUAL           reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    LG              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    LT              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    GT              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    LE              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    GE              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    IN              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    RPAREN          reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    COMMA           reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    SEMICOLON       reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    END             reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    UNTIL           reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    ELSE            reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    OTHERWISE       reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    DOTDOT          reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    DO              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    RBRAC           reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    THEN            reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    OF              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    VALUE           reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    TO              reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    DOWNTO          reduce using rule 24 (simple_expression_term -> simple_expression_term adding_operator term .)
    STAR            shift and go to state 360
    SLASH           shift and go to state 362
    DIV             shift and go to state 363
    MOD             shift and go to state 365
    AND             shift and go to state 359
    AND_THEN        shift and go to state 361

    multiplying_operator           shift and go to state 364

state 472

    (20) expression -> expression relational_operator simple_expression .

    EQUAL           reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    LG              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    LT              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    GT              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    LE              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    GE              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    IN              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    DOTDOT          reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    DO              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    COLON           reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    RPAREN          reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    COMMA           reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    OF              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    VALUE           reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    END             reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    RBRAC           reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    OTHERWISE       reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    UNTIL           reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    ELSE            reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    THEN            reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    TO              reduce using rule 20 (expression -> expression relational_operator simple_expression .)
    DOWNTO          reduce using rule 20 (expression -> expression relational_operator simple_expression .)


state 473

    (335) sequence_iteration -> ASSIGNMENT initial_value . TO final_value
    (336) sequence_iteration -> ASSIGNMENT initial_value . DOWNTO final_value

    TO              shift and go to state 556
    DOWNTO          shift and go to state 555


state 474

    (337) initial_value -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    TO              reduce using rule 337 (initial_value -> expression .)
    DOWNTO          reduce using rule 337 (initial_value -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 475

    (332) for_statement -> FOR entire_variable iteration_clause DO . statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    UNTIL           reduce using rule 405 (empty -> .)
    ELSE            reduce using rule 405 (empty -> .)
    OTHERWISE       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 557
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    structured_statement           shift and go to state 125
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 476

    (339) set_member_iteration -> IN set_expression .

    DO              reduce using rule 339 (set_member_iteration -> IN set_expression .)


state 477

    (340) set_expression -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    DO              reduce using rule 340 (set_expression -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 478

    (330) repeat_statement -> REPEAT statement_sequence UNTIL boolean_expression .

    SEMICOLON       reduce using rule 330 (repeat_statement -> REPEAT statement_sequence UNTIL boolean_expression .)
    END             reduce using rule 330 (repeat_statement -> REPEAT statement_sequence UNTIL boolean_expression .)
    UNTIL           reduce using rule 330 (repeat_statement -> REPEAT statement_sequence UNTIL boolean_expression .)
    ELSE            reduce using rule 330 (repeat_statement -> REPEAT statement_sequence UNTIL boolean_expression .)
    OTHERWISE       reduce using rule 330 (repeat_statement -> REPEAT statement_sequence UNTIL boolean_expression .)


state 479

    (310) if_statement -> IF boolean_expression THEN statement .
    (311) if_statement -> IF boolean_expression THEN statement . else_part
    (313) else_part -> . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    END             reduce using rule 310 (if_statement -> IF boolean_expression THEN statement .)
    SEMICOLON       reduce using rule 310 (if_statement -> IF boolean_expression THEN statement .)
    OTHERWISE       reduce using rule 310 (if_statement -> IF boolean_expression THEN statement .)
    UNTIL           reduce using rule 310 (if_statement -> IF boolean_expression THEN statement .)
    ELSE            shift and go to state 558

  ! ELSE            [ reduce using rule 310 (if_statement -> IF boolean_expression THEN statement .) ]

    else_part                      shift and go to state 559

state 480

    (53) actual_parameter_list_list -> actual_parameter_list_list COMMA . actual_parameter
    (54) actual_parameter -> . expression
    (55) actual_parameter -> . expression COLON expression
    (56) actual_parameter -> . expression COLON expression COLON expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    actual_parameter               shift and go to state 560
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    set_constructor                shift and go to state 227
    expression                     shift and go to state 392
    substring_variable             shift and go to state 153

state 481

    (51) actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .

    LBRAC           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    UPARROW         reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    DOT             reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    STARSTAR        reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    POW             reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    STAR            reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    SLASH           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    DIV             reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    MOD             reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    AND             reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    AND_THEN        reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    PLUS            reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    MINUS           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    GL              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    OR              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    OR_ELSE         reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    EQUAL           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    LG              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    LT              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    GT              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    LE              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    GE              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    IN              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    DOTDOT          reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    DO              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    COMMA           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    OF              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    ASSIGNMENT      reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    THEN            reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    SEMICOLON       reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    RBRAC           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    END             reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    UNTIL           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    ELSE            reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    OTHERWISE       reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    RPAREN          reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    COLON           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    TO              reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    DOWNTO          reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)
    VALUE           reduce using rule 51 (actual_parameter_list -> LPAREN actual_parameter_list_list RPAREN .)


state 482

    (55) actual_parameter -> expression COLON . expression
    (56) actual_parameter -> expression COLON . expression COLON expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 561
    substring_variable             shift and go to state 153

state 483

    (331) while_statement -> WHILE boolean_expression DO statement .

    END             reduce using rule 331 (while_statement -> WHILE boolean_expression DO statement .)
    SEMICOLON       reduce using rule 331 (while_statement -> WHILE boolean_expression DO statement .)
    OTHERWISE       reduce using rule 331 (while_statement -> WHILE boolean_expression DO statement .)
    UNTIL           reduce using rule 331 (while_statement -> WHILE boolean_expression DO statement .)
    ELSE            reduce using rule 331 (while_statement -> WHILE boolean_expression DO statement .)


state 484

    (375) export_clause -> exportable_name .
    (379) export_renaming_clause -> exportable_name . EG identifier

    RPAREN          reduce using rule 375 (export_clause -> exportable_name .)
    COMMA           reduce using rule 375 (export_clause -> exportable_name .)
    EG              shift and go to state 562


state 485

    (371) export_list -> export_clause .

    RPAREN          reduce using rule 371 (export_list -> export_clause .)
    COMMA           reduce using rule 371 (export_list -> export_clause .)


state 486

    (380) export_range -> first_constant_name . DOTDOT last_constant_name

    DOTDOT          shift and go to state 563


state 487

    (376) export_clause -> export_renaming_clause .

    RPAREN          reduce using rule 376 (export_clause -> export_renaming_clause .)
    COMMA           reduce using rule 376 (export_clause -> export_renaming_clause .)


state 488

    (378) exportable_name -> PROTECTED . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    name                           shift and go to state 564

state 489

    (370) export_part -> identifier EQUAL LPAREN export_list . RPAREN
    (373) export_list -> export_list . COMMA export_clause
    (374) export_list -> export_list . COMMA export_range

    RPAREN          shift and go to state 565
    COMMA           shift and go to state 566


state 490

    (372) export_list -> export_range .

    RPAREN          reduce using rule 372 (export_list -> export_range .)
    COMMA           reduce using rule 372 (export_list -> export_range .)


state 491

    (377) exportable_name -> name .
    (381) first_constant_name -> name .
    (48) name -> name . DOT identifier

    EG              reduce using rule 377 (exportable_name -> name .)
    RPAREN          reduce using rule 377 (exportable_name -> name .)
    COMMA           reduce using rule 377 (exportable_name -> name .)
    DOTDOT          reduce using rule 381 (first_constant_name -> name .)
    DOT             shift and go to state 189


state 492

    (348) module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part END .

    SEMICOLON       reduce using rule 348 (module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part END .)
    DOT             reduce using rule 348 (module_heading -> MODULE identifier interface_directive SEMICOLON interface_specification_part import_part module_heading_middle_part END .)


state 493

    (350) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part . import_part module_heading_middle_part END
    (354) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part . import_part END
    (195) import_part -> . IMPORT import_specification_list
    (196) import_part -> . empty
    (405) empty -> .

    IMPORT          shift and go to state 23
    END             reduce using rule 405 (empty -> .)
    CONST           reduce using rule 405 (empty -> .)
    TYPE            reduce using rule 405 (empty -> .)
    VAR             reduce using rule 405 (empty -> .)
    PROCEDURE       reduce using rule 405 (empty -> .)
    FUNCTION        reduce using rule 405 (empty -> .)

    import_part                    shift and go to state 567
    empty                          shift and go to state 21

state 494

    (349) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part . module_heading_middle_part END
    (353) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part . END
    (356) module_heading_middle_part -> . constant_definition_part
    (357) module_heading_middle_part -> . type_definition_part
    (358) module_heading_middle_part -> . variable_declaration_part
    (359) module_heading_middle_part -> . procedure_and_function_heading_part
    (360) module_heading_middle_part -> . module_heading_middle_part constant_definition_part
    (361) module_heading_middle_part -> . module_heading_middle_part type_definition_part
    (362) module_heading_middle_part -> . module_heading_middle_part variable_declaration_part
    (363) module_heading_middle_part -> . module_heading_middle_part procedure_and_function_heading_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (364) procedure_and_function_heading_part -> . procedure_heading SEMICOLON
    (365) procedure_and_function_heading_part -> . function_heading SEMICOLON
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type

    END             shift and go to state 569
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262

    constant_definition_part       shift and go to state 261
    type_definition_part           shift and go to state 264
    procedure_and_function_heading_part shift and go to state 267
    variable_declaration_part      shift and go to state 259
    function_heading               shift and go to state 266
    module_heading_middle_part     shift and go to state 568
    procedure_heading              shift and go to state 265

state 495

    (261) function_heading -> FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type .

    SEMICOLON       reduce using rule 261 (function_heading -> FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type .)
    RPAREN          reduce using rule 261 (function_heading -> FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type .)


state 496

    (256) variable_parameter_specification -> PROTECTED VAR identifier_list . COLON parameter_form
    (279) variable_conformant_array_specification -> VAR identifier_list . COLON conformant_array_form
    (15) identifier_list -> identifier_list . COMMA identifier

    COLON           shift and go to state 570
    COMMA           shift and go to state 168


state 497

    (254) value_parameter_specification -> PROTECTED identifier_list COLON . parameter_form
    (270) value_conformant_array_specification -> identifier_list COLON . conformant_array_form
    (255) parameter_form -> . type_denoter_middle_part
    (271) conformant_array_form -> . packed_conformant_array_form
    (272) conformant_array_form -> . unpacked_conformant_array_form
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (273) packed_conformant_array_form -> . PACKED ARRAY LBRAC index_type_specification RBRAC OF name
    (275) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    PACKED          shift and go to state 502
    ARRAY           shift and go to state 503
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    unpacked_conformant_array_form shift and go to state 500
    field_designator               shift and go to state 130
    packed_conformant_array_form   shift and go to state 501
    indexed_variable               shift and go to state 120
    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 504
    parameter_form                 shift and go to state 571
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    conformant_array_form          shift and go to state 506
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 498

    (247) formal_parameter_section_list -> formal_parameter_section_list SEMICOLON formal_parameter_section .

    RPAREN          reduce using rule 247 (formal_parameter_section_list -> formal_parameter_section_list SEMICOLON formal_parameter_section .)
    SEMICOLON       reduce using rule 247 (formal_parameter_section_list -> formal_parameter_section_list SEMICOLON formal_parameter_section .)


state 499

    (257) variable_parameter_specification -> VAR identifier_list COLON . parameter_form
    (279) variable_conformant_array_specification -> VAR identifier_list COLON . conformant_array_form
    (255) parameter_form -> . type_denoter_middle_part
    (271) conformant_array_form -> . packed_conformant_array_form
    (272) conformant_array_form -> . unpacked_conformant_array_form
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (273) packed_conformant_array_form -> . PACKED ARRAY LBRAC index_type_specification RBRAC OF name
    (275) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    PACKED          shift and go to state 502
    ARRAY           shift and go to state 503
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    unpacked_conformant_array_form shift and go to state 500
    field_designator               shift and go to state 130
    packed_conformant_array_form   shift and go to state 501
    indexed_variable               shift and go to state 120
    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 504
    parameter_form                 shift and go to state 572
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    conformant_array_form          shift and go to state 573
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 500

    (272) conformant_array_form -> unpacked_conformant_array_form .

    RPAREN          reduce using rule 272 (conformant_array_form -> unpacked_conformant_array_form .)
    SEMICOLON       reduce using rule 272 (conformant_array_form -> unpacked_conformant_array_form .)


state 501

    (271) conformant_array_form -> packed_conformant_array_form .

    RPAREN          reduce using rule 271 (conformant_array_form -> packed_conformant_array_form .)
    SEMICOLON       reduce using rule 271 (conformant_array_form -> packed_conformant_array_form .)


state 502

    (273) packed_conformant_array_form -> PACKED . ARRAY LBRAC index_type_specification RBRAC OF name
    (137) new_structured_type -> PACKED . unpacked_structured_type
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type

    ARRAY           shift and go to state 574
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303

    file_type                      shift and go to state 298
    set_type                       shift and go to state 317
    record_type                    shift and go to state 321
    array_type                     shift and go to state 319
    unpacked_structured_type       shift and go to state 433

state 503

    (275) unpacked_conformant_array_form -> ARRAY . LBRAC index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> ARRAY . LBRAC index_type_specification_list RBRAC OF conformant_array_form
    (2) array_type -> ARRAY . LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> ARRAY . OF component_type

    LBRAC           shift and go to state 575
    OF              shift and go to state 436


state 504

    (255) parameter_form -> type_denoter_middle_part .

    RPAREN          reduce using rule 255 (parameter_form -> type_denoter_middle_part .)
    SEMICOLON       reduce using rule 255 (parameter_form -> type_denoter_middle_part .)


state 505

    (253) value_parameter_specification -> identifier_list COLON parameter_form .

    RPAREN          reduce using rule 253 (value_parameter_specification -> identifier_list COLON parameter_form .)
    SEMICOLON       reduce using rule 253 (value_parameter_specification -> identifier_list COLON parameter_form .)


state 506

    (270) value_conformant_array_specification -> identifier_list COLON conformant_array_form .

    RPAREN          reduce using rule 270 (value_conformant_array_specification -> identifier_list COLON conformant_array_form .)
    SEMICOLON       reduce using rule 270 (value_conformant_array_specification -> identifier_list COLON conformant_array_form .)


state 507

    (7) ordinal_type -> new_ordinal_type .

    VALUE           reduce using rule 7 (ordinal_type -> new_ordinal_type .)
    SEMICOLON       reduce using rule 7 (ordinal_type -> new_ordinal_type .)
    RPAREN          reduce using rule 7 (ordinal_type -> new_ordinal_type .)
    END             reduce using rule 7 (ordinal_type -> new_ordinal_type .)
    RBRAC           reduce using rule 7 (ordinal_type -> new_ordinal_type .)
    COMMA           reduce using rule 7 (ordinal_type -> new_ordinal_type .)


state 508

    (10) ordinal_type -> discriminated_schema .

    VALUE           reduce using rule 10 (ordinal_type -> discriminated_schema .)
    SEMICOLON       reduce using rule 10 (ordinal_type -> discriminated_schema .)
    RPAREN          reduce using rule 10 (ordinal_type -> discriminated_schema .)
    END             reduce using rule 10 (ordinal_type -> discriminated_schema .)
    RBRAC           reduce using rule 10 (ordinal_type -> discriminated_schema .)
    COMMA           reduce using rule 10 (ordinal_type -> discriminated_schema .)


state 509

    (9) ordinal_type -> type_inquiry .

    VALUE           reduce using rule 9 (ordinal_type -> type_inquiry .)
    SEMICOLON       reduce using rule 9 (ordinal_type -> type_inquiry .)
    RPAREN          reduce using rule 9 (ordinal_type -> type_inquiry .)
    END             reduce using rule 9 (ordinal_type -> type_inquiry .)
    RBRAC           reduce using rule 9 (ordinal_type -> type_inquiry .)
    COMMA           reduce using rule 9 (ordinal_type -> type_inquiry .)


state 510

    (168) file_type -> FILE LBRAC index_type . RBRAC OF component_type

    RBRAC           shift and go to state 576


state 511

    (6) index_type -> ordinal_type .

    RBRAC           reduce using rule 6 (index_type -> ordinal_type .)
    COMMA           reduce using rule 6 (index_type -> ordinal_type .)


state 512

    (122) ordinal_type_name -> name .
    (119) discriminated_schema -> name . actual_discriminant_part
    (48) name -> name . DOT identifier
    (38) entire_variable -> name .
    (39) entire_variable -> name . actual_parameter_list
    (120) actual_discriminant_part -> . LPAREN actual_parameter_list RPAREN
    (51) actual_parameter_list -> . LPAREN actual_parameter_list_list RPAREN

  ! shift/reduce conflict for DOT resolved as shift
    RBRAC           reduce using rule 122 (ordinal_type_name -> name .)
    COMMA           reduce using rule 122 (ordinal_type_name -> name .)
    VALUE           reduce using rule 122 (ordinal_type_name -> name .)
    SEMICOLON       reduce using rule 122 (ordinal_type_name -> name .)
    RPAREN          reduce using rule 122 (ordinal_type_name -> name .)
    END             reduce using rule 122 (ordinal_type_name -> name .)
    DOT             shift and go to state 189
    LBRAC           reduce using rule 38 (entire_variable -> name .)
    UPARROW         reduce using rule 38 (entire_variable -> name .)
    STARSTAR        reduce using rule 38 (entire_variable -> name .)
    POW             reduce using rule 38 (entire_variable -> name .)
    STAR            reduce using rule 38 (entire_variable -> name .)
    SLASH           reduce using rule 38 (entire_variable -> name .)
    DIV             reduce using rule 38 (entire_variable -> name .)
    MOD             reduce using rule 38 (entire_variable -> name .)
    AND             reduce using rule 38 (entire_variable -> name .)
    AND_THEN        reduce using rule 38 (entire_variable -> name .)
    PLUS            reduce using rule 38 (entire_variable -> name .)
    MINUS           reduce using rule 38 (entire_variable -> name .)
    GL              reduce using rule 38 (entire_variable -> name .)
    OR              reduce using rule 38 (entire_variable -> name .)
    OR_ELSE         reduce using rule 38 (entire_variable -> name .)
    EQUAL           reduce using rule 38 (entire_variable -> name .)
    LG              reduce using rule 38 (entire_variable -> name .)
    LT              reduce using rule 38 (entire_variable -> name .)
    GT              reduce using rule 38 (entire_variable -> name .)
    LE              reduce using rule 38 (entire_variable -> name .)
    GE              reduce using rule 38 (entire_variable -> name .)
    IN              reduce using rule 38 (entire_variable -> name .)
    DOTDOT          reduce using rule 38 (entire_variable -> name .)
    LPAREN          shift and go to state 443

  ! DOT             [ reduce using rule 38 (entire_variable -> name .) ]

    actual_parameter_list          shift and go to state 348
    actual_discriminant_part       shift and go to state 444

state 513

    (8) ordinal_type -> ordinal_type_name .

    VALUE           reduce using rule 8 (ordinal_type -> ordinal_type_name .)
    SEMICOLON       reduce using rule 8 (ordinal_type -> ordinal_type_name .)
    RPAREN          reduce using rule 8 (ordinal_type -> ordinal_type_name .)
    END             reduce using rule 8 (ordinal_type -> ordinal_type_name .)
    RBRAC           reduce using rule 8 (ordinal_type -> ordinal_type_name .)
    COMMA           reduce using rule 8 (ordinal_type -> ordinal_type_name .)


state 514

    (123) component_type -> type_denoter .

    VALUE           reduce using rule 123 (component_type -> type_denoter .)
    SEMICOLON       reduce using rule 123 (component_type -> type_denoter .)
    RPAREN          reduce using rule 123 (component_type -> type_denoter .)
    END             reduce using rule 123 (component_type -> type_denoter .)


state 515

    (169) file_type -> FILE OF component_type .

    RPAREN          reduce using rule 169 (file_type -> FILE OF component_type .)
    SEMICOLON       reduce using rule 169 (file_type -> FILE OF component_type .)
    VALUE           reduce using rule 169 (file_type -> FILE OF component_type .)
    END             reduce using rule 169 (file_type -> FILE OF component_type .)


state 516

    (166) set_type -> SET OF base_type .

    VALUE           reduce using rule 166 (set_type -> SET OF base_type .)
    SEMICOLON       reduce using rule 166 (set_type -> SET OF base_type .)
    RPAREN          reduce using rule 166 (set_type -> SET OF base_type .)
    END             reduce using rule 166 (set_type -> SET OF base_type .)


state 517

    (167) base_type -> ordinal_type .

    VALUE           reduce using rule 167 (base_type -> ordinal_type .)
    SEMICOLON       reduce using rule 167 (base_type -> ordinal_type .)
    RPAREN          reduce using rule 167 (base_type -> ordinal_type .)
    END             reduce using rule 167 (base_type -> ordinal_type .)


state 518

    (153) variant_part -> CASE variant_selector . OF variant_list_element_list
    (154) variant_part -> CASE variant_selector . OF variant_list_element_list SEMICOLON variant_part_completer
    (155) variant_part -> CASE variant_selector . OF variant_list_element_list variant_part_completer
    (156) variant_part -> CASE variant_selector . OF variant_part_completer

    OF              shift and go to state 577


state 519

    (122) ordinal_type_name -> name .
    (48) name -> name . DOT identifier

    OF              reduce using rule 122 (ordinal_type_name -> name .)
    RBRAC           reduce using rule 122 (ordinal_type_name -> name .)
    SEMICOLON       reduce using rule 122 (ordinal_type_name -> name .)
    RPAREN          reduce using rule 122 (ordinal_type_name -> name .)
    DOT             shift and go to state 189


state 520

    (164) tag_type -> ordinal_type_name .

    OF              reduce using rule 164 (tag_type -> ordinal_type_name .)


state 521

    (163) tag_field -> identifier .
    (47) name -> identifier .

    COLON           reduce using rule 163 (tag_field -> identifier .)
    DOT             reduce using rule 47 (name -> identifier .)
    OF              reduce using rule 47 (name -> identifier .)


state 522

    (161) variant_selector -> tag_field . COLON tag_type

    COLON           shift and go to state 578


state 523

    (162) variant_selector -> tag_type .

    OF              reduce using rule 162 (variant_selector -> tag_type .)


state 524

    (145) field_list_left_part -> fixed_part SEMICOLON . variant_part
    (147) field_list_left_part -> fixed_part SEMICOLON .
    (151) fixed_part -> fixed_part SEMICOLON . record_section
    (153) variant_part -> . CASE variant_selector OF variant_list_element_list
    (154) variant_part -> . CASE variant_selector OF variant_list_element_list SEMICOLON variant_part_completer
    (155) variant_part -> . CASE variant_selector OF variant_list_element_list variant_part_completer
    (156) variant_part -> . CASE variant_selector OF variant_part_completer
    (152) record_section -> . identifier_list COLON type_denoter
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    END             reduce using rule 147 (field_list_left_part -> fixed_part SEMICOLON .)
    RPAREN          reduce using rule 147 (field_list_left_part -> fixed_part SEMICOLON .)
    CASE            shift and go to state 425
    ID              shift and go to state 18

    identifier                     shift and go to state 76
    variant_part                   shift and go to state 579
    identifier_list                shift and go to state 430
    record_section                 shift and go to state 580

state 525

    (149) field_list_left_part -> variant_part SEMICOLON .

    END             reduce using rule 149 (field_list_left_part -> variant_part SEMICOLON .)
    RPAREN          reduce using rule 149 (field_list_left_part -> variant_part SEMICOLON .)


state 526

    (152) record_section -> identifier_list COLON . type_denoter
    (124) type_denoter -> . type_denoter_middle_part
    (125) type_denoter -> . BINDABLE type_denoter_middle_part
    (126) type_denoter -> . type_denoter_middle_part initial_state_specifier
    (127) type_denoter -> . BINDABLE type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    BINDABLE        shift and go to state 310
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    type_denoter                   shift and go to state 581
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 315
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 527

    (142) record_type -> RECORD field_list END .

    RPAREN          reduce using rule 142 (record_type -> RECORD field_list END .)
    SEMICOLON       reduce using rule 142 (record_type -> RECORD field_list END .)
    VALUE           reduce using rule 142 (record_type -> RECORD field_list END .)
    END             reduce using rule 142 (record_type -> RECORD field_list END .)


state 528

    (127) type_denoter -> BINDABLE type_denoter_middle_part initial_state_specifier .

    VALUE           reduce using rule 127 (type_denoter -> BINDABLE type_denoter_middle_part initial_state_specifier .)
    SEMICOLON       reduce using rule 127 (type_denoter -> BINDABLE type_denoter_middle_part initial_state_specifier .)
    RPAREN          reduce using rule 127 (type_denoter -> BINDABLE type_denoter_middle_part initial_state_specifier .)
    END             reduce using rule 127 (type_denoter -> BINDABLE type_denoter_middle_part initial_state_specifier .)


state 529

    (2) array_type -> ARRAY LBRAC index_type_list . RBRAC OF component_type
    (5) index_type_list -> index_type_list . COMMA index_type

    RBRAC           shift and go to state 582
    COMMA           shift and go to state 583


state 530

    (4) index_type_list -> index_type .

    RBRAC           reduce using rule 4 (index_type_list -> index_type .)
    COMMA           reduce using rule 4 (index_type_list -> index_type .)


state 531

    (3) array_type -> ARRAY OF component_type .

    VALUE           reduce using rule 3 (array_type -> ARRAY OF component_type .)
    SEMICOLON       reduce using rule 3 (array_type -> ARRAY OF component_type .)
    RPAREN          reduce using rule 3 (array_type -> ARRAY OF component_type .)
    END             reduce using rule 3 (array_type -> ARRAY OF component_type .)


state 532

    (81) component_value -> array_value .

    SEMICOLON       reduce using rule 81 (component_value -> array_value .)
    VALUE           reduce using rule 81 (component_value -> array_value .)
    RPAREN          reduce using rule 81 (component_value -> array_value .)
    END             reduce using rule 81 (component_value -> array_value .)
    RBRAC           reduce using rule 81 (component_value -> array_value .)
    OTHERWISE       reduce using rule 81 (component_value -> array_value .)


state 533

    (173) initial_state_specifier -> VALUE component_value .

    SEMICOLON       reduce using rule 173 (initial_state_specifier -> VALUE component_value .)
    VALUE           reduce using rule 173 (initial_state_specifier -> VALUE component_value .)
    RPAREN          reduce using rule 173 (initial_state_specifier -> VALUE component_value .)
    END             reduce using rule 173 (initial_state_specifier -> VALUE component_value .)


state 534

    (69) array_value -> LBRAC . array_value_element_list RBRAC
    (70) array_value -> LBRAC . array_value_element_list SEMICOLON array_value_completer RBRAC
    (71) array_value -> LBRAC . array_value_element_list SEMICOLON RBRAC
    (72) array_value -> LBRAC . array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC
    (73) array_value -> LBRAC . array_value_element_list array_value_completer SEMICOLON RBRAC
    (74) array_value -> LBRAC . array_value_element_list array_value_completer RBRAC
    (75) array_value -> LBRAC . array_value_completer SEMICOLON RBRAC
    (76) array_value -> LBRAC . array_value_completer RBRAC
    (83) record_value -> LBRAC . field_list_value RBRAC
    (63) set_constructor -> LBRAC . member_designator_list RBRAC
    (64) set_constructor -> LBRAC . RBRAC
    (77) array_value_element_list -> . array_value_element
    (78) array_value_element_list -> . array_value_element_list SEMICOLON array_value_element
    (79) array_value_completer -> . OTHERWISE component_value
    (84) field_list_value -> . variant_part_value
    (85) field_list_value -> . variant_part_value SEMICOLON
    (86) field_list_value -> . fixed_part_value
    (87) field_list_value -> . fixed_part_value SEMICOLON
    (88) field_list_value -> . fixed_part_value SEMICOLON variant_part_value
    (89) field_list_value -> . fixed_part_value SEMICOLON variant_part_value SEMICOLON
    (90) field_list_value -> . empty
    (65) member_designator_list -> . member_designator
    (66) member_designator_list -> . member_designator_list COMMA member_designator
    (98) array_value_element -> . member_designator_list COLON component_value
    (91) variant_part_value -> . CASE tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC
    (92) variant_part_value -> . CASE expression OF LBRAC field_list_value RBRAC
    (95) fixed_part_value -> . field_value
    (96) fixed_part_value -> . fixed_part_value SEMICOLON field_value
    (405) empty -> .
    (67) member_designator -> . expression
    (68) member_designator -> . expression DOTDOT expression
    (97) field_value -> . identifier_list COLON component_value
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (16) identifier -> . ID
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

  ! shift/reduce conflict for RBRAC resolved as shift
    RBRAC           shift and go to state 355
    OTHERWISE       shift and go to state 586
    CASE            shift and go to state 587
    ID              shift and go to state 18
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

  ! RBRAC           [ reduce using rule 405 (empty -> .) ]

    indexed_variable               shift and go to state 120
    array_value_completer          shift and go to state 584
    array_value_element_list       shift and go to state 585
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    member_designator_list         shift and go to state 588
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    member_designator              shift and go to state 357
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    empty                          shift and go to state 589
    field_list_value               shift and go to state 590
    unsigned_constant              shift and go to state 234
    identifier_list                shift and go to state 591
    name                           shift and go to state 224
    term                           shift and go to state 238
    array_value_element            shift and go to state 592
    fixed_part_value               shift and go to state 593
    variant_part_value             shift and go to state 594
    simple_expression_term         shift and go to state 241
    field_value                    shift and go to state 595
    identifier                     shift and go to state 442
    expression                     shift and go to state 358
    substring_variable             shift and go to state 153

state 535

    (82) component_value -> record_value .

    SEMICOLON       reduce using rule 82 (component_value -> record_value .)
    VALUE           reduce using rule 82 (component_value -> record_value .)
    RPAREN          reduce using rule 82 (component_value -> record_value .)
    END             reduce using rule 82 (component_value -> record_value .)
    RBRAC           reduce using rule 82 (component_value -> record_value .)
    OTHERWISE       reduce using rule 82 (component_value -> record_value .)


state 536

    (80) component_value -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    SEMICOLON       reduce using rule 80 (component_value -> expression .)
    VALUE           reduce using rule 80 (component_value -> expression .)
    RPAREN          reduce using rule 80 (component_value -> expression .)
    END             reduce using rule 80 (component_value -> expression .)
    RBRAC           reduce using rule 80 (component_value -> expression .)
    OTHERWISE       reduce using rule 80 (component_value -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 537

    (13) enumerated_type -> LPAREN identifier_list RPAREN .

    RPAREN          reduce using rule 13 (enumerated_type -> LPAREN identifier_list RPAREN .)
    SEMICOLON       reduce using rule 13 (enumerated_type -> LPAREN identifier_list RPAREN .)
    VALUE           reduce using rule 13 (enumerated_type -> LPAREN identifier_list RPAREN .)
    END             reduce using rule 13 (enumerated_type -> LPAREN identifier_list RPAREN .)
    RBRAC           reduce using rule 13 (enumerated_type -> LPAREN identifier_list RPAREN .)
    COMMA           reduce using rule 13 (enumerated_type -> LPAREN identifier_list RPAREN .)


state 538

    (120) actual_discriminant_part -> LPAREN actual_parameter_list . RPAREN

    RPAREN          shift and go to state 596


state 539

    (51) actual_parameter_list -> LPAREN . actual_parameter_list_list RPAREN
    (32) primary -> LPAREN . expression RPAREN
    (52) actual_parameter_list_list -> . actual_parameter
    (53) actual_parameter_list_list -> . actual_parameter_list_list COMMA actual_parameter
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (54) actual_parameter -> . expression
    (55) actual_parameter -> . expression COLON expression
    (56) actual_parameter -> . expression COLON expression COLON expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    actual_parameter_list_list     shift and go to state 390
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    actual_parameter               shift and go to state 391
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    set_constructor                shift and go to state 227
    expression                     shift and go to state 597
    substring_variable             shift and go to state 153

state 540

    (17) subrange_type -> subrange_bound DOTDOT subrange_bound .

    VALUE           reduce using rule 17 (subrange_type -> subrange_bound DOTDOT subrange_bound .)
    SEMICOLON       reduce using rule 17 (subrange_type -> subrange_bound DOTDOT subrange_bound .)
    RPAREN          reduce using rule 17 (subrange_type -> subrange_bound DOTDOT subrange_bound .)
    END             reduce using rule 17 (subrange_type -> subrange_bound DOTDOT subrange_bound .)
    RBRAC           reduce using rule 17 (subrange_type -> subrange_bound DOTDOT subrange_bound .)
    COMMA           reduce using rule 17 (subrange_type -> subrange_bound DOTDOT subrange_bound .)


state 541

    (121) type_inquiry -> TYPE OF name .
    (48) name -> name . DOT identifier

    RPAREN          reduce using rule 121 (type_inquiry -> TYPE OF name .)
    SEMICOLON       reduce using rule 121 (type_inquiry -> TYPE OF name .)
    VALUE           reduce using rule 121 (type_inquiry -> TYPE OF name .)
    END             reduce using rule 121 (type_inquiry -> TYPE OF name .)
    RBRAC           reduce using rule 121 (type_inquiry -> TYPE OF name .)
    COMMA           reduce using rule 121 (type_inquiry -> TYPE OF name .)
    DOT             shift and go to state 189


state 542

    (231) discriminant_specification_list -> discriminant_specification_list SEMICOLON discriminant_specification .

    RPAREN          reduce using rule 231 (discriminant_specification_list -> discriminant_specification_list SEMICOLON discriminant_specification .)
    SEMICOLON       reduce using rule 231 (discriminant_specification_list -> discriminant_specification_list SEMICOLON discriminant_specification .)


state 543

    (232) discriminant_specification -> identifier_list COLON ordinal_type_name .

    RPAREN          reduce using rule 232 (discriminant_specification -> identifier_list COLON ordinal_type_name .)
    SEMICOLON       reduce using rule 232 (discriminant_specification -> identifier_list COLON ordinal_type_name .)


state 544

    (50) substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression . RBRAC

    RBRAC           shift and go to state 598


state 545

    (44) index_expression_list -> index_expression_list COMMA index_expression .

    RBRAC           reduce using rule 44 (index_expression_list -> index_expression_list COMMA index_expression .)
    COMMA           reduce using rule 44 (index_expression_list -> index_expression_list COMMA index_expression .)


state 546

    (325) case_statement_completer -> OTHERWISE statement_sequence .
    (291) statement_sequence -> statement_sequence . SEMICOLON statement

  ! shift/reduce conflict for SEMICOLON resolved as shift
    END             reduce using rule 325 (case_statement_completer -> OTHERWISE statement_sequence .)
    SEMICOLON       shift and go to state 216

  ! SEMICOLON       [ reduce using rule 325 (case_statement_completer -> OTHERWISE statement_sequence .) ]


state 547

    (324) case_list_element -> member_designator_list COLON . statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    OTHERWISE       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 599
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 548

    (315) case_statement -> CASE case_index OF case_statement_completer END .

    SEMICOLON       reduce using rule 315 (case_statement -> CASE case_index OF case_statement_completer END .)
    END             reduce using rule 315 (case_statement -> CASE case_index OF case_statement_completer END .)
    UNTIL           reduce using rule 315 (case_statement -> CASE case_index OF case_statement_completer END .)
    OTHERWISE       reduce using rule 315 (case_statement -> CASE case_index OF case_statement_completer END .)
    ELSE            reduce using rule 315 (case_statement -> CASE case_index OF case_statement_completer END .)


state 549

    (319) case_statement -> CASE case_index OF case_statement_completer SEMICOLON . END

    END             shift and go to state 600


state 550

    (314) case_statement -> CASE case_index OF case_list_element_list END .

    SEMICOLON       reduce using rule 314 (case_statement -> CASE case_index OF case_list_element_list END .)
    END             reduce using rule 314 (case_statement -> CASE case_index OF case_list_element_list END .)
    UNTIL           reduce using rule 314 (case_statement -> CASE case_index OF case_list_element_list END .)
    OTHERWISE       reduce using rule 314 (case_statement -> CASE case_index OF case_list_element_list END .)
    ELSE            reduce using rule 314 (case_statement -> CASE case_index OF case_list_element_list END .)


state 551

    (317) case_statement -> CASE case_index OF case_list_element_list SEMICOLON . case_statement_completer END
    (318) case_statement -> CASE case_index OF case_list_element_list SEMICOLON . END
    (321) case_statement -> CASE case_index OF case_list_element_list SEMICOLON . case_statement_completer SEMICOLON END
    (323) case_list_element_list -> case_list_element_list SEMICOLON . case_list_element
    (325) case_statement_completer -> . OTHERWISE statement_sequence
    (324) case_list_element -> . member_designator_list COLON statement
    (65) member_designator_list -> . member_designator
    (66) member_designator_list -> . member_designator_list COMMA member_designator
    (67) member_designator -> . expression
    (68) member_designator -> . expression DOTDOT expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    END             shift and go to state 601
    OTHERWISE       shift and go to state 461
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    member_designator_list         shift and go to state 462
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    member_designator              shift and go to state 357
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    case_statement_completer       shift and go to state 602
    unsigned_constant              shift and go to state 234
    case_list_element              shift and go to state 603
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 358
    substring_variable             shift and go to state 153

state 552

    (316) case_statement -> CASE case_index OF case_list_element_list case_statement_completer . END
    (320) case_statement -> CASE case_index OF case_list_element_list case_statement_completer . SEMICOLON END

    END             shift and go to state 604
    SEMICOLON       shift and go to state 605


state 553

    (66) member_designator_list -> member_designator_list COMMA member_designator .

    COLON           reduce using rule 66 (member_designator_list -> member_designator_list COMMA member_designator .)
    COMMA           reduce using rule 66 (member_designator_list -> member_designator_list COMMA member_designator .)
    RBRAC           reduce using rule 66 (member_designator_list -> member_designator_list COMMA member_designator .)


state 554

    (68) member_designator -> expression DOTDOT expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    COLON           reduce using rule 68 (member_designator -> expression DOTDOT expression .)
    COMMA           reduce using rule 68 (member_designator -> expression DOTDOT expression .)
    RBRAC           reduce using rule 68 (member_designator -> expression DOTDOT expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 555

    (336) sequence_iteration -> ASSIGNMENT initial_value DOWNTO . final_value
    (338) final_value -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    final_value                    shift and go to state 606
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 607
    substring_variable             shift and go to state 153

state 556

    (335) sequence_iteration -> ASSIGNMENT initial_value TO . final_value
    (338) final_value -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    final_value                    shift and go to state 608
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 607
    substring_variable             shift and go to state 153

state 557

    (332) for_statement -> FOR entire_variable iteration_clause DO statement .

    SEMICOLON       reduce using rule 332 (for_statement -> FOR entire_variable iteration_clause DO statement .)
    END             reduce using rule 332 (for_statement -> FOR entire_variable iteration_clause DO statement .)
    UNTIL           reduce using rule 332 (for_statement -> FOR entire_variable iteration_clause DO statement .)
    ELSE            reduce using rule 332 (for_statement -> FOR entire_variable iteration_clause DO statement .)
    OTHERWISE       reduce using rule 332 (for_statement -> FOR entire_variable iteration_clause DO statement .)


state 558

    (313) else_part -> ELSE . statement
    (292) statement -> . label COLON simple_statement
    (293) statement -> . label COLON structured_statement
    (294) statement -> . simple_statement
    (295) statement -> . structured_statement
    (217) label -> . UNSIGNEDNUMBER
    (296) simple_statement -> . empty
    (297) simple_statement -> . assignment_statement
    (298) simple_statement -> . procedure_statement
    (299) simple_statement -> . goto_statement
    (304) structured_statement -> . compound_statement
    (305) structured_statement -> . conditional_statement
    (306) structured_statement -> . repetitive_statement
    (307) structured_statement -> . with_statement
    (405) empty -> .
    (300) assignment_statement -> . variable_access ASSIGNMENT expression
    (301) procedure_statement -> . name
    (302) procedure_statement -> . name actual_parameter_list
    (303) goto_statement -> . GOTO label
    (289) compound_statement -> . BEGIN statement_sequence END
    (308) conditional_statement -> . if_statement
    (309) conditional_statement -> . case_statement
    (327) repetitive_statement -> . repeat_statement
    (328) repetitive_statement -> . while_statement
    (329) repetitive_statement -> . for_statement
    (341) with_statement -> . WITH with_list DO statement
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (310) if_statement -> . IF boolean_expression THEN statement
    (311) if_statement -> . IF boolean_expression THEN statement else_part
    (314) case_statement -> . CASE case_index OF case_list_element_list END
    (315) case_statement -> . CASE case_index OF case_statement_completer END
    (316) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer END
    (317) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END
    (318) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON END
    (319) case_statement -> . CASE case_index OF case_statement_completer SEMICOLON END
    (320) case_statement -> . CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END
    (321) case_statement -> . CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END
    (330) repeat_statement -> . REPEAT statement_sequence UNTIL boolean_expression
    (331) while_statement -> . WHILE boolean_expression DO statement
    (332) for_statement -> . FOR entire_variable iteration_clause DO statement
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (16) identifier -> . ID
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    UNSIGNEDNUMBER  shift and go to state 149
    END             reduce using rule 405 (empty -> .)
    SEMICOLON       reduce using rule 405 (empty -> .)
    UNTIL           reduce using rule 405 (empty -> .)
    ELSE            reduce using rule 405 (empty -> .)
    OTHERWISE       reduce using rule 405 (empty -> .)
    GOTO            shift and go to state 143
    BEGIN           shift and go to state 62
    WITH            shift and go to state 126
    IF              shift and go to state 148
    CASE            shift and go to state 127
    REPEAT          shift and go to state 142
    WHILE           shift and go to state 151
    FOR             shift and go to state 128
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    with_statement                 shift and go to state 121
    goto_statement                 shift and go to state 123
    variable_access                shift and go to state 124
    label                          shift and go to state 133
    compound_statement             shift and go to state 129
    field_designator               shift and go to state 130
    assignment_statement           shift and go to state 131
    procedure_statement            shift and go to state 132
    structured_statement           shift and go to state 125
    entire_variable                shift and go to state 134
    while_statement                shift and go to state 135
    statement                      shift and go to state 609
    pointer_variable               shift and go to state 137
    if_statement                   shift and go to state 138
    empty                          shift and go to state 139
    repeat_statement               shift and go to state 140
    for_statement                  shift and go to state 141
    simple_statement               shift and go to state 144
    repetitive_statement           shift and go to state 145
    case_statement                 shift and go to state 146
    conditional_statement          shift and go to state 147
    name                           shift and go to state 150
    component_variable             shift and go to state 152
    identifier                     shift and go to state 92
    substring_variable             shift and go to state 153

state 559

    (311) if_statement -> IF boolean_expression THEN statement else_part .

    END             reduce using rule 311 (if_statement -> IF boolean_expression THEN statement else_part .)
    SEMICOLON       reduce using rule 311 (if_statement -> IF boolean_expression THEN statement else_part .)
    OTHERWISE       reduce using rule 311 (if_statement -> IF boolean_expression THEN statement else_part .)
    UNTIL           reduce using rule 311 (if_statement -> IF boolean_expression THEN statement else_part .)
    ELSE            reduce using rule 311 (if_statement -> IF boolean_expression THEN statement else_part .)


state 560

    (53) actual_parameter_list_list -> actual_parameter_list_list COMMA actual_parameter .

    RPAREN          reduce using rule 53 (actual_parameter_list_list -> actual_parameter_list_list COMMA actual_parameter .)
    COMMA           reduce using rule 53 (actual_parameter_list_list -> actual_parameter_list_list COMMA actual_parameter .)


state 561

    (55) actual_parameter -> expression COLON expression .
    (56) actual_parameter -> expression COLON expression . COLON expression
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    RPAREN          reduce using rule 55 (actual_parameter -> expression COLON expression .)
    COMMA           reduce using rule 55 (actual_parameter -> expression COLON expression .)
    COLON           shift and go to state 610
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 562

    (379) export_renaming_clause -> exportable_name EG . identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 611

state 563

    (380) export_range -> first_constant_name DOTDOT . last_constant_name
    (382) last_constant_name -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    last_constant_name             shift and go to state 612
    name                           shift and go to state 613

state 564

    (378) exportable_name -> PROTECTED name .
    (48) name -> name . DOT identifier

    EG              reduce using rule 378 (exportable_name -> PROTECTED name .)
    RPAREN          reduce using rule 378 (exportable_name -> PROTECTED name .)
    COMMA           reduce using rule 378 (exportable_name -> PROTECTED name .)
    DOT             shift and go to state 189


state 565

    (370) export_part -> identifier EQUAL LPAREN export_list RPAREN .

    SEMICOLON       reduce using rule 370 (export_part -> identifier EQUAL LPAREN export_list RPAREN .)


state 566

    (373) export_list -> export_list COMMA . export_clause
    (374) export_list -> export_list COMMA . export_range
    (375) export_clause -> . exportable_name
    (376) export_clause -> . export_renaming_clause
    (380) export_range -> . first_constant_name DOTDOT last_constant_name
    (377) exportable_name -> . name
    (378) exportable_name -> . PROTECTED name
    (379) export_renaming_clause -> . exportable_name EG identifier
    (381) first_constant_name -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    PROTECTED       shift and go to state 488
    ID              shift and go to state 18

    identifier                     shift and go to state 92
    export_clause                  shift and go to state 614
    first_constant_name            shift and go to state 486
    export_renaming_clause         shift and go to state 487
    exportable_name                shift and go to state 484
    export_range                   shift and go to state 615
    name                           shift and go to state 491

state 567

    (350) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part . module_heading_middle_part END
    (354) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part . END
    (356) module_heading_middle_part -> . constant_definition_part
    (357) module_heading_middle_part -> . type_definition_part
    (358) module_heading_middle_part -> . variable_declaration_part
    (359) module_heading_middle_part -> . procedure_and_function_heading_part
    (360) module_heading_middle_part -> . module_heading_middle_part constant_definition_part
    (361) module_heading_middle_part -> . module_heading_middle_part type_definition_part
    (362) module_heading_middle_part -> . module_heading_middle_part variable_declaration_part
    (363) module_heading_middle_part -> . module_heading_middle_part procedure_and_function_heading_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (364) procedure_and_function_heading_part -> . procedure_heading SEMICOLON
    (365) procedure_and_function_heading_part -> . function_heading SEMICOLON
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type

    END             shift and go to state 617
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262

    constant_definition_part       shift and go to state 261
    type_definition_part           shift and go to state 264
    procedure_and_function_heading_part shift and go to state 267
    variable_declaration_part      shift and go to state 259
    function_heading               shift and go to state 266
    module_heading_middle_part     shift and go to state 616
    procedure_heading              shift and go to state 265

state 568

    (349) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part . END
    (360) module_heading_middle_part -> module_heading_middle_part . constant_definition_part
    (361) module_heading_middle_part -> module_heading_middle_part . type_definition_part
    (362) module_heading_middle_part -> module_heading_middle_part . variable_declaration_part
    (363) module_heading_middle_part -> module_heading_middle_part . procedure_and_function_heading_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (364) procedure_and_function_heading_part -> . procedure_heading SEMICOLON
    (365) procedure_and_function_heading_part -> . function_heading SEMICOLON
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type

    END             shift and go to state 618
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262

    constant_definition_part       shift and go to state 398
    type_definition_part           shift and go to state 400
    procedure_and_function_heading_part shift and go to state 401
    variable_declaration_part      shift and go to state 397
    function_heading               shift and go to state 266
    procedure_heading              shift and go to state 265

state 569

    (353) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END .

    SEMICOLON       reduce using rule 353 (module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END .)
    DOT             reduce using rule 353 (module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END .)


state 570

    (256) variable_parameter_specification -> PROTECTED VAR identifier_list COLON . parameter_form
    (279) variable_conformant_array_specification -> VAR identifier_list COLON . conformant_array_form
    (255) parameter_form -> . type_denoter_middle_part
    (271) conformant_array_form -> . packed_conformant_array_form
    (272) conformant_array_form -> . unpacked_conformant_array_form
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (273) packed_conformant_array_form -> . PACKED ARRAY LBRAC index_type_specification RBRAC OF name
    (275) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    PACKED          shift and go to state 502
    ARRAY           shift and go to state 503
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    unpacked_conformant_array_form shift and go to state 500
    field_designator               shift and go to state 130
    packed_conformant_array_form   shift and go to state 501
    indexed_variable               shift and go to state 120
    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 504
    parameter_form                 shift and go to state 619
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    conformant_array_form          shift and go to state 573
    term                           shift and go to state 238
    name                           shift and go to state 320
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 571

    (254) value_parameter_specification -> PROTECTED identifier_list COLON parameter_form .

    RPAREN          reduce using rule 254 (value_parameter_specification -> PROTECTED identifier_list COLON parameter_form .)
    SEMICOLON       reduce using rule 254 (value_parameter_specification -> PROTECTED identifier_list COLON parameter_form .)


state 572

    (257) variable_parameter_specification -> VAR identifier_list COLON parameter_form .

    RPAREN          reduce using rule 257 (variable_parameter_specification -> VAR identifier_list COLON parameter_form .)
    SEMICOLON       reduce using rule 257 (variable_parameter_specification -> VAR identifier_list COLON parameter_form .)


state 573

    (279) variable_conformant_array_specification -> VAR identifier_list COLON conformant_array_form .

    RPAREN          reduce using rule 279 (variable_conformant_array_specification -> VAR identifier_list COLON conformant_array_form .)
    SEMICOLON       reduce using rule 279 (variable_conformant_array_specification -> VAR identifier_list COLON conformant_array_form .)


state 574

    (273) packed_conformant_array_form -> PACKED ARRAY . LBRAC index_type_specification RBRAC OF name
    (2) array_type -> ARRAY . LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> ARRAY . OF component_type

    LBRAC           shift and go to state 620
    OF              shift and go to state 436


state 575

    (275) unpacked_conformant_array_form -> ARRAY LBRAC . index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> ARRAY LBRAC . index_type_specification_list RBRAC OF conformant_array_form
    (2) array_type -> ARRAY LBRAC . index_type_list RBRAC OF component_type
    (277) index_type_specification_list -> . index_type_specification
    (278) index_type_specification_list -> . index_type_specification_list SEMICOLON index_type_specification
    (4) index_type_list -> . index_type
    (5) index_type_list -> . index_type_list COMMA index_type
    (274) index_type_specification -> . identifier DOTDOT identifier COLON ordinal_type_name
    (6) index_type -> . ordinal_type
    (16) identifier -> . ID
    (7) ordinal_type -> . new_ordinal_type
    (8) ordinal_type -> . ordinal_type_name
    (9) ordinal_type -> . type_inquiry
    (10) ordinal_type -> . discriminated_schema
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (122) ordinal_type_name -> . name
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (18) subrange_bound -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    ID              shift and go to state 18
    TYPE            shift and go to state 326
    LPAREN          shift and go to state 318
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    indexed_variable               shift and go to state 120
    index_type_specification       shift and go to state 621
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 507
    discriminated_schema           shift and go to state 508
    simple_expression              shift and go to state 228
    index_type_list                shift and go to state 529
    type_inquiry                   shift and go to state 509
    entire_variable                shift and go to state 134
    index_type_specification_list  shift and go to state 622
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    index_type                     shift and go to state 530
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    subrange_type                  shift and go to state 314
    ordinal_type                   shift and go to state 511
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    name                           shift and go to state 512
    simple_expression_term         shift and go to state 241
    ordinal_type_name              shift and go to state 513
    set_constructor                shift and go to state 227
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 623
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 576

    (168) file_type -> FILE LBRAC index_type RBRAC . OF component_type

    OF              shift and go to state 624


state 577

    (153) variant_part -> CASE variant_selector OF . variant_list_element_list
    (154) variant_part -> CASE variant_selector OF . variant_list_element_list SEMICOLON variant_part_completer
    (155) variant_part -> CASE variant_selector OF . variant_list_element_list variant_part_completer
    (156) variant_part -> CASE variant_selector OF . variant_part_completer
    (157) variant_list_element_list -> . variant_list_element
    (158) variant_list_element_list -> . variant_list_element_list SEMICOLON variant_list_element
    (165) variant_part_completer -> . OTHERWISE variant_denoter
    (159) variant_list_element -> . member_designator_list COLON variant_denoter
    (65) member_designator_list -> . member_designator
    (66) member_designator_list -> . member_designator_list COMMA member_designator
    (67) member_designator -> . expression
    (68) member_designator -> . expression DOTDOT expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    OTHERWISE       shift and go to state 625
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    variant_part_completer         shift and go to state 626
    member_designator_list         shift and go to state 627
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    variant_list_element_list      shift and go to state 628
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    member_designator              shift and go to state 357
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    variant_list_element           shift and go to state 629
    expression                     shift and go to state 358
    substring_variable             shift and go to state 153

state 578

    (161) variant_selector -> tag_field COLON . tag_type
    (164) tag_type -> . ordinal_type_name
    (122) ordinal_type_name -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    ordinal_type_name              shift and go to state 520
    identifier                     shift and go to state 92
    name                           shift and go to state 519
    tag_type                       shift and go to state 630

state 579

    (145) field_list_left_part -> fixed_part SEMICOLON variant_part .

    END             reduce using rule 145 (field_list_left_part -> fixed_part SEMICOLON variant_part .)
    RPAREN          reduce using rule 145 (field_list_left_part -> fixed_part SEMICOLON variant_part .)


state 580

    (151) fixed_part -> fixed_part SEMICOLON record_section .

    SEMICOLON       reduce using rule 151 (fixed_part -> fixed_part SEMICOLON record_section .)
    RPAREN          reduce using rule 151 (fixed_part -> fixed_part SEMICOLON record_section .)
    END             reduce using rule 151 (fixed_part -> fixed_part SEMICOLON record_section .)


state 581

    (152) record_section -> identifier_list COLON type_denoter .

    SEMICOLON       reduce using rule 152 (record_section -> identifier_list COLON type_denoter .)
    END             reduce using rule 152 (record_section -> identifier_list COLON type_denoter .)
    RPAREN          reduce using rule 152 (record_section -> identifier_list COLON type_denoter .)


state 582

    (2) array_type -> ARRAY LBRAC index_type_list RBRAC . OF component_type

    OF              shift and go to state 631


state 583

    (5) index_type_list -> index_type_list COMMA . index_type
    (6) index_type -> . ordinal_type
    (7) ordinal_type -> . new_ordinal_type
    (8) ordinal_type -> . ordinal_type_name
    (9) ordinal_type -> . type_inquiry
    (10) ordinal_type -> . discriminated_schema
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (122) ordinal_type_name -> . name
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (18) subrange_bound -> . expression
    (16) identifier -> . ID
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    TYPE            shift and go to state 326
    LPAREN          shift and go to state 318
    ID              shift and go to state 18
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    discriminated_schema           shift and go to state 508
    simple_expression              shift and go to state 228
    type_inquiry                   shift and go to state 509
    entire_variable                shift and go to state 134
    field_designator               shift and go to state 130
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    index_type                     shift and go to state 632
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    subrange_type                  shift and go to state 314
    ordinal_type                   shift and go to state 511
    unsigned_constant              shift and go to state 234
    new_ordinal_type               shift and go to state 507
    term                           shift and go to state 238
    name                           shift and go to state 512
    simple_expression_term         shift and go to state 241
    ordinal_type_name              shift and go to state 513
    set_constructor                shift and go to state 227
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 584

    (75) array_value -> LBRAC array_value_completer . SEMICOLON RBRAC
    (76) array_value -> LBRAC array_value_completer . RBRAC

    SEMICOLON       shift and go to state 633
    RBRAC           shift and go to state 634


state 585

    (69) array_value -> LBRAC array_value_element_list . RBRAC
    (70) array_value -> LBRAC array_value_element_list . SEMICOLON array_value_completer RBRAC
    (71) array_value -> LBRAC array_value_element_list . SEMICOLON RBRAC
    (72) array_value -> LBRAC array_value_element_list . SEMICOLON array_value_completer SEMICOLON RBRAC
    (73) array_value -> LBRAC array_value_element_list . array_value_completer SEMICOLON RBRAC
    (74) array_value -> LBRAC array_value_element_list . array_value_completer RBRAC
    (78) array_value_element_list -> array_value_element_list . SEMICOLON array_value_element
    (79) array_value_completer -> . OTHERWISE component_value

    RBRAC           shift and go to state 636
    SEMICOLON       shift and go to state 635
    OTHERWISE       shift and go to state 586

    array_value_completer          shift and go to state 637

state 586

    (79) array_value_completer -> OTHERWISE . component_value
    (80) component_value -> . expression
    (81) component_value -> . array_value
    (82) component_value -> . record_value
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (69) array_value -> . LBRAC array_value_element_list RBRAC
    (70) array_value -> . LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC
    (71) array_value -> . LBRAC array_value_element_list SEMICOLON RBRAC
    (72) array_value -> . LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC
    (73) array_value -> . LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC
    (74) array_value -> . LBRAC array_value_element_list array_value_completer RBRAC
    (75) array_value -> . LBRAC array_value_completer SEMICOLON RBRAC
    (76) array_value -> . LBRAC array_value_completer RBRAC
    (83) record_value -> . LBRAC field_list_value RBRAC
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LBRAC           shift and go to state 534
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    array_value                    shift and go to state 532
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    component_value                shift and go to state 638
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    record_value                   shift and go to state 535
    expression                     shift and go to state 536
    substring_variable             shift and go to state 153

state 587

    (91) variant_part_value -> CASE . tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC
    (92) variant_part_value -> CASE . expression OF LBRAC field_list_value RBRAC
    (93) tag_field_identifier -> . identifier
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (16) identifier -> . ID
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    ID              shift and go to state 18
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    tag_field_identifier           shift and go to state 639
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 640
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 641
    substring_variable             shift and go to state 153

state 588

    (63) set_constructor -> LBRAC member_designator_list . RBRAC
    (66) member_designator_list -> member_designator_list . COMMA member_designator
    (98) array_value_element -> member_designator_list . COLON component_value

    RBRAC           shift and go to state 468
    COMMA           shift and go to state 467
    COLON           shift and go to state 642


state 589

    (90) field_list_value -> empty .

    RBRAC           reduce using rule 90 (field_list_value -> empty .)


state 590

    (83) record_value -> LBRAC field_list_value . RBRAC

    RBRAC           shift and go to state 643


state 591

    (97) field_value -> identifier_list . COLON component_value
    (15) identifier_list -> identifier_list . COMMA identifier

    COLON           shift and go to state 644
    COMMA           shift and go to state 168


state 592

    (77) array_value_element_list -> array_value_element .

    RBRAC           reduce using rule 77 (array_value_element_list -> array_value_element .)
    SEMICOLON       reduce using rule 77 (array_value_element_list -> array_value_element .)
    OTHERWISE       reduce using rule 77 (array_value_element_list -> array_value_element .)


state 593

    (86) field_list_value -> fixed_part_value .
    (87) field_list_value -> fixed_part_value . SEMICOLON
    (88) field_list_value -> fixed_part_value . SEMICOLON variant_part_value
    (89) field_list_value -> fixed_part_value . SEMICOLON variant_part_value SEMICOLON
    (96) fixed_part_value -> fixed_part_value . SEMICOLON field_value

    RBRAC           reduce using rule 86 (field_list_value -> fixed_part_value .)
    SEMICOLON       shift and go to state 645


state 594

    (84) field_list_value -> variant_part_value .
    (85) field_list_value -> variant_part_value . SEMICOLON

    RBRAC           reduce using rule 84 (field_list_value -> variant_part_value .)
    SEMICOLON       shift and go to state 646


state 595

    (95) fixed_part_value -> field_value .

    SEMICOLON       reduce using rule 95 (fixed_part_value -> field_value .)
    RBRAC           reduce using rule 95 (fixed_part_value -> field_value .)


state 596

    (120) actual_discriminant_part -> LPAREN actual_parameter_list RPAREN .

    RBRAC           reduce using rule 120 (actual_discriminant_part -> LPAREN actual_parameter_list RPAREN .)
    VALUE           reduce using rule 120 (actual_discriminant_part -> LPAREN actual_parameter_list RPAREN .)
    SEMICOLON       reduce using rule 120 (actual_discriminant_part -> LPAREN actual_parameter_list RPAREN .)
    RPAREN          reduce using rule 120 (actual_discriminant_part -> LPAREN actual_parameter_list RPAREN .)
    END             reduce using rule 120 (actual_discriminant_part -> LPAREN actual_parameter_list RPAREN .)
    COMMA           reduce using rule 120 (actual_discriminant_part -> LPAREN actual_parameter_list RPAREN .)


state 597

    (32) primary -> LPAREN expression . RPAREN
    (20) expression -> expression . relational_operator simple_expression
    (54) actual_parameter -> expression .
    (55) actual_parameter -> expression . COLON expression
    (56) actual_parameter -> expression . COLON expression COLON expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 466
    COMMA           reduce using rule 54 (actual_parameter -> expression .)
    COLON           shift and go to state 482
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

  ! RPAREN          [ reduce using rule 54 (actual_parameter -> expression .) ]

    relational_operator            shift and go to state 376

state 598

    (50) substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .

    LBRAC           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    UPARROW         reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    DOT             reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    STARSTAR        reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    POW             reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    STAR            reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    SLASH           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    DIV             reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    MOD             reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    AND             reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    AND_THEN        reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    PLUS            reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    MINUS           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    GL              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    OR              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    OR_ELSE         reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    EQUAL           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    LG              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    LT              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    GT              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    LE              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    GE              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    IN              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    END             reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    SEMICOLON       reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    UNTIL           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    ELSE            reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    OTHERWISE       reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    TO              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    DOWNTO          reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    OF              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    ASSIGNMENT      reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    DOTDOT          reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    RBRAC           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    COMMA           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    DO              reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    COLON           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    RPAREN          reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    VALUE           reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)
    THEN            reduce using rule 50 (substring_variable -> variable_access LBRAC index_expression DOTDOT index_expression RBRAC .)


state 599

    (324) case_list_element -> member_designator_list COLON statement .

    END             reduce using rule 324 (case_list_element -> member_designator_list COLON statement .)
    SEMICOLON       reduce using rule 324 (case_list_element -> member_designator_list COLON statement .)
    OTHERWISE       reduce using rule 324 (case_list_element -> member_designator_list COLON statement .)


state 600

    (319) case_statement -> CASE case_index OF case_statement_completer SEMICOLON END .

    SEMICOLON       reduce using rule 319 (case_statement -> CASE case_index OF case_statement_completer SEMICOLON END .)
    END             reduce using rule 319 (case_statement -> CASE case_index OF case_statement_completer SEMICOLON END .)
    UNTIL           reduce using rule 319 (case_statement -> CASE case_index OF case_statement_completer SEMICOLON END .)
    OTHERWISE       reduce using rule 319 (case_statement -> CASE case_index OF case_statement_completer SEMICOLON END .)
    ELSE            reduce using rule 319 (case_statement -> CASE case_index OF case_statement_completer SEMICOLON END .)


state 601

    (318) case_statement -> CASE case_index OF case_list_element_list SEMICOLON END .

    SEMICOLON       reduce using rule 318 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON END .)
    END             reduce using rule 318 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON END .)
    UNTIL           reduce using rule 318 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON END .)
    OTHERWISE       reduce using rule 318 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON END .)
    ELSE            reduce using rule 318 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON END .)


state 602

    (317) case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer . END
    (321) case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer . SEMICOLON END

    END             shift and go to state 647
    SEMICOLON       shift and go to state 648


state 603

    (323) case_list_element_list -> case_list_element_list SEMICOLON case_list_element .

    END             reduce using rule 323 (case_list_element_list -> case_list_element_list SEMICOLON case_list_element .)
    SEMICOLON       reduce using rule 323 (case_list_element_list -> case_list_element_list SEMICOLON case_list_element .)
    OTHERWISE       reduce using rule 323 (case_list_element_list -> case_list_element_list SEMICOLON case_list_element .)


state 604

    (316) case_statement -> CASE case_index OF case_list_element_list case_statement_completer END .

    SEMICOLON       reduce using rule 316 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer END .)
    END             reduce using rule 316 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer END .)
    UNTIL           reduce using rule 316 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer END .)
    OTHERWISE       reduce using rule 316 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer END .)
    ELSE            reduce using rule 316 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer END .)


state 605

    (320) case_statement -> CASE case_index OF case_list_element_list case_statement_completer SEMICOLON . END

    END             shift and go to state 649


state 606

    (336) sequence_iteration -> ASSIGNMENT initial_value DOWNTO final_value .

    DO              reduce using rule 336 (sequence_iteration -> ASSIGNMENT initial_value DOWNTO final_value .)


state 607

    (338) final_value -> expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    DO              reduce using rule 338 (final_value -> expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 608

    (335) sequence_iteration -> ASSIGNMENT initial_value TO final_value .

    DO              reduce using rule 335 (sequence_iteration -> ASSIGNMENT initial_value TO final_value .)


state 609

    (313) else_part -> ELSE statement .

    END             reduce using rule 313 (else_part -> ELSE statement .)
    SEMICOLON       reduce using rule 313 (else_part -> ELSE statement .)
    UNTIL           reduce using rule 313 (else_part -> ELSE statement .)
    ELSE            reduce using rule 313 (else_part -> ELSE statement .)
    OTHERWISE       reduce using rule 313 (else_part -> ELSE statement .)


state 610

    (56) actual_parameter -> expression COLON expression COLON . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 650
    substring_variable             shift and go to state 153

state 611

    (379) export_renaming_clause -> exportable_name EG identifier .

    RPAREN          reduce using rule 379 (export_renaming_clause -> exportable_name EG identifier .)
    COMMA           reduce using rule 379 (export_renaming_clause -> exportable_name EG identifier .)


state 612

    (380) export_range -> first_constant_name DOTDOT last_constant_name .

    RPAREN          reduce using rule 380 (export_range -> first_constant_name DOTDOT last_constant_name .)
    COMMA           reduce using rule 380 (export_range -> first_constant_name DOTDOT last_constant_name .)


state 613

    (382) last_constant_name -> name .
    (48) name -> name . DOT identifier

    RPAREN          reduce using rule 382 (last_constant_name -> name .)
    COMMA           reduce using rule 382 (last_constant_name -> name .)
    DOT             shift and go to state 189


state 614

    (373) export_list -> export_list COMMA export_clause .

    RPAREN          reduce using rule 373 (export_list -> export_list COMMA export_clause .)
    COMMA           reduce using rule 373 (export_list -> export_list COMMA export_clause .)


state 615

    (374) export_list -> export_list COMMA export_range .

    RPAREN          reduce using rule 374 (export_list -> export_list COMMA export_range .)
    COMMA           reduce using rule 374 (export_list -> export_list COMMA export_range .)


state 616

    (350) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part . END
    (360) module_heading_middle_part -> module_heading_middle_part . constant_definition_part
    (361) module_heading_middle_part -> module_heading_middle_part . type_definition_part
    (362) module_heading_middle_part -> module_heading_middle_part . variable_declaration_part
    (363) module_heading_middle_part -> module_heading_middle_part . procedure_and_function_heading_part
    (218) constant_definition_part -> . CONST constant_definition_list
    (222) type_definition_part -> . TYPE type_definition_list
    (233) variable_declaration_part -> . VAR variable_declaration_list
    (364) procedure_and_function_heading_part -> . procedure_heading SEMICOLON
    (365) procedure_and_function_heading_part -> . function_heading SEMICOLON
    (243) procedure_heading -> . PROCEDURE name formal_parameter_list
    (244) procedure_heading -> . PROCEDURE name
    (260) function_heading -> . FUNCTION identifier COLON result_type
    (261) function_heading -> . FUNCTION identifier formal_parameter_list result_variable_specification COLON result_type
    (262) function_heading -> . FUNCTION identifier formal_parameter_list COLON result_type
    (263) function_heading -> . FUNCTION identifier result_variable_specification COLON result_type

    END             shift and go to state 651
    CONST           shift and go to state 37
    TYPE            shift and go to state 54
    VAR             shift and go to state 45
    PROCEDURE       shift and go to state 46
    FUNCTION        shift and go to state 262

    constant_definition_part       shift and go to state 398
    type_definition_part           shift and go to state 400
    procedure_and_function_heading_part shift and go to state 401
    variable_declaration_part      shift and go to state 397
    function_heading               shift and go to state 266
    procedure_heading              shift and go to state 265

state 617

    (354) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END .

    SEMICOLON       reduce using rule 354 (module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END .)
    DOT             reduce using rule 354 (module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part END .)


state 618

    (349) module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END .

    SEMICOLON       reduce using rule 349 (module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END .)
    DOT             reduce using rule 349 (module_heading -> MODULE identifier LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END .)


state 619

    (256) variable_parameter_specification -> PROTECTED VAR identifier_list COLON parameter_form .

    RPAREN          reduce using rule 256 (variable_parameter_specification -> PROTECTED VAR identifier_list COLON parameter_form .)
    SEMICOLON       reduce using rule 256 (variable_parameter_specification -> PROTECTED VAR identifier_list COLON parameter_form .)


state 620

    (273) packed_conformant_array_form -> PACKED ARRAY LBRAC . index_type_specification RBRAC OF name
    (2) array_type -> ARRAY LBRAC . index_type_list RBRAC OF component_type
    (274) index_type_specification -> . identifier DOTDOT identifier COLON ordinal_type_name
    (4) index_type_list -> . index_type
    (5) index_type_list -> . index_type_list COMMA index_type
    (16) identifier -> . ID
    (6) index_type -> . ordinal_type
    (7) ordinal_type -> . new_ordinal_type
    (8) ordinal_type -> . ordinal_type_name
    (9) ordinal_type -> . type_inquiry
    (10) ordinal_type -> . discriminated_schema
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (122) ordinal_type_name -> . name
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (18) subrange_bound -> . expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    ID              shift and go to state 18
    TYPE            shift and go to state 326
    LPAREN          shift and go to state 318
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    indexed_variable               shift and go to state 120
    index_type_specification       shift and go to state 652
    new_ordinal_type               shift and go to state 507
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    discriminated_schema           shift and go to state 508
    simple_expression              shift and go to state 228
    index_type_list                shift and go to state 529
    type_inquiry                   shift and go to state 509
    entire_variable                shift and go to state 134
    field_designator               shift and go to state 130
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    index_type                     shift and go to state 530
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    subrange_type                  shift and go to state 314
    ordinal_type                   shift and go to state 511
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    name                           shift and go to state 512
    simple_expression_term         shift and go to state 241
    ordinal_type_name              shift and go to state 513
    set_constructor                shift and go to state 227
    subrange_bound                 shift and go to state 324
    identifier                     shift and go to state 623
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 621

    (277) index_type_specification_list -> index_type_specification .

    RBRAC           reduce using rule 277 (index_type_specification_list -> index_type_specification .)
    SEMICOLON       reduce using rule 277 (index_type_specification_list -> index_type_specification .)


state 622

    (275) unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list . RBRAC OF name
    (276) unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list . RBRAC OF conformant_array_form
    (278) index_type_specification_list -> index_type_specification_list . SEMICOLON index_type_specification

    RBRAC           shift and go to state 654
    SEMICOLON       shift and go to state 653


state 623

    (274) index_type_specification -> identifier . DOTDOT identifier COLON ordinal_type_name
    (47) name -> identifier .

  ! shift/reduce conflict for DOTDOT resolved as shift
    DOTDOT          shift and go to state 655
    DOT             reduce using rule 47 (name -> identifier .)
    LPAREN          reduce using rule 47 (name -> identifier .)
    RBRAC           reduce using rule 47 (name -> identifier .)
    COMMA           reduce using rule 47 (name -> identifier .)
    LBRAC           reduce using rule 47 (name -> identifier .)
    UPARROW         reduce using rule 47 (name -> identifier .)
    STARSTAR        reduce using rule 47 (name -> identifier .)
    POW             reduce using rule 47 (name -> identifier .)
    STAR            reduce using rule 47 (name -> identifier .)
    SLASH           reduce using rule 47 (name -> identifier .)
    DIV             reduce using rule 47 (name -> identifier .)
    MOD             reduce using rule 47 (name -> identifier .)
    AND             reduce using rule 47 (name -> identifier .)
    AND_THEN        reduce using rule 47 (name -> identifier .)
    PLUS            reduce using rule 47 (name -> identifier .)
    MINUS           reduce using rule 47 (name -> identifier .)
    GL              reduce using rule 47 (name -> identifier .)
    OR              reduce using rule 47 (name -> identifier .)
    OR_ELSE         reduce using rule 47 (name -> identifier .)
    EQUAL           reduce using rule 47 (name -> identifier .)
    LG              reduce using rule 47 (name -> identifier .)
    LT              reduce using rule 47 (name -> identifier .)
    GT              reduce using rule 47 (name -> identifier .)
    LE              reduce using rule 47 (name -> identifier .)
    GE              reduce using rule 47 (name -> identifier .)
    IN              reduce using rule 47 (name -> identifier .)

  ! DOTDOT          [ reduce using rule 47 (name -> identifier .) ]


state 624

    (168) file_type -> FILE LBRAC index_type RBRAC OF . component_type
    (123) component_type -> . type_denoter
    (124) type_denoter -> . type_denoter_middle_part
    (125) type_denoter -> . BINDABLE type_denoter_middle_part
    (126) type_denoter -> . type_denoter_middle_part initial_state_specifier
    (127) type_denoter -> . BINDABLE type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    BINDABLE        shift and go to state 310
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    type_denoter                   shift and go to state 514
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 315
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    component_type                 shift and go to state 656
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 625

    (165) variant_part_completer -> OTHERWISE . variant_denoter
    (160) variant_denoter -> . LPAREN field_list RPAREN

    LPAREN          shift and go to state 658

    variant_denoter                shift and go to state 657

state 626

    (156) variant_part -> CASE variant_selector OF variant_part_completer .

    END             reduce using rule 156 (variant_part -> CASE variant_selector OF variant_part_completer .)
    RPAREN          reduce using rule 156 (variant_part -> CASE variant_selector OF variant_part_completer .)
    SEMICOLON       reduce using rule 156 (variant_part -> CASE variant_selector OF variant_part_completer .)


state 627

    (159) variant_list_element -> member_designator_list . COLON variant_denoter
    (66) member_designator_list -> member_designator_list . COMMA member_designator

    COLON           shift and go to state 659
    COMMA           shift and go to state 467


state 628

    (153) variant_part -> CASE variant_selector OF variant_list_element_list .
    (154) variant_part -> CASE variant_selector OF variant_list_element_list . SEMICOLON variant_part_completer
    (155) variant_part -> CASE variant_selector OF variant_list_element_list . variant_part_completer
    (158) variant_list_element_list -> variant_list_element_list . SEMICOLON variant_list_element
    (165) variant_part_completer -> . OTHERWISE variant_denoter

  ! shift/reduce conflict for SEMICOLON resolved as shift
    END             reduce using rule 153 (variant_part -> CASE variant_selector OF variant_list_element_list .)
    RPAREN          reduce using rule 153 (variant_part -> CASE variant_selector OF variant_list_element_list .)
    SEMICOLON       shift and go to state 660
    OTHERWISE       shift and go to state 625

  ! SEMICOLON       [ reduce using rule 153 (variant_part -> CASE variant_selector OF variant_list_element_list .) ]

    variant_part_completer         shift and go to state 661

state 629

    (157) variant_list_element_list -> variant_list_element .

    SEMICOLON       reduce using rule 157 (variant_list_element_list -> variant_list_element .)
    OTHERWISE       reduce using rule 157 (variant_list_element_list -> variant_list_element .)
    END             reduce using rule 157 (variant_list_element_list -> variant_list_element .)
    RPAREN          reduce using rule 157 (variant_list_element_list -> variant_list_element .)


state 630

    (161) variant_selector -> tag_field COLON tag_type .

    OF              reduce using rule 161 (variant_selector -> tag_field COLON tag_type .)


state 631

    (2) array_type -> ARRAY LBRAC index_type_list RBRAC OF . component_type
    (123) component_type -> . type_denoter
    (124) type_denoter -> . type_denoter_middle_part
    (125) type_denoter -> . BINDABLE type_denoter_middle_part
    (126) type_denoter -> . type_denoter_middle_part initial_state_specifier
    (127) type_denoter -> . BINDABLE type_denoter_middle_part initial_state_specifier
    (128) type_denoter_middle_part -> . name
    (129) type_denoter_middle_part -> . new_type
    (130) type_denoter_middle_part -> . type_inquiry
    (131) type_denoter_middle_part -> . discriminated_schema
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (132) new_type -> . new_ordinal_type
    (133) new_type -> . new_structured_type
    (134) new_type -> . new_pointer_type
    (135) new_type -> . restricted_type
    (121) type_inquiry -> . TYPE OF name
    (119) discriminated_schema -> . name actual_discriminant_part
    (16) identifier -> . ID
    (11) new_ordinal_type -> . enumerated_type
    (12) new_ordinal_type -> . subrange_type
    (136) new_structured_type -> . unpacked_structured_type
    (137) new_structured_type -> . PACKED unpacked_structured_type
    (170) new_pointer_type -> . UPARROW domain_type
    (172) restricted_type -> . RESTRICTED name
    (13) enumerated_type -> . LPAREN identifier_list RPAREN
    (17) subrange_type -> . subrange_bound DOTDOT subrange_bound
    (138) unpacked_structured_type -> . array_type
    (139) unpacked_structured_type -> . record_type
    (140) unpacked_structured_type -> . set_type
    (141) unpacked_structured_type -> . file_type
    (18) subrange_bound -> . expression
    (2) array_type -> . ARRAY LBRAC index_type_list RBRAC OF component_type
    (3) array_type -> . ARRAY OF component_type
    (142) record_type -> . RECORD field_list END
    (166) set_type -> . SET OF base_type
    (168) file_type -> . FILE LBRAC index_type RBRAC OF component_type
    (169) file_type -> . FILE OF component_type
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier

    BINDABLE        shift and go to state 310
    TYPE            shift and go to state 326
    ID              shift and go to state 18
    PACKED          shift and go to state 309
    UPARROW         shift and go to state 316
    RESTRICTED      shift and go to state 325
    LPAREN          shift and go to state 318
    ARRAY           shift and go to state 311
    RECORD          shift and go to state 307
    SET             shift and go to state 304
    FILE            shift and go to state 303
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237

    file_type                      shift and go to state 298
    sign                           shift and go to state 226
    primary                        shift and go to state 225
    new_ordinal_type               shift and go to state 299
    new_structured_type            shift and go to state 300
    new_type                       shift and go to state 301
    discriminated_schema           shift and go to state 302
    simple_expression              shift and go to state 228
    simple_expression_term         shift and go to state 241
    indexed_variable               shift and go to state 120
    type_inquiry                   shift and go to state 305
    entire_variable                shift and go to state 134
    restricted_type                shift and go to state 306
    component_variable             shift and go to state 152
    variable_access                shift and go to state 231
    enumerated_type                shift and go to state 308
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unpacked_structured_type       shift and go to state 312
    type_denoter                   shift and go to state 514
    subrange_type                  shift and go to state 314
    type_denoter_middle_part       shift and go to state 315
    unsigned_constant              shift and go to state 234
    set_type                       shift and go to state 317
    array_type                     shift and go to state 319
    term                           shift and go to state 238
    name                           shift and go to state 320
    component_type                 shift and go to state 662
    record_type                    shift and go to state 321
    set_constructor                shift and go to state 227
    new_pointer_type               shift and go to state 322
    subrange_bound                 shift and go to state 324
    field_designator               shift and go to state 130
    identifier                     shift and go to state 92
    expression                     shift and go to state 323
    substring_variable             shift and go to state 153

state 632

    (5) index_type_list -> index_type_list COMMA index_type .

    RBRAC           reduce using rule 5 (index_type_list -> index_type_list COMMA index_type .)
    COMMA           reduce using rule 5 (index_type_list -> index_type_list COMMA index_type .)


state 633

    (75) array_value -> LBRAC array_value_completer SEMICOLON . RBRAC

    RBRAC           shift and go to state 663


state 634

    (76) array_value -> LBRAC array_value_completer RBRAC .

    SEMICOLON       reduce using rule 76 (array_value -> LBRAC array_value_completer RBRAC .)
    RBRAC           reduce using rule 76 (array_value -> LBRAC array_value_completer RBRAC .)
    VALUE           reduce using rule 76 (array_value -> LBRAC array_value_completer RBRAC .)
    RPAREN          reduce using rule 76 (array_value -> LBRAC array_value_completer RBRAC .)
    END             reduce using rule 76 (array_value -> LBRAC array_value_completer RBRAC .)
    OTHERWISE       reduce using rule 76 (array_value -> LBRAC array_value_completer RBRAC .)


state 635

    (70) array_value -> LBRAC array_value_element_list SEMICOLON . array_value_completer RBRAC
    (71) array_value -> LBRAC array_value_element_list SEMICOLON . RBRAC
    (72) array_value -> LBRAC array_value_element_list SEMICOLON . array_value_completer SEMICOLON RBRAC
    (78) array_value_element_list -> array_value_element_list SEMICOLON . array_value_element
    (79) array_value_completer -> . OTHERWISE component_value
    (98) array_value_element -> . member_designator_list COLON component_value
    (65) member_designator_list -> . member_designator
    (66) member_designator_list -> . member_designator_list COMMA member_designator
    (67) member_designator -> . expression
    (68) member_designator -> . expression DOTDOT expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    RBRAC           shift and go to state 664
    OTHERWISE       shift and go to state 586
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    array_value_completer          shift and go to state 665
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    member_designator_list         shift and go to state 666
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    member_designator              shift and go to state 357
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    identifier                     shift and go to state 92
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    array_value_element            shift and go to state 667
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 358
    substring_variable             shift and go to state 153

state 636

    (69) array_value -> LBRAC array_value_element_list RBRAC .

    SEMICOLON       reduce using rule 69 (array_value -> LBRAC array_value_element_list RBRAC .)
    RBRAC           reduce using rule 69 (array_value -> LBRAC array_value_element_list RBRAC .)
    VALUE           reduce using rule 69 (array_value -> LBRAC array_value_element_list RBRAC .)
    RPAREN          reduce using rule 69 (array_value -> LBRAC array_value_element_list RBRAC .)
    END             reduce using rule 69 (array_value -> LBRAC array_value_element_list RBRAC .)
    OTHERWISE       reduce using rule 69 (array_value -> LBRAC array_value_element_list RBRAC .)


state 637

    (73) array_value -> LBRAC array_value_element_list array_value_completer . SEMICOLON RBRAC
    (74) array_value -> LBRAC array_value_element_list array_value_completer . RBRAC

    SEMICOLON       shift and go to state 668
    RBRAC           shift and go to state 669


state 638

    (79) array_value_completer -> OTHERWISE component_value .

    SEMICOLON       reduce using rule 79 (array_value_completer -> OTHERWISE component_value .)
    RBRAC           reduce using rule 79 (array_value_completer -> OTHERWISE component_value .)


state 639

    (91) variant_part_value -> CASE tag_field_identifier . COLON expression OF LBRAC field_list_value RBRAC

    COLON           shift and go to state 670


state 640

    (93) tag_field_identifier -> identifier .
    (47) name -> identifier .

    COLON           reduce using rule 93 (tag_field_identifier -> identifier .)
    DOT             reduce using rule 47 (name -> identifier .)
    LPAREN          reduce using rule 47 (name -> identifier .)
    LBRAC           reduce using rule 47 (name -> identifier .)
    UPARROW         reduce using rule 47 (name -> identifier .)
    STARSTAR        reduce using rule 47 (name -> identifier .)
    POW             reduce using rule 47 (name -> identifier .)
    STAR            reduce using rule 47 (name -> identifier .)
    SLASH           reduce using rule 47 (name -> identifier .)
    DIV             reduce using rule 47 (name -> identifier .)
    MOD             reduce using rule 47 (name -> identifier .)
    AND             reduce using rule 47 (name -> identifier .)
    AND_THEN        reduce using rule 47 (name -> identifier .)
    PLUS            reduce using rule 47 (name -> identifier .)
    MINUS           reduce using rule 47 (name -> identifier .)
    GL              reduce using rule 47 (name -> identifier .)
    OR              reduce using rule 47 (name -> identifier .)
    OR_ELSE         reduce using rule 47 (name -> identifier .)
    OF              reduce using rule 47 (name -> identifier .)
    EQUAL           reduce using rule 47 (name -> identifier .)
    LG              reduce using rule 47 (name -> identifier .)
    LT              reduce using rule 47 (name -> identifier .)
    GT              reduce using rule 47 (name -> identifier .)
    LE              reduce using rule 47 (name -> identifier .)
    GE              reduce using rule 47 (name -> identifier .)
    IN              reduce using rule 47 (name -> identifier .)


state 641

    (92) variant_part_value -> CASE expression . OF LBRAC field_list_value RBRAC
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    OF              shift and go to state 671
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 642

    (98) array_value_element -> member_designator_list COLON . component_value
    (80) component_value -> . expression
    (81) component_value -> . array_value
    (82) component_value -> . record_value
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (69) array_value -> . LBRAC array_value_element_list RBRAC
    (70) array_value -> . LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC
    (71) array_value -> . LBRAC array_value_element_list SEMICOLON RBRAC
    (72) array_value -> . LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC
    (73) array_value -> . LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC
    (74) array_value -> . LBRAC array_value_element_list array_value_completer RBRAC
    (75) array_value -> . LBRAC array_value_completer SEMICOLON RBRAC
    (76) array_value -> . LBRAC array_value_completer RBRAC
    (83) record_value -> . LBRAC field_list_value RBRAC
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LBRAC           shift and go to state 534
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    array_value                    shift and go to state 532
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    component_value                shift and go to state 672
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    record_value                   shift and go to state 535
    expression                     shift and go to state 536
    substring_variable             shift and go to state 153

state 643

    (83) record_value -> LBRAC field_list_value RBRAC .

    SEMICOLON       reduce using rule 83 (record_value -> LBRAC field_list_value RBRAC .)
    VALUE           reduce using rule 83 (record_value -> LBRAC field_list_value RBRAC .)
    RPAREN          reduce using rule 83 (record_value -> LBRAC field_list_value RBRAC .)
    END             reduce using rule 83 (record_value -> LBRAC field_list_value RBRAC .)
    RBRAC           reduce using rule 83 (record_value -> LBRAC field_list_value RBRAC .)
    OTHERWISE       reduce using rule 83 (record_value -> LBRAC field_list_value RBRAC .)


state 644

    (97) field_value -> identifier_list COLON . component_value
    (80) component_value -> . expression
    (81) component_value -> . array_value
    (82) component_value -> . record_value
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (69) array_value -> . LBRAC array_value_element_list RBRAC
    (70) array_value -> . LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC
    (71) array_value -> . LBRAC array_value_element_list SEMICOLON RBRAC
    (72) array_value -> . LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC
    (73) array_value -> . LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC
    (74) array_value -> . LBRAC array_value_element_list array_value_completer RBRAC
    (75) array_value -> . LBRAC array_value_completer SEMICOLON RBRAC
    (76) array_value -> . LBRAC array_value_completer RBRAC
    (83) record_value -> . LBRAC field_list_value RBRAC
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    LBRAC           shift and go to state 534
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    array_value                    shift and go to state 532
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    component_value                shift and go to state 673
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    record_value                   shift and go to state 535
    expression                     shift and go to state 536
    substring_variable             shift and go to state 153

state 645

    (87) field_list_value -> fixed_part_value SEMICOLON .
    (88) field_list_value -> fixed_part_value SEMICOLON . variant_part_value
    (89) field_list_value -> fixed_part_value SEMICOLON . variant_part_value SEMICOLON
    (96) fixed_part_value -> fixed_part_value SEMICOLON . field_value
    (91) variant_part_value -> . CASE tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC
    (92) variant_part_value -> . CASE expression OF LBRAC field_list_value RBRAC
    (97) field_value -> . identifier_list COLON component_value
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    RBRAC           reduce using rule 87 (field_list_value -> fixed_part_value SEMICOLON .)
    CASE            shift and go to state 587
    ID              shift and go to state 18

    identifier                     shift and go to state 76
    field_value                    shift and go to state 675
    identifier_list                shift and go to state 591
    variant_part_value             shift and go to state 674

state 646

    (85) field_list_value -> variant_part_value SEMICOLON .

    RBRAC           reduce using rule 85 (field_list_value -> variant_part_value SEMICOLON .)


state 647

    (317) case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END .

    SEMICOLON       reduce using rule 317 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END .)
    END             reduce using rule 317 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END .)
    UNTIL           reduce using rule 317 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END .)
    OTHERWISE       reduce using rule 317 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END .)
    ELSE            reduce using rule 317 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer END .)


state 648

    (321) case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON . END

    END             shift and go to state 676


state 649

    (320) case_statement -> CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END .

    SEMICOLON       reduce using rule 320 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END .)
    END             reduce using rule 320 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END .)
    UNTIL           reduce using rule 320 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END .)
    OTHERWISE       reduce using rule 320 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END .)
    ELSE            reduce using rule 320 (case_statement -> CASE case_index OF case_list_element_list case_statement_completer SEMICOLON END .)


state 650

    (56) actual_parameter -> expression COLON expression COLON expression .
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    RPAREN          reduce using rule 56 (actual_parameter -> expression COLON expression COLON expression .)
    COMMA           reduce using rule 56 (actual_parameter -> expression COLON expression COLON expression .)
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 651

    (350) module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END .

    SEMICOLON       reduce using rule 350 (module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END .)
    DOT             reduce using rule 350 (module_heading -> MODULE identifier interface_directive LPAREN module_parameter_list RPAREN SEMICOLON interface_specification_part import_part module_heading_middle_part END .)


state 652

    (273) packed_conformant_array_form -> PACKED ARRAY LBRAC index_type_specification . RBRAC OF name

    RBRAC           shift and go to state 677


state 653

    (278) index_type_specification_list -> index_type_specification_list SEMICOLON . index_type_specification
    (274) index_type_specification -> . identifier DOTDOT identifier COLON ordinal_type_name
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 679
    index_type_specification       shift and go to state 678

state 654

    (275) unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC . OF name
    (276) unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC . OF conformant_array_form

    OF              shift and go to state 680


state 655

    (274) index_type_specification -> identifier DOTDOT . identifier COLON ordinal_type_name
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 681

state 656

    (168) file_type -> FILE LBRAC index_type RBRAC OF component_type .

    RPAREN          reduce using rule 168 (file_type -> FILE LBRAC index_type RBRAC OF component_type .)
    SEMICOLON       reduce using rule 168 (file_type -> FILE LBRAC index_type RBRAC OF component_type .)
    VALUE           reduce using rule 168 (file_type -> FILE LBRAC index_type RBRAC OF component_type .)
    END             reduce using rule 168 (file_type -> FILE LBRAC index_type RBRAC OF component_type .)


state 657

    (165) variant_part_completer -> OTHERWISE variant_denoter .

    SEMICOLON       reduce using rule 165 (variant_part_completer -> OTHERWISE variant_denoter .)
    END             reduce using rule 165 (variant_part_completer -> OTHERWISE variant_denoter .)
    RPAREN          reduce using rule 165 (variant_part_completer -> OTHERWISE variant_denoter .)


state 658

    (160) variant_denoter -> LPAREN . field_list RPAREN
    (143) field_list -> . field_list_left_part
    (144) field_list -> . empty
    (145) field_list_left_part -> . fixed_part SEMICOLON variant_part
    (146) field_list_left_part -> . fixed_part
    (147) field_list_left_part -> . fixed_part SEMICOLON
    (148) field_list_left_part -> . variant_part
    (149) field_list_left_part -> . variant_part SEMICOLON
    (405) empty -> .
    (150) fixed_part -> . record_section
    (151) fixed_part -> . fixed_part SEMICOLON record_section
    (153) variant_part -> . CASE variant_selector OF variant_list_element_list
    (154) variant_part -> . CASE variant_selector OF variant_list_element_list SEMICOLON variant_part_completer
    (155) variant_part -> . CASE variant_selector OF variant_list_element_list variant_part_completer
    (156) variant_part -> . CASE variant_selector OF variant_part_completer
    (152) record_section -> . identifier_list COLON type_denoter
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    RPAREN          reduce using rule 405 (empty -> .)
    CASE            shift and go to state 425
    ID              shift and go to state 18

    identifier                     shift and go to state 76
    record_section                 shift and go to state 426
    fixed_part                     shift and go to state 427
    variant_part                   shift and go to state 428
    field_list_left_part           shift and go to state 429
    identifier_list                shift and go to state 430
    field_list                     shift and go to state 682
    empty                          shift and go to state 432

state 659

    (159) variant_list_element -> member_designator_list COLON . variant_denoter
    (160) variant_denoter -> . LPAREN field_list RPAREN

    LPAREN          shift and go to state 658

    variant_denoter                shift and go to state 683

state 660

    (154) variant_part -> CASE variant_selector OF variant_list_element_list SEMICOLON . variant_part_completer
    (158) variant_list_element_list -> variant_list_element_list SEMICOLON . variant_list_element
    (165) variant_part_completer -> . OTHERWISE variant_denoter
    (159) variant_list_element -> . member_designator_list COLON variant_denoter
    (65) member_designator_list -> . member_designator
    (66) member_designator_list -> . member_designator_list COMMA member_designator
    (67) member_designator -> . expression
    (68) member_designator -> . expression DOTDOT expression
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    OTHERWISE       shift and go to state 625
    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    variant_part_completer         shift and go to state 684
    member_designator_list         shift and go to state 627
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    member_designator              shift and go to state 357
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    variant_list_element           shift and go to state 685
    expression                     shift and go to state 358
    substring_variable             shift and go to state 153

state 661

    (155) variant_part -> CASE variant_selector OF variant_list_element_list variant_part_completer .

    END             reduce using rule 155 (variant_part -> CASE variant_selector OF variant_list_element_list variant_part_completer .)
    RPAREN          reduce using rule 155 (variant_part -> CASE variant_selector OF variant_list_element_list variant_part_completer .)
    SEMICOLON       reduce using rule 155 (variant_part -> CASE variant_selector OF variant_list_element_list variant_part_completer .)


state 662

    (2) array_type -> ARRAY LBRAC index_type_list RBRAC OF component_type .

    VALUE           reduce using rule 2 (array_type -> ARRAY LBRAC index_type_list RBRAC OF component_type .)
    SEMICOLON       reduce using rule 2 (array_type -> ARRAY LBRAC index_type_list RBRAC OF component_type .)
    RPAREN          reduce using rule 2 (array_type -> ARRAY LBRAC index_type_list RBRAC OF component_type .)
    END             reduce using rule 2 (array_type -> ARRAY LBRAC index_type_list RBRAC OF component_type .)


state 663

    (75) array_value -> LBRAC array_value_completer SEMICOLON RBRAC .

    SEMICOLON       reduce using rule 75 (array_value -> LBRAC array_value_completer SEMICOLON RBRAC .)
    RBRAC           reduce using rule 75 (array_value -> LBRAC array_value_completer SEMICOLON RBRAC .)
    VALUE           reduce using rule 75 (array_value -> LBRAC array_value_completer SEMICOLON RBRAC .)
    RPAREN          reduce using rule 75 (array_value -> LBRAC array_value_completer SEMICOLON RBRAC .)
    END             reduce using rule 75 (array_value -> LBRAC array_value_completer SEMICOLON RBRAC .)
    OTHERWISE       reduce using rule 75 (array_value -> LBRAC array_value_completer SEMICOLON RBRAC .)


state 664

    (71) array_value -> LBRAC array_value_element_list SEMICOLON RBRAC .

    SEMICOLON       reduce using rule 71 (array_value -> LBRAC array_value_element_list SEMICOLON RBRAC .)
    RBRAC           reduce using rule 71 (array_value -> LBRAC array_value_element_list SEMICOLON RBRAC .)
    VALUE           reduce using rule 71 (array_value -> LBRAC array_value_element_list SEMICOLON RBRAC .)
    RPAREN          reduce using rule 71 (array_value -> LBRAC array_value_element_list SEMICOLON RBRAC .)
    END             reduce using rule 71 (array_value -> LBRAC array_value_element_list SEMICOLON RBRAC .)
    OTHERWISE       reduce using rule 71 (array_value -> LBRAC array_value_element_list SEMICOLON RBRAC .)


state 665

    (70) array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer . RBRAC
    (72) array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer . SEMICOLON RBRAC

    RBRAC           shift and go to state 687
    SEMICOLON       shift and go to state 686


state 666

    (98) array_value_element -> member_designator_list . COLON component_value
    (66) member_designator_list -> member_designator_list . COMMA member_designator

    COLON           shift and go to state 642
    COMMA           shift and go to state 467


state 667

    (78) array_value_element_list -> array_value_element_list SEMICOLON array_value_element .

    RBRAC           reduce using rule 78 (array_value_element_list -> array_value_element_list SEMICOLON array_value_element .)
    SEMICOLON       reduce using rule 78 (array_value_element_list -> array_value_element_list SEMICOLON array_value_element .)
    OTHERWISE       reduce using rule 78 (array_value_element_list -> array_value_element_list SEMICOLON array_value_element .)


state 668

    (73) array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON . RBRAC

    RBRAC           shift and go to state 688


state 669

    (74) array_value -> LBRAC array_value_element_list array_value_completer RBRAC .

    SEMICOLON       reduce using rule 74 (array_value -> LBRAC array_value_element_list array_value_completer RBRAC .)
    RBRAC           reduce using rule 74 (array_value -> LBRAC array_value_element_list array_value_completer RBRAC .)
    VALUE           reduce using rule 74 (array_value -> LBRAC array_value_element_list array_value_completer RBRAC .)
    RPAREN          reduce using rule 74 (array_value -> LBRAC array_value_element_list array_value_completer RBRAC .)
    END             reduce using rule 74 (array_value -> LBRAC array_value_element_list array_value_completer RBRAC .)
    OTHERWISE       reduce using rule 74 (array_value -> LBRAC array_value_element_list array_value_completer RBRAC .)


state 670

    (91) variant_part_value -> CASE tag_field_identifier COLON . expression OF LBRAC field_list_value RBRAC
    (19) expression -> . simple_expression
    (20) expression -> . expression relational_operator simple_expression
    (21) simple_expression -> . simple_expression_term
    (22) simple_expression -> . sign simple_expression_term
    (23) simple_expression_term -> . term
    (24) simple_expression_term -> . simple_expression_term adding_operator term
    (61) sign -> . PLUS
    (62) sign -> . MINUS
    (25) term -> . factor
    (26) term -> . term multiplying_operator factor
    (27) factor -> . primary
    (28) factor -> . primary exponentiating_operator primary
    (29) primary -> . variable_access
    (30) primary -> . unsigned_constant
    (31) primary -> . set_constructor
    (32) primary -> . LPAREN expression RPAREN
    (33) primary -> . NOT primary
    (34) variable_access -> . entire_variable
    (35) variable_access -> . component_variable
    (36) variable_access -> . substring_variable
    (37) variable_access -> . pointer_variable
    (57) unsigned_constant -> . UNSIGNEDNUMBER
    (58) unsigned_constant -> . CHARACTER_STRING
    (59) unsigned_constant -> . NIL
    (60) unsigned_constant -> . EXTENDEDNUMBER
    (63) set_constructor -> . LBRAC member_designator_list RBRAC
    (64) set_constructor -> . LBRAC RBRAC
    (38) entire_variable -> . name
    (39) entire_variable -> . name actual_parameter_list
    (40) component_variable -> . indexed_variable
    (41) component_variable -> . field_designator
    (50) substring_variable -> . variable_access LBRAC index_expression DOTDOT index_expression RBRAC
    (49) pointer_variable -> . variable_access UPARROW
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (42) indexed_variable -> . variable_access LBRAC index_expression_list RBRAC
    (46) field_designator -> . variable_access DOT identifier
    (16) identifier -> . ID

    PLUS            shift and go to state 232
    MINUS           shift and go to state 229
    LPAREN          shift and go to state 236
    NOT             shift and go to state 242
    UNSIGNEDNUMBER  shift and go to state 239
    CHARACTER_STRING shift and go to state 230
    NIL             shift and go to state 240
    EXTENDEDNUMBER  shift and go to state 243
    LBRAC           shift and go to state 237
    ID              shift and go to state 18

    indexed_variable               shift and go to state 120
    primary                        shift and go to state 225
    sign                           shift and go to state 226
    set_constructor                shift and go to state 227
    simple_expression              shift and go to state 228
    field_designator               shift and go to state 130
    variable_access                shift and go to state 231
    entire_variable                shift and go to state 134
    component_variable             shift and go to state 152
    factor                         shift and go to state 233
    pointer_variable               shift and go to state 137
    unsigned_constant              shift and go to state 234
    term                           shift and go to state 238
    identifier                     shift and go to state 92
    name                           shift and go to state 224
    simple_expression_term         shift and go to state 241
    expression                     shift and go to state 689
    substring_variable             shift and go to state 153

state 671

    (92) variant_part_value -> CASE expression OF . LBRAC field_list_value RBRAC

    LBRAC           shift and go to state 690


state 672

    (98) array_value_element -> member_designator_list COLON component_value .

    RBRAC           reduce using rule 98 (array_value_element -> member_designator_list COLON component_value .)
    SEMICOLON       reduce using rule 98 (array_value_element -> member_designator_list COLON component_value .)
    OTHERWISE       reduce using rule 98 (array_value_element -> member_designator_list COLON component_value .)


state 673

    (97) field_value -> identifier_list COLON component_value .

    SEMICOLON       reduce using rule 97 (field_value -> identifier_list COLON component_value .)
    RBRAC           reduce using rule 97 (field_value -> identifier_list COLON component_value .)


state 674

    (88) field_list_value -> fixed_part_value SEMICOLON variant_part_value .
    (89) field_list_value -> fixed_part_value SEMICOLON variant_part_value . SEMICOLON

    RBRAC           reduce using rule 88 (field_list_value -> fixed_part_value SEMICOLON variant_part_value .)
    SEMICOLON       shift and go to state 691


state 675

    (96) fixed_part_value -> fixed_part_value SEMICOLON field_value .

    SEMICOLON       reduce using rule 96 (fixed_part_value -> fixed_part_value SEMICOLON field_value .)
    RBRAC           reduce using rule 96 (fixed_part_value -> fixed_part_value SEMICOLON field_value .)


state 676

    (321) case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END .

    SEMICOLON       reduce using rule 321 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END .)
    END             reduce using rule 321 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END .)
    UNTIL           reduce using rule 321 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END .)
    OTHERWISE       reduce using rule 321 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END .)
    ELSE            reduce using rule 321 (case_statement -> CASE case_index OF case_list_element_list SEMICOLON case_statement_completer SEMICOLON END .)


state 677

    (273) packed_conformant_array_form -> PACKED ARRAY LBRAC index_type_specification RBRAC . OF name

    OF              shift and go to state 692


state 678

    (278) index_type_specification_list -> index_type_specification_list SEMICOLON index_type_specification .

    RBRAC           reduce using rule 278 (index_type_specification_list -> index_type_specification_list SEMICOLON index_type_specification .)
    SEMICOLON       reduce using rule 278 (index_type_specification_list -> index_type_specification_list SEMICOLON index_type_specification .)


state 679

    (274) index_type_specification -> identifier . DOTDOT identifier COLON ordinal_type_name

    DOTDOT          shift and go to state 655


state 680

    (275) unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF . name
    (276) unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF . conformant_array_form
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (271) conformant_array_form -> . packed_conformant_array_form
    (272) conformant_array_form -> . unpacked_conformant_array_form
    (16) identifier -> . ID
    (273) packed_conformant_array_form -> . PACKED ARRAY LBRAC index_type_specification RBRAC OF name
    (275) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> . ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form

    ID              shift and go to state 18
    PACKED          shift and go to state 694
    ARRAY           shift and go to state 696

    unpacked_conformant_array_form shift and go to state 500
    packed_conformant_array_form   shift and go to state 501
    conformant_array_form          shift and go to state 695
    identifier                     shift and go to state 92
    name                           shift and go to state 693

state 681

    (274) index_type_specification -> identifier DOTDOT identifier . COLON ordinal_type_name

    COLON           shift and go to state 697


state 682

    (160) variant_denoter -> LPAREN field_list . RPAREN

    RPAREN          shift and go to state 698


state 683

    (159) variant_list_element -> member_designator_list COLON variant_denoter .

    SEMICOLON       reduce using rule 159 (variant_list_element -> member_designator_list COLON variant_denoter .)
    OTHERWISE       reduce using rule 159 (variant_list_element -> member_designator_list COLON variant_denoter .)
    END             reduce using rule 159 (variant_list_element -> member_designator_list COLON variant_denoter .)
    RPAREN          reduce using rule 159 (variant_list_element -> member_designator_list COLON variant_denoter .)


state 684

    (154) variant_part -> CASE variant_selector OF variant_list_element_list SEMICOLON variant_part_completer .

    END             reduce using rule 154 (variant_part -> CASE variant_selector OF variant_list_element_list SEMICOLON variant_part_completer .)
    RPAREN          reduce using rule 154 (variant_part -> CASE variant_selector OF variant_list_element_list SEMICOLON variant_part_completer .)
    SEMICOLON       reduce using rule 154 (variant_part -> CASE variant_selector OF variant_list_element_list SEMICOLON variant_part_completer .)


state 685

    (158) variant_list_element_list -> variant_list_element_list SEMICOLON variant_list_element .

    SEMICOLON       reduce using rule 158 (variant_list_element_list -> variant_list_element_list SEMICOLON variant_list_element .)
    OTHERWISE       reduce using rule 158 (variant_list_element_list -> variant_list_element_list SEMICOLON variant_list_element .)
    END             reduce using rule 158 (variant_list_element_list -> variant_list_element_list SEMICOLON variant_list_element .)
    RPAREN          reduce using rule 158 (variant_list_element_list -> variant_list_element_list SEMICOLON variant_list_element .)


state 686

    (72) array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON . RBRAC

    RBRAC           shift and go to state 699


state 687

    (70) array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC .

    SEMICOLON       reduce using rule 70 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC .)
    RBRAC           reduce using rule 70 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC .)
    VALUE           reduce using rule 70 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC .)
    RPAREN          reduce using rule 70 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC .)
    END             reduce using rule 70 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC .)
    OTHERWISE       reduce using rule 70 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer RBRAC .)


state 688

    (73) array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC .

    SEMICOLON       reduce using rule 73 (array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC .)
    RBRAC           reduce using rule 73 (array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC .)
    VALUE           reduce using rule 73 (array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC .)
    RPAREN          reduce using rule 73 (array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC .)
    END             reduce using rule 73 (array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC .)
    OTHERWISE       reduce using rule 73 (array_value -> LBRAC array_value_element_list array_value_completer SEMICOLON RBRAC .)


state 689

    (91) variant_part_value -> CASE tag_field_identifier COLON expression . OF LBRAC field_list_value RBRAC
    (20) expression -> expression . relational_operator simple_expression
    (112) relational_operator -> . EQUAL
    (113) relational_operator -> . LG
    (114) relational_operator -> . LT
    (115) relational_operator -> . GT
    (116) relational_operator -> . LE
    (117) relational_operator -> . GE
    (118) relational_operator -> . IN

    OF              shift and go to state 700
    EQUAL           shift and go to state 377
    LG              shift and go to state 373
    LT              shift and go to state 378
    GT              shift and go to state 374
    LE              shift and go to state 379
    GE              shift and go to state 375
    IN              shift and go to state 380

    relational_operator            shift and go to state 376

state 690

    (92) variant_part_value -> CASE expression OF LBRAC . field_list_value RBRAC
    (84) field_list_value -> . variant_part_value
    (85) field_list_value -> . variant_part_value SEMICOLON
    (86) field_list_value -> . fixed_part_value
    (87) field_list_value -> . fixed_part_value SEMICOLON
    (88) field_list_value -> . fixed_part_value SEMICOLON variant_part_value
    (89) field_list_value -> . fixed_part_value SEMICOLON variant_part_value SEMICOLON
    (90) field_list_value -> . empty
    (91) variant_part_value -> . CASE tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC
    (92) variant_part_value -> . CASE expression OF LBRAC field_list_value RBRAC
    (95) fixed_part_value -> . field_value
    (96) fixed_part_value -> . fixed_part_value SEMICOLON field_value
    (405) empty -> .
    (97) field_value -> . identifier_list COLON component_value
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    CASE            shift and go to state 587
    RBRAC           reduce using rule 405 (empty -> .)
    ID              shift and go to state 18

    identifier                     shift and go to state 76
    fixed_part_value               shift and go to state 593
    variant_part_value             shift and go to state 594
    field_value                    shift and go to state 595
    identifier_list                shift and go to state 591
    empty                          shift and go to state 589
    field_list_value               shift and go to state 701

state 691

    (89) field_list_value -> fixed_part_value SEMICOLON variant_part_value SEMICOLON .

    RBRAC           reduce using rule 89 (field_list_value -> fixed_part_value SEMICOLON variant_part_value SEMICOLON .)


state 692

    (273) packed_conformant_array_form -> PACKED ARRAY LBRAC index_type_specification RBRAC OF . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    identifier                     shift and go to state 92
    name                           shift and go to state 702

state 693

    (275) unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF name .
    (48) name -> name . DOT identifier

    RPAREN          reduce using rule 275 (unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF name .)
    SEMICOLON       reduce using rule 275 (unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF name .)
    DOT             shift and go to state 189


state 694

    (273) packed_conformant_array_form -> PACKED . ARRAY LBRAC index_type_specification RBRAC OF name

    ARRAY           shift and go to state 703


state 695

    (276) unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form .

    RPAREN          reduce using rule 276 (unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form .)
    SEMICOLON       reduce using rule 276 (unpacked_conformant_array_form -> ARRAY LBRAC index_type_specification_list RBRAC OF conformant_array_form .)


state 696

    (275) unpacked_conformant_array_form -> ARRAY . LBRAC index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> ARRAY . LBRAC index_type_specification_list RBRAC OF conformant_array_form

    LBRAC           shift and go to state 704


state 697

    (274) index_type_specification -> identifier DOTDOT identifier COLON . ordinal_type_name
    (122) ordinal_type_name -> . name
    (47) name -> . identifier
    (48) name -> . name DOT identifier
    (16) identifier -> . ID

    ID              shift and go to state 18

    ordinal_type_name              shift and go to state 705
    identifier                     shift and go to state 92
    name                           shift and go to state 519

state 698

    (160) variant_denoter -> LPAREN field_list RPAREN .

    SEMICOLON       reduce using rule 160 (variant_denoter -> LPAREN field_list RPAREN .)
    OTHERWISE       reduce using rule 160 (variant_denoter -> LPAREN field_list RPAREN .)
    END             reduce using rule 160 (variant_denoter -> LPAREN field_list RPAREN .)
    RPAREN          reduce using rule 160 (variant_denoter -> LPAREN field_list RPAREN .)


state 699

    (72) array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC .

    SEMICOLON       reduce using rule 72 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC .)
    RBRAC           reduce using rule 72 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC .)
    VALUE           reduce using rule 72 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC .)
    RPAREN          reduce using rule 72 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC .)
    END             reduce using rule 72 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC .)
    OTHERWISE       reduce using rule 72 (array_value -> LBRAC array_value_element_list SEMICOLON array_value_completer SEMICOLON RBRAC .)


state 700

    (91) variant_part_value -> CASE tag_field_identifier COLON expression OF . LBRAC field_list_value RBRAC

    LBRAC           shift and go to state 706


state 701

    (92) variant_part_value -> CASE expression OF LBRAC field_list_value . RBRAC

    RBRAC           shift and go to state 707


state 702

    (273) packed_conformant_array_form -> PACKED ARRAY LBRAC index_type_specification RBRAC OF name .
    (48) name -> name . DOT identifier

    RPAREN          reduce using rule 273 (packed_conformant_array_form -> PACKED ARRAY LBRAC index_type_specification RBRAC OF name .)
    SEMICOLON       reduce using rule 273 (packed_conformant_array_form -> PACKED ARRAY LBRAC index_type_specification RBRAC OF name .)
    DOT             shift and go to state 189


state 703

    (273) packed_conformant_array_form -> PACKED ARRAY . LBRAC index_type_specification RBRAC OF name

    LBRAC           shift and go to state 708


state 704

    (275) unpacked_conformant_array_form -> ARRAY LBRAC . index_type_specification_list RBRAC OF name
    (276) unpacked_conformant_array_form -> ARRAY LBRAC . index_type_specification_list RBRAC OF conformant_array_form
    (277) index_type_specification_list -> . index_type_specification
    (278) index_type_specification_list -> . index_type_specification_list SEMICOLON index_type_specification
    (274) index_type_specification -> . identifier DOTDOT identifier COLON ordinal_type_name
    (16) identifier -> . ID

    ID              shift and go to state 18

    index_type_specification       shift and go to state 621
    index_type_specification_list  shift and go to state 622
    identifier                     shift and go to state 679

state 705

    (274) index_type_specification -> identifier DOTDOT identifier COLON ordinal_type_name .

    RBRAC           reduce using rule 274 (index_type_specification -> identifier DOTDOT identifier COLON ordinal_type_name .)
    SEMICOLON       reduce using rule 274 (index_type_specification -> identifier DOTDOT identifier COLON ordinal_type_name .)


state 706

    (91) variant_part_value -> CASE tag_field_identifier COLON expression OF LBRAC . field_list_value RBRAC
    (84) field_list_value -> . variant_part_value
    (85) field_list_value -> . variant_part_value SEMICOLON
    (86) field_list_value -> . fixed_part_value
    (87) field_list_value -> . fixed_part_value SEMICOLON
    (88) field_list_value -> . fixed_part_value SEMICOLON variant_part_value
    (89) field_list_value -> . fixed_part_value SEMICOLON variant_part_value SEMICOLON
    (90) field_list_value -> . empty
    (91) variant_part_value -> . CASE tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC
    (92) variant_part_value -> . CASE expression OF LBRAC field_list_value RBRAC
    (95) fixed_part_value -> . field_value
    (96) fixed_part_value -> . fixed_part_value SEMICOLON field_value
    (405) empty -> .
    (97) field_value -> . identifier_list COLON component_value
    (14) identifier_list -> . identifier
    (15) identifier_list -> . identifier_list COMMA identifier
    (16) identifier -> . ID

    CASE            shift and go to state 587
    RBRAC           reduce using rule 405 (empty -> .)
    ID              shift and go to state 18

    identifier                     shift and go to state 76
    fixed_part_value               shift and go to state 593
    field_list_value               shift and go to state 709
    field_value                    shift and go to state 595
    identifier_list                shift and go to state 591
    empty                          shift and go to state 589
    variant_part_value             shift and go to state 594

state 707

    (92) variant_part_value -> CASE expression OF LBRAC field_list_value RBRAC .

    SEMICOLON       reduce using rule 92 (variant_part_value -> CASE expression OF LBRAC field_list_value RBRAC .)
    RBRAC           reduce using rule 92 (variant_part_value -> CASE expression OF LBRAC field_list_value RBRAC .)


state 708

    (273) packed_conformant_array_form -> PACKED ARRAY LBRAC . index_type_specification RBRAC OF name
    (274) index_type_specification -> . identifier DOTDOT identifier COLON ordinal_type_name
    (16) identifier -> . ID

    ID              shift and go to state 18

    index_type_specification       shift and go to state 652
    identifier                     shift and go to state 679

state 709

    (91) variant_part_value -> CASE tag_field_identifier COLON expression OF LBRAC field_list_value . RBRAC

    RBRAC           shift and go to state 710


state 710

    (91) variant_part_value -> CASE tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC .

    SEMICOLON       reduce using rule 91 (variant_part_value -> CASE tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC .)
    RBRAC           reduce using rule 91 (variant_part_value -> CASE tag_field_identifier COLON expression OF LBRAC field_list_value RBRAC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 19 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 40 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 40 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 63 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 107 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 107 resolved as shift
WARNING: shift/reduce conflict for DOT in state 150 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 158 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 158 resolved as shift
WARNING: shift/reduce conflict for DOT in state 224 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 315 resolved as shift
WARNING: shift/reduce conflict for DOT in state 320 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 434 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 479 resolved as shift
WARNING: shift/reduce conflict for DOT in state 512 resolved as shift
WARNING: shift/reduce conflict for RBRAC in state 534 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 546 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 597 resolved as shift
WARNING: shift/reduce conflict for DOTDOT in state 623 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 628 resolved as shift
WARNING: reduce/reduce conflict in state 442 resolved using rule (identifier_list -> identifier)
WARNING: rejected rule (name -> identifier) in state 442
